[{"hash":"ebd2dc237f7e2763aeb668af3b25a55ae2850fb2","date":"2015-03-21T15:04:09.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Initial commit\n"},{"hash":"a65aa588eb5514e64a6d7414e7bb2d8b7c81b353","date":"2015-03-21T15:06:54.000Z","author":{"name":"Debian Live user","email":"amnesia@localhost.localdomain"},"message":"Added first draft of white paper.\n"},{"hash":"93938f947b83a32180d48f85c76971d1628fd3a8","date":"2015-03-21T15:25:29.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Minor formatting change to first draft of white paper\n"},{"hash":"5a6b0acf6a0c13548b87adc74e2b50c01c2b66f2","date":"2015-03-29T13:41:06.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Fixed typo in white paper. Thanks to Trent Russell for pointing it out.\n"},{"hash":"b36d4efd5058ba3d04987d27200b57f0c461653f","date":"2015-04-01T20:26:58.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Final version of white paper.\n"},{"hash":"ecf0fd8cfd3b558cd6080157ae70c0de21deec6a","date":"2015-06-12T11:23:29.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Initial commit of ocaml code for Qeditas\n\nThe code compiles (via configure and make), but is mostly\nuntested. There is not yet code for the consensus part, for networking\nor for wallets. Also, there is no interface.\n\nThe code is a combination of parts of Egal (for type checking and proof checking,\nas well as the elliptic curve cryptography) and ocaml implementations of the\nqeditastheory Coq development. The implementation differs in some ways from\nthe Coq development, but eventually the two should converge.\n\nHere is a brief outline of what the source files contain:\n\nser.ml* : general code to handle serialization and deserialization of data\n\nhashaux.ml* : code used by both sha256 and ripemd160\n\nsha256.ml* : compute sha256\n\nripemd256.ml* : compute ripemd160\n\nhash.ml* : functions for hash values, different kinds of addresses and so on\n   The functions like hashpair, hashtag, hashaddr and so on are used to compute\n   hash roots of larger structures throughout the later code.\n\nhtree.ml* : hash trees -- in practice are used to store theories and signatures\n\nassets.ml* : code for the different kinds of assets\n   The assets include currency, bounties, ownership, rights,\n   and assets for publishing theories, signatures and documents.\n\nsecp256k1.ml* : code for the elliptic curve secp256k1 used by Bitcoin (largely taken from Egal)\n\ncryptocurr.ml* : code for computing base58 representations of private keys/addresses (largely taken from Egal)\n\nsignat.ml* : code for handling digital signatures for secp256k1\n\nscript.ml* : code for handling Bitcoin scripts and generalized signatures\n\ntx.ml* : code for transactions, unsigned and signed\n\nctre.ml* : code for ctrees (compact trees) approximating the ledger\n\nctregraft.ml* : code to graft a ctree, making it a better approximation of the full ledger\n\nblock.ml* : code for block headers, blocks, block header chains, and block chains\n"},{"hash":"f6b9049d373fed3f65e9635228a8e0a091f81f8b","date":"2015-06-12T12:14:07.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added makebytecode script as an alternative to using make\n"},{"hash":"a4151c8e29dd46e598af976be207ecd8b6e8e8d8","date":"2015-06-12T12:14:57.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added empty bin dir\n"},{"hash":"2c2c76957acf602fe9225f6a14929d4b66c3e596","date":"2015-06-13T11:59:25.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added OwnsNegProp. if a user proves not p or p -> False, then the user\nwill OwnsNegProp p. If there was a bounty on p, the OwnsNegProp can\nclaim it. Note that if the bounty is on not p, then the user should\nprove (in other words, must only prove) the prop 'not (not p)' instead\nof p.\n"},{"hash":"2dc4f893622ef6ce989b9aad19704104c5e9d6ae","date":"2015-07-07T20:11:49.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added consensus code\n"},{"hash":"35cdad73e7eb23993accf5766e110c7e739cba52","date":"2015-07-08T09:40:25.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added genesis stakemod and target code\n"},{"hash":"cfe9e5f0cb23399d5f5b5459fbc6f9d876d55441","date":"2015-07-08T10:01:53.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"minor change (refs)\n"},{"hash":"c0a979a26aa3d8ca80cac7672ecf502660dcd9f1","date":"2015-07-08T13:16:56.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"split header into data and signature\n"},{"hash":"29542fe3ed7b79e6f67671ede29cdd6b02347082","date":"2015-07-12T15:07:39.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed sign_ names to signat_ since sign_big_int is already a function in Big_int\n"},{"hash":"f5945159c47ad1c159f84ff3d43df94e1d321995","date":"2015-07-12T15:09:27.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added functions to compute payaddrs from hashes/p2pkhaddrs/p2shaddrs\n"},{"hash":"8b3445d371e31865f218386572c13dc29851a87b","date":"2015-07-12T15:15:34.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"updated block due to debugging during testing\n"},{"hash":"2c48d0bfd6335d8641c824097522f23be9956093","date":"2015-07-12T18:45:41.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed retarget algorithm\n"},{"hash":"eb767e54d6904e5f3c4af8f0a43edae09717ca81","date":"2015-07-14T09:30:37.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Added code to transform the ctree using a list of txs.\nThis will be used to transform using txs in a block instead of using one big tx for the block.\nThe reason is so that the asset id for the txouts can be known before the tx is included in a block.\n"},{"hash":"3f2990da8ffb32551b44fc66088ab547875003ec","date":"2015-07-18T11:14:40.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Added coinage (still experimental), changed the retarget algorithm,\nadded a timestamp to block headers (in addition to the delta time),\nadded code for the forfeiture of block rewards as punishment for signing\non two branches.\n"},{"hash":"4bd683b204b98701fff5a57a6dac5e45ee4d17a2","date":"2015-07-27T10:06:05.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"obligation now marks some assets as rewards subject to forfeit for double signing\n"},{"hash":"df5fd4eff8471ab5fcbfb662f159a46206164725","date":"2015-07-27T10:24:03.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Removed redundant information from the blockheader (the stake amount and birthday) since\nthese are already in the prevledger part of the blockheader.\n\nFactored out the important part of check_hit to be a function check_hit_a that can\nbe called before the blockheader has been created.\n\nChanges to retargetting and coinage code. Coins now age quadratically until they reach a maximum.\n\nModifications to forfeiture code to forfeit awards.\n\nFixed a bug giving the wrong value for rewards.\n"},{"hash":"c1401dff8ad8371487b5201a86dfcae7d260fa57","date":"2015-07-27T10:26:42.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added function to factor a ctree into a ctree and graft where the new ctree supports given assets\n"},{"hash":"1ccd7176e2e6d20383874e541ed237056f444061","date":"2015-07-27T10:30:18.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"print_ctree_all now prints more details\n"},{"hash":"163b17ba7791aaf77122507f4274ec4053f0042f","date":"2015-07-27T10:31:52.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"code to turn bitseq (bool list) into addr\n"},{"hash":"6d3e0fd38a16cdaf949678f9b5bc86fd607d2597","date":"2015-07-27T10:34:53.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"minor changes to ripemd160 code; failed to make it faster; ripemd160 is a bottleneck\n"},{"hash":"bf215780360681d15ac36ff501f011739bf5635f","date":"2015-07-27T10:36:20.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"commuted a logor because it made sha256 a tiny bit faster\n"},{"hash":"5ebddc1c6cfc2a0ab3b9d1ad55de04bdd0855963","date":"2015-07-27T10:37:35.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Changed checking of input signatures. Before a signature needed to be given for each input\nand in the same order as the inputs. As a result multiple signatures would need to be given\nwhen different inputs corresponded to the same public key. Now it simply checks if\nthere is a correct signature in the list of signatures.\n"},{"hash":"8d8cf99b5dbb5ad53ce69e6c092eaa4449f5bf37","date":"2015-07-27T10:47:13.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"argument of ripemd160round is () of type unit\n"},{"hash":"cf6559403a1c9daa16d8480613a5f22fe08deda8","date":"2015-07-30T16:57:47.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"fixed serialization bug for pdoc, caught Not_found to raise CheckingFailure if a Prim has not been declared, return r in *creates*props_aux\n"},{"hash":"4d55d1283d41fe2fe442398169b430b981fc5ffb","date":"2015-08-05T20:06:06.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed hexstring to give lower case\n"},{"hash":"5182099de7c6fcecabd934ca8d2c3eb34e62dee1","date":"2015-08-05T20:07:54.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"exception CheckingFailure was declared twice\n"},{"hash":"8fad1b384550b3c2dc25d1b396d734e76797aed3","date":"2015-08-05T20:08:36.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"fixed reference in comments\n"},{"hash":"ab64e28cbc7a85eb3f4a0582244e0459e3defe3c","date":"2015-08-05T20:19:58.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Changes to the representation of big ints in scripts.\nSignatures are represented using big endian 2 * 32 bytes for (r,s)\ninstead of in DER.\nFixed the OP_CHECK_MULTISIG* bug so that it does not require an extra unused argument.\nThese changes mean the scripting language will differ from Bitcoin's, but this should\nnot affect most p2sh addresses. In particular, ordinary multisig p2sh addresses should still work.\nChanged the endorsement message to just be \"endorse <Qeditas address>\"\ninstead of the longer \"Qeditas endorsement <Qeditas address>\".\n"},{"hash":"6dfacf42bf6b9edf8eb44fa52b25ef7f395aa1a3","date":"2015-08-05T20:24:49.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added code to compute y for point on the curve given x and whether or not y is even\n"},{"hash":"3524a7bc7235000d7fb0497fa792b89f701bc4bf","date":"2015-08-17T11:17:23.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"bug fixes found during testing\n"},{"hash":"7436e071195401c5c1f07f5cfc4fa0233d58c43e","date":"2015-08-20T12:01:43.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"exported BetaLimit and created TermLimit; number of betas and term traversal steps are limited by beta_count and size_count before corresponding exceptions are raised\n"},{"hash":"36b1a4e4286a7820e937362cc83e5d6e10a9c7c6","date":"2015-08-20T17:16:37.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Added MIT License\n"},{"hash":"37641d53326d5ff1c3c619044e392e02be8057ad","date":"2015-09-02T12:40:11.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Added more informative exceptions in mathdata.\nInstead of raising CheckingFailure in the following situations:\nNotKnown is raised if something is given as an axiom but is not yet known in the theory.\nUnknownTerm is raised if a parameter is given but no corresponding term is known in the theory.\nUnknownSigna is raised if a signature is required but isn't found.\nSignaTheoryMismatch is raised if a signature is required but is in a different theory than the current document.\n"},{"hash":"c22ee35e2f4256c216f240190ab0470cb1ba762f","date":"2015-09-03T21:53:23.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added comment about obligations determining who can collect bounties\n"},{"hash":"d4c1d75c937b52c2c4bb455ba6cb473de92c6e92","date":"2015-09-03T21:53:48.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Fixed two bugs in checking signatures of transactions spending assets with obligations.\nChanged the functions to insert theories and signatures to be indexed by the hash\nof the theory or hash of the signature instead of the hash of the theoryspec or signaspec.\n"},{"hash":"e127f77601e871c05f58dbcd3d638e5bd7e0077a","date":"2015-09-12T21:25:50.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added config.mli to hold location of the default data directory\n"},{"hash":"5b6e5649a461942b2f5bb43ad19858d56efd8124","date":"2015-09-12T21:28:57.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added function to hash a 'bitseq' (bool list); used to hash ctrees in ctre\n"},{"hash":"6609059c4a0440d1a5fd4f1d0684185e4c011534","date":"2015-09-12T21:32:22.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"modified the functions to compute what objs and props are used to wrap the theory specific versions with a tag\n"},{"hash":"8a975ea21d85331aecb91ddc437f12ac45ce37a2","date":"2015-09-12T21:33:50.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed the (state independent) validity test to ensure that\npublications are sent to the pub addr determined by the hash what is\nbeing published; also ensured Markers are only sent to publication\naddresses, since ownership is now used to record types of terms in\ntheories and what propositions are known in theories.\n"},{"hash":"a529e313bc71f76d092a40092b05c05237f7125e","date":"2015-09-12T21:49:55.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Several bug fixes revealed during unit testing.\n\nThe most significant change was that abbreviation nodes in ctrees\nare named according to a hash of the ctree, not its hashroot.\nThis is necessary since many different ctrees can have the same hashroot,\nand the abbreviation should be clearly identifying which of these is intended.\nThe hashroot is still saved as the abbreviation node so that the hashroot\ncan be computed without expanding abbreviation nodes. Abbreviation nodes\nare stored in files (named by the hashval) in the data directory.\nThe variable holding the location of the data directory was moved from\nctre to config.\n\nAlso, ctree_reduce_to_min_support needed to be rewritten to traverse properly through\nleaf nodes so that ultimately the nehlist will be abstracted. The way it was written\nbefore, all leaf nodes not at level 0 (in practice, all of them) would keep the full nehlist,\nwhich is unrealistic. The Coq version (qeditastheory) still corresponds to the old\nversion which does not minimize leaf nodes enough.\n\nOther changes refine the test for when a ctree supports a transaction.\nPublications now need to be new (checked by ensuring the leaf of the ctree\nat the publication address is empty). When an ownership asset is in the output,\nwe now first check whether a corresponding asset is in the input (so that ownership\nis being transfered).\n\nThere were also some minor bug fixes.\n"},{"hash":"15360f8691410ab6292aad0c7aaa17e74d822fae","date":"2015-09-12T22:06:11.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"updated makebytecode to compile config\n"},{"hash":"534c407eb98d90a70e5df856867d556806cb11c8","date":"2015-09-14T13:08:53.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"fixed a bug in ottree_lookup that often caused it to fail to find the empty theory\n"},{"hash":"5cedff4dd651eeaa8f8a219b7c5ebfeee0cad575","date":"2015-09-14T13:08:59.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Changed rights_mentioned code to wrap hashes objs and props with the 32 and 33 tags.\nChanged output_creates_props to consider axioms in theories as being 'created' so they\nare ensured to have owners as props after the theory is published.\n"},{"hash":"45923c49babc2b4d76fb2ee30a8b63fe9b8d6818","date":"2015-09-14T13:13:31.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"print_ctree_all prints more info about the assets at the leaves; removed old ctree_reduce_to_min_support accidentally left from previous commit\n"},{"hash":"ae57d20e6498b5d5b9736c037cc348c5f969f8aa","date":"2015-09-14T14:37:52.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"fixed minor bug in Makefile\n"},{"hash":"2ab23b6ff4de96ce3599eeecf7893738b6d22d5c","date":"2015-09-14T14:39:50.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"renamed factor_assets_ctree_cgraft to factor_inputs_ctree_cgraft\n"},{"hash":"1b8c36218ccdcf0d65f09a72093c8a22a34da0e2","date":"2015-09-15T18:54:21.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added placeholder files for net, qeditascli, qeditasd\n"},{"hash":"eb022e1df28f3aad105f302d155135cce9dbae91","date":"2015-09-15T18:55:27.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added misc serialization code\n"},{"hash":"7b7eaf773ee79e2977a5417b48f2137804788f69","date":"2015-09-19T10:28:04.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added code to archive or remove ctree abbrevs once they are no longer needed\n"},{"hash":"691e56112ae51e3876a9b28b9b75c7a15ff52e00","date":"2015-09-19T10:29:10.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added code to compute the new cumulative stake given the old cumulative stake, the current target and the delta time\n"},{"hash":"05d07f2edb1074ab77a3ad16cfeeb86737041cb6","date":"2015-09-19T17:30:59.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"bug fixes to *_unused_ctrees code\n"},{"hash":"731f4673f7cd8d561d1e9e0c9a0bc6757d870cd3","date":"2015-09-29T09:53:55.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added function to compute the address from the Qeditas address string\n"},{"hash":"fdd898f8317027e4ce9ae7b8a22c565e7774afe2","date":"2015-09-29T09:55:35.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"exposed functions ctree_pre and ctree_addr to look up a position in a ctree; exposed print_hlist\n"},{"hash":"fe9271b8e7fee04b253dc5611ca500784772dfdd","date":"2015-09-29T09:58:48.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"modified octree_S_inv and ctree_pre to expand abbrevs when necessary; required rearranging where the serialization code occurs\n"},{"hash":"b75ead694146aeb11a1000c166810a16c97d34e8","date":"2015-10-01T12:53:47.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed staking so that three kinds of currency assets stake differently:\n\n. unlocked (None obligation) - matures after 512 blocks and then ages quadratically\n for a few months to reach a maximum age (exception: those from the initial distribution\n have birthday 0 and start at maximum age)\n. reward (obligation unlocking at later block n; marked as reward) - matures after 512 blocks\n and then ages like the unlocked case until 32 blocks before it will be unlocked;\n once it reaches the almost-unlocked stage it cannot be used to stake anymore\n. locked (obligation unlocking at later block n; not reward) - matures after 8 blocks\n and then reaches maximum age until 32 blocks before it will be unlocked;\n once it reaches the almost-unlocked stage it cannot be used to stake anymore\n\nOne reason for handling the \"locked\" case this way is in case there\nare very few stakers during the initial 512 blocks before the first\nstake rewards become eligible to stake.  With very few stakers and the\nold rules, there was a good chance of reaching a deadlock during those\ninitial 512 blocks. With the new rules, someone can spend some of his\nor her initial distribution to several locked addresses which will be\nable to stake within 8 blocks.\n"},{"hash":"1187b98d72136d2c8899123abf4ce0d0471f34bf","date":"2015-10-02T19:09:17.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Started to put in the infrastructure for configuring the daemon, starting threads and making rpc calls\n"},{"hash":"0976fc9604a80c714810a00c0583f317fe7309c1","date":"2015-10-02T19:10:57.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added rpc compilation to makebytecode script\n"},{"hash":"19842c70b29a89e6dd418c08b3862f217f9000f3","date":"2015-10-04T05:19:24.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"moved coinage code to ctre so that a new function print_htree_to_buffer can print the coinage\n"},{"hash":"e43316aad4624dc76be03330c224624748df2535","date":"2015-10-04T05:20:13.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"modified privkey_from_wif to also return a bool indicating if the key is for the compressed pubkey\n"},{"hash":"5bdba39ba76fa7823503dc855c6546895788848c","date":"2015-10-04T05:21:10.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"beginning of handling of wallets and related rpc commands\n"},{"hash":"4f90e39c926576ef501d774604c0f0b1fa4ef8e9","date":"2015-10-04T12:24:27.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"new functions to handle btc wifs and btc addresses\n"},{"hash":"8071c182a787b71964f90b4babe25aa4ba9521c0","date":"2015-10-04T12:24:50.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"rpc commands to import btc wifs and addresses\n"},{"hash":"20f66e00a15412e54e3aec8ca42906458f12b866","date":"2015-10-04T12:25:05.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"more dependencies for rpc\n"},{"hash":"feaef3d222655549a41eb9e52bce7af75eeea602","date":"2015-10-04T21:14:34.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed 127.0.0.1 to loopback\n"},{"hash":"d0c8b19fb37ee04eee86760a7b6c88079eaa9537","date":"2015-10-04T21:15:09.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"exposed hash160_bytelist and eval_script from script so rpc can use them\n"},{"hash":"99a3d6d1be0c5fcbe998ae1729fcc8a86ad6335e","date":"2015-10-04T21:15:45.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"more rpc commands in progress, wallet importing commands\n"},{"hash":"1b4ad3c9379b83ec8e930942a7585c507d87c7ac","date":"2015-10-05T19:15:18.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"code using alarm signals to prevent hanging while waiting for connects/input; alternative to forking listeners\n"},{"hash":"a0351ab79fe1412dc2e4ff1bfc26ca2287f5f0ab","date":"2015-10-05T19:54:50.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"more changes to support having one process that listens without hanging\n"},{"hash":"0d3c0e89e8dae15e115a2eef34ae2f49854b8dd6","date":"2015-10-05T20:11:31.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"debugging code to make connections over socks4\n"},{"hash":"80d02e34f395f787122c791b0f30c1a31b98dc8f","date":"2015-10-07T13:41:37.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added msg type and serialization code for communication; renamed rpc to commands\n"},{"hash":"f8b44519661db9774743337d10b02514ba1fb1f6","date":"2015-10-07T15:49:07.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"modification to configuration; no more rpcport, but added ipv6 bool and maxconns int\n"},{"hash":"2c4572a62e3a00a041d70bd66a61ba0b47e190ea","date":"2015-10-07T15:49:56.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"extract_ip_and_port now also returns a bool to indicate if it is ipv6\n"},{"hash":"88dd4368a104ceafd8f99a81ae0edb29268e92f5","date":"2015-10-07T15:50:19.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"initiation of connections now performs the handshake\n"},{"hash":"1e7a57265774b734d52a6071b4ad89097957bd05","date":"2015-10-07T16:04:22.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"flushing stdout while testing handshake\n"},{"hash":"5abe11ebddc500d647433e4b6aba9ae007729f2b","date":"2015-10-07T17:33:52.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"prints for debugging socket conns\n"},{"hash":"d9d148c94ea30d3391926378a3b83211e63a603f","date":"2015-10-07T17:56:08.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"really passing messages, changed rec_msg to rec_msg_nohang\n"},{"hash":"f370f749adfbd873966bb82bd9a4c856115cd636","date":"2015-10-07T18:15:16.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"more for first ping-pong test\n"},{"hash":"905f1b6c32cae0b0c635fc1d0869d0e0554dc63f","date":"2015-10-07T18:31:03.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"print when ping-pong failed\n"},{"hash":"1c784cf9551050b5c61516465335af7f33df565e","date":"2015-10-07T18:54:47.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"handling receiving multiple messages at once; eg if a Ping is received before an awaited Pong\n"},{"hash":"9cc21e8f073b328ba7d7914842ca34f78541d160","date":"2015-10-07T19:15:57.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"debugging ping pong, still fails when race condition occurs\n"},{"hash":"4ed11140cd4b0aabc9ee9003cccae63cd5c80276","date":"2015-10-07T19:26:58.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed ping pong handling again\n"},{"hash":"bb83d1140e1fb09536ff16ee5b3bc8737db89155","date":"2015-10-07T19:49:22.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"catching exceptions that are currently causing qeditasd to die when connections are lost\n"},{"hash":"462ac839d6b249c23b69cc102baad9f1d15fd07a","date":"2015-10-07T20:00:28.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"flushing stdout for debugging\n"},{"hash":"523fcfea25148d08693807f1aaa4806623696f32","date":"2015-10-09T06:22:05.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"print when rejecting due to maxconns (testing ping pong)\n"},{"hash":"b67b0fd529accd79af39889787907c21dc536ffd","date":"2015-10-09T14:04:28.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"New type rframe for frames to be shared with remote nodes;\nnormalize_frame creates an rframe from a frame\nand rframe_lub combines two rframes to give the rframe that\ndescribes what at least one of the two rframes supports.\n"},{"hash":"033bf6889f13b45e23a41bf89d02a1e17edf19bd","date":"2015-10-09T14:05:53.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added serialization of strings to basic serialization code\n"},{"hash":"9f58eac865609725907764091dca2b7478963569","date":"2015-10-09T14:12:11.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"serialization of rframes\n"},{"hash":"ab554596affa58b28d6ffc9426da1ac29651d419","date":"2015-10-09T14:38:42.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"serialization for blockdelta and block\n"},{"hash":"3cd79c4f763fa83f7fdec4cfac1ce99f8d56a929","date":"2015-10-09T15:20:52.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"testnet bool in config\n"},{"hash":"4d8df85faf91672e9f768171e7549be7cc317fda","date":"2015-10-09T15:45:20.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"major reworking of message passing between nodes\n"},{"hash":"9696a8503ec3d8e295ea5b2908461b6c89ac19fd","date":"2015-10-09T16:56:39.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changes to connection state; updates to qeditasd to reflect the new msg passing code\n"},{"hash":"46ef65545d12fb4b85783139062da3d7c60ffb11","date":"2015-10-09T17:29:20.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"set default port for testnet to 20804\n"},{"hash":"75373c358b32193e0fbd2942e293a095d67b64df","date":"2015-10-09T17:34:15.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"catching IllformedMsg and printing more info\n"},{"hash":"0bea2215a4bfdb8dc5649e2ef5c9945b13a77a8e","date":"2015-10-09T17:36:11.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"split testnet fallback nodes from mainnet\n"},{"hash":"15a4356e63fac3918fc16d4e84233235712269bd","date":"2015-10-09T18:53:31.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"send_msg_real now flushes the channel; handshake wasn't working without it\n"},{"hash":"8e36599ee01a99abe09c70b598cd9948f787e939","date":"2015-10-09T19:04:48.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"fixed bug in rec_msg_nohand; first byte of payload was being lost\n"},{"hash":"a6b7928bf5e0cd6e0653d60a3407af7c3dab7519","date":"2015-10-09T20:14:05.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"got rid of mistaken RFLeft and RFRight constructors in rframe; added rframe_filter* functions\n"},{"hash":"71006155a1e1118c9147dd0ec3f25bd2447ea2a1","date":"2015-10-09T20:15:02.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Added MCTree message to send ctrees; partial handling of GetFramedCTree msg\n"},{"hash":"685534a1e0be86b430162f0032edd74436049d37","date":"2015-10-09T20:37:05.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"rframe_filter_leaf expands abbrevs now\n"},{"hash":"8aa10452975e627079f882d163116aa98719d213","date":"2015-10-09T20:52:11.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"bug fixes to *frame_filter_leaf\n"},{"hash":"ae0df87e8fb710b131c2eadb9896a9e1647cebf3","date":"2015-10-09T20:53:22.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"bug fixes to *frame_filter_leaf\n"},{"hash":"b51812c5cc035a90d83c7375bbde17d598618dd0","date":"2015-10-09T21:57:27.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"expanding abbrevs in *frame_filter_ctree; might need to do so for *FAll as well\n"},{"hash":"03eb75cd103c03f48d7b6ecdd9af0d2d71dbabd9","date":"2015-10-10T15:09:51.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Added int64 to Inv list to include the block height.\nSplit first_height into first_header_height and first_full_height so that\na node can keep up with more of the header history than the full history\n(this is now advertised with the Version msg).\nAdded globals in qeditasd to keep up with recent data: stxs, ctrees, block headers,\nblock deltas and block deltahs (with only hashes of stxs in the block delta).\nWhen connected nodes request data, look for it in recent data.\nIf it isn't there the request must have come with a block height. The block height\nmight be enough to find it in a file, assuming it's part of the history/ledger\nthat the node is keeping.\n"},{"hash":"cbfe85ade72e61268b053de54004d8c081b40e99","date":"2015-10-10T15:44:42.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added config vars for seed and lastcheckpoint\n"},{"hash":"9b445b91fbf576753e31b21dc99b735f8c7501f3","date":"2015-10-10T16:36:36.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"set default testnet seed (at least for now) to the last 20 bytes of the hash of bitcoin block 378200\n"},{"hash":"ea55701c6e26b9bb336f76a91d20a36a27a4e0ea","date":"2015-10-11T00:58:25.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added code for a separate staker process in qeditasstk.ml\n"},{"hash":"ea4c52f3bacfc8cacc52d8e7675eb42de66c67dc","date":"2015-10-11T00:59:38.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"exposing code to check for hits so the staker can check conditions separately during the search\n"},{"hash":"343090f7ddcca233d9b4ee09c54c434a2f06e215","date":"2015-10-11T01:00:20.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"getting rid of rpc code; starting to replace it with commands (printassets, importprivkey and importbtcprivkey)\n"},{"hash":"3e141a6775c0191d225bc7357e8aeb8bfc0f4b90","date":"2015-10-11T01:00:58.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"code for qeditasd to start the staking process and communicate with it\n"},{"hash":"eb3899af915b6f5bf026b167499924389c2469ef","date":"2015-10-11T23:05:35.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added config vars to specify a local frame for saving parts of ctrees\n"},{"hash":"08d42b5883bdfe6ba7f12d7cedffa2456ace0a3e","date":"2015-10-11T23:07:14.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Changed max_target to be a ref and exposed it in the interface.\nThis is so it can be set later. In particular, the default for\ntestnet can be different from the one for mainnet.\nExposed the cumul_stake so that the cumulative stake can be\ncalculated while staking.\nCreated and exposed genesistimestamp which will be set to\nthe second at which the network starts. (Again, this will differ\nfor testnet vs. mainnet)\n"},{"hash":"e046331d6942d6279f3589f28c7958c0851169c8","date":"2015-10-11T23:11:37.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"code to create a specified frame and set it to a global ref localframe; also wrap_frame which forces the top of the frame to be an abbrev\n"},{"hash":"3870ccb4d83308257df9045b8b509dea1183c1f3","date":"2015-10-11T23:12:47.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"stop staking once the earliest possible next staking opporortunity has been found (with current best block)\n"},{"hash":"3a6728ba0e5bdad3984e746e910b2dbbafecce32","date":"2015-10-11T23:13:53.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"code added to keep up with the state, to choose a block to stake on top of, and to create blocks when the possibility arises\n"},{"hash":"a2b79cfb41caffb2bc5d4a5a142737456361c874","date":"2015-10-13T01:51:09.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"removed frame related config vars in favor of commands for modifying the current local frame\n"},{"hash":"dd990c239396e472bd1026300fe114d59ffcf88f","date":"2015-10-13T01:52:02.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"commands for modifying the current local frame\n"},{"hash":"f3f374e9395c93ef5eba061cab746ea10c636901","date":"2015-10-13T01:53:18.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"importing of endorsements, command to show the Qeditas address corresponding to a Bitcoin address, handling current local frame\n"},{"hash":"b4268c6d675709abe3bb0cc6d732dc4ffcdec4f3","date":"2015-10-13T01:54:35.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"fixed a bug in seralization of 256 bit big_ints\n"},{"hash":"5b2e7c0b39dd13173e7245cfbff8be5f416c67e5","date":"2015-10-13T01:55:35.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added variant signature functions *_a to work with recid and fcomp instead of the byte combining them\n"},{"hash":"c3f76fe2a33dcd9c7569de6de5589e21765b4437","date":"2015-10-13T01:56:47.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added reward_locktime for locking rewards for roughly 4 months; added localframe var and functions to modify it\n"},{"hash":"d96e40475adce5eddd85ef43bb34fd64784a13b1","date":"2015-10-13T01:58:59.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added possibility of signing blocks by an endorsement (only for p2pkh to p2pkh)\n"},{"hash":"afe9b4be353b052815b7478a8339eae591aecacc","date":"2015-10-13T02:01:16.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Ping/Pong set to happen after 90 minutes of inactivity (was 60s for testing).\nModified code to use endorsements to stake in addition to stake addresses for which\nthe node has the private key. Endorsements are the safest way to claim\nthe initial distribution. Bitcoin private keys do not need to be imported into the wallet,\nonly the signed endorsement to a Qeditas address for which the user has a key.\nFor testnet, endorsements are signed as\ntestnet:endorse <Qeditas address>\n\nThe sorted list of block headers now prefers blocks staked locally if they have the same\ncumulative stake as other blocks.\n"},{"hash":"cdd404e582c2a89af23e49cae75ad22a94331399","date":"2015-10-13T02:05:27.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"new dependencies in Makefile\n"},{"hash":"2ad9876abf1b724dcece67eb774b69e0d3244431","date":"2015-10-13T20:26:06.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"mostly prints for debugging\n"},{"hash":"d1f7ce5b73d25e1988ee45ec2d344ad4002925a4","date":"2015-10-13T20:26:56.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"major additions to how frames relate to ctrees and how they're saved and retrieved\n"},{"hash":"bc3ac53f91ef752487067e593b20f853b3ff9a47","date":"2015-10-13T20:27:39.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"moved some globals from qeditasd to net, handling block header messages\n"},{"hash":"f470a8caeeb9e320a35e3caed51fc390e923cfe3","date":"2015-10-13T20:28:22.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added ways to send 'remove all' and send the next permitted timestamp to the staking process\n"},{"hash":"ea3ab49f2a3a5cf4fa5fd56cf842115416d46171","date":"2015-10-13T20:29:30.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"moved much of the globals needed for staking to net; added code to decide whether to publish a block and when to restart staking on top of a different block\n"},{"hash":"cf79b897790f56c037fe4b246dc68ab0b5370276","date":"2015-10-13T20:52:16.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"moved some print statements about when staking is started\n"},{"hash":"4e649270b312a6b75025d513f533d835e63bfc66","date":"2015-10-14T04:02:11.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"updated the genesistimestamp and seed\n"},{"hash":"e349728c4081fa9b0ea629138d1329db470c8c12","date":"2015-10-14T18:23:47.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"set genesisledgerroot to the hashroot of the ctree for the init distr; added eq_tinfo (since eq_big_int must be used for comparing targets)\n"},{"hash":"7b094fec825127a90bb9784eaa654293c79476d6","date":"2015-10-14T18:24:39.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"reject headers with a timestamp in the future\n"},{"hash":"6eec1a36056c996f73dd05649d061675a6c56242","date":"2015-10-14T18:25:25.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Added code to check if blocks are valid successor (valid genesis for block height 1).\nThe genesis block creation needed to be modified to make the targetinfo match\nthe genesis targetinfo.\nThe code to give random numbers was modified to give pseudorandom numbers by\ngetting 512 bits from /dev/random when qeditasd starts and then using sha256\neach time a new random number is needed.\n"},{"hash":"b428e533102ed0332148698389bc3e8626eb0131","date":"2015-10-14T18:28:50.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"made genesis testnet target 8 times higher so finding test blocks can happen more quickly\n"},{"hash":"e5d697e5930e59c289f2c3c8fd88bd946f346dfd","date":"2015-10-14T19:28:40.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"accept blockheaders if they are timestamped <= 60s in the future, but don't choose to stake on top of them until their timestamp passes\n"},{"hash":"e593e10423bd89975c3ff930966ec00fdd7a62c6","date":"2015-10-15T13:41:18.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed the staking process so it dies when it's asked to stop staking\n"},{"hash":"a617fb248cc55a8ad3cf48c367fc963d22d532d1","date":"2015-10-15T13:42:51.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"modifications to keep up with what inventory remote nodes have and what has been requested;\ncode added to request and get blockdeltahs, blockdeltas and (signed) txs.\n"},{"hash":"64a10a6509c138c0498c8706d930e4f34b7b918e","date":"2015-10-15T13:44:00.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Changed the way the staking process is handled. It is now restarted\nas a new process each time staking is changed to be on top of\na different block. This makes recovery in case the staking process\ndies easier. In addition, code to request blockdeltahs, blockdeltas\nand (signed) txs has been added, with the purpose of constructing blocks\nbefore staking on top of their headers.\n"},{"hash":"6cca2a8a0acb00f7174597056bb30fc9f0f08ca6","date":"2015-10-15T13:57:56.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"when a block is reconstructed, transform the ledger and save the part of the new ledger relevant to this node\n"},{"hash":"d5ebd5e4d422086d961fca97aca17899d467ee3a","date":"2015-10-15T15:56:23.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"sending initial inv; keeping up with inv that's been advertized with sentinv\n"},{"hash":"e71028b349d4bdb3c1149c6a9a3f7cbf1537e7fc","date":"2015-10-15T15:58:04.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"removed some incorrect applications of 'not' that made known* behave like unknown*\n"},{"hash":"20fec762b2b027cab4f47ffd4510bbd2529ae486","date":"2015-10-15T19:51:18.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added new fallback node\n"},{"hash":"58b175f504463c58b39160a732b87c598074cded","date":"2015-10-16T15:49:42.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added help\n"},{"hash":"abb274e3850fbb89069ae48212013cae31702258","date":"2015-10-16T18:46:25.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"wallet function opened in binary mode\n"},{"hash":"4edb5748ab57a108e9c7f8ec521d3c0c0c218b7d","date":"2015-10-16T18:46:42.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"The code to initialize connections was moved from qeditasd to net.\nNow it is not blocking. Connections start as preconnections (see preconns)\nwhich are still going through the handshake. Also, peers send a GetAddr\nrequest after an initial Inv message. Both GetAddr and Addr messages\nare now handled.\n"},{"hash":"694f822c572174786a895506552d156e15069538","date":"2015-10-17T14:35:06.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"test for exists of peers file before trying to open it\n"},{"hash":"49a6235cccba95a79f45e3f7dd01a909397fcc0e","date":"2015-10-17T16:43:27.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"initialize_conn_2 must initiate the handshake (left out when refactored)\n"},{"hash":"fa88b7665533722e5f364ddfa35ddbbafb1160ca","date":"2015-10-17T16:49:58.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"rearranged code in net; moved myaddr to net\n"},{"hash":"f81b3eda031241762134003bcc7cac8c0dc8d591","date":"2015-10-17T17:55:29.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"debugging handshake\n"},{"hash":"b31632979396996a6b2668b63bbcdbd44a707966","date":"2015-10-17T18:19:46.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"debugging handshake\n"},{"hash":"155e6a339d458b0115bbfba2f8238de1c48ce3b1","date":"2015-10-17T18:28:42.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"debugging handshake\n"},{"hash":"c77c6073db350af5f6920a11758acaea5a2b6550","date":"2015-10-17T18:48:26.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"change order of what start staker does; added massive output for debugging\n"},{"hash":"90663f060c9afda69bd8f4032e887bbe14c1589c","date":"2015-10-17T18:59:18.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"debugging\n"},{"hash":"2e3271938833075785a41123c1e415e8826cbaa4","date":"2015-10-17T19:12:08.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"still trying to get handshake to work\n"},{"hash":"fd9e619828b2d272dfa00245b0708c172f395910","date":"2015-10-18T02:13:55.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"fixed a bug where exceptions other than Hung led to an artificial timeout later; fixed issues with handshake/sharing of peer info\n"},{"hash":"76e8265f6381770e79378dfbeaf89acd275ba3e2","date":"2015-10-18T02:14:59.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed association of roots with abbrevs via framehash to be stored in memory and in a single index file\n"},{"hash":"1be99557886f7c663e627af491bd4455b9c48c4c","date":"2015-10-18T02:16:02.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"new function datadir_from_command_line to set datadir before reading the config file, so process_config_args can be called after process_config_file\n"},{"hash":"5fc9deac7da80d3dfd12461a497b66073e9eeb36","date":"2015-10-18T20:14:17.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"when saving abbrevs, add them to rootabbrevs hash table too\n"},{"hash":"62efb67ac83b91fbbb1e91f93df459918c56d967","date":"2015-10-18T20:14:44.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"updated the genesis timestamp and target\n"},{"hash":"b6745fd1761f56133d21dd335183492a3518a44b","date":"2015-10-18T20:15:21.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added code for handling recenttxs\n"},{"hash":"2756fe18b515a80dc8a84d41739b08eb3923ccaf","date":"2015-10-18T20:16:28.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed how command line arguments are handled; added code for creating and signing txs\n"},{"hash":"4ef5ef6217b4c829a1219a1594152cd7b748bd92","date":"2015-10-18T20:17:42.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"fixed bug in cumulative stake\n"},{"hash":"84bdee1061e0feaa32a64695857e07eeecf3d788","date":"2015-10-18T20:18:17.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Changes to how connections are formed -- making the handshake nonblocking using preconns.\nAdded many print statements for debugging, and have it sleep for 1s before restarting\nthe main loop so that there is not too much info for debugging.\nChanges to how ctree abbrevs are looked up when the hashroot is known.\n"},{"hash":"922666f084b58af664666e3d531f453445407faa","date":"2015-10-19T21:05:48.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"new function blockdelta_blockdeltah to construct a blockdeltah with summary of txs via hash\n"},{"hash":"b542be4663f1c2e2d83530c6f40204f76cca7785","date":"2015-10-19T21:08:13.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed the way block headers that are orphans or have a future time stamp are handled\n"},{"hash":"27ab61e2ecb168345169c5fa13944e1576fd8f66","date":"2015-10-19T21:09:36.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"main loop now calls handle_orphans and handle_delayed;\nwhen start_staker does not know an abbrev for the ctree, try to create the transformed ctree using the previous block\n"},{"hash":"3262e274fbb2007ab0a0fe4bb69b3a547f672e11","date":"2015-10-24T20:34:32.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added check to tryconnectpeer to prevent multiple conns to the same node\nadded extra_inv to send more inventory with inventory messages to ensure block headers propagate\n"},{"hash":"4d8f66fff79fb6916e1dd0850f92c20e9bedb009","date":"2015-10-24T20:35:33.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added a phase in the main loop to search for more conns every 5 minutes if there are less than half of maxconns connections\n"},{"hash":"9ad33c33b7e94b5212dcfa657a5369a941385722","date":"2015-10-29T19:56:50.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"updating start time\n"},{"hash":"c0d4523c879d6d93ae05852afc58939cae54afdd","date":"2015-10-29T19:57:59.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"do not insert blockheader if it is not new\n"},{"hash":"49ecf886318cb721549144be8a94aa17479aa445","date":"2015-10-29T20:01:21.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"variant functions to return the pubkey when verifying a signed message\n"},{"hash":"21227466c6756a93391733cb9a4ab085b371673f","date":"2015-10-29T20:04:31.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"modifications to wallet to include (recovered) pubkey in endorsements;\nsome support for looking up ctree abbrevs from ctree roots;\nchanging txqueue to txpool (as a more accurate name)\n"},{"hash":"83fbefd2668ab3898ed163fe614659a1a408b523","date":"2015-10-29T20:06:12.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changing interface for commands to include pubkey in wallet endorsements and to use txpool instead of txqueue\n"},{"hash":"f3e0e64de2581dd79939f6f6fcaa20d8ea0e482a","date":"2015-11-03T17:09:14.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added currledgerroot to config\n"},{"hash":"8f9b1ae88c748aa1e6b82241fc4e32ba57eced30","date":"2015-11-04T01:22:15.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"loads the txpool file and recenttxs file;\ntries to publish signed txs when a block is staked;\nmodification of endorsements to include pubkey\n"},{"hash":"2f30c948a862a569038c0122a387907fa48374ac","date":"2015-11-04T01:32:36.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"update to printassets so that it will not be specific to the genesis ledger;\nnew code for signrawtransaction to handle signing by endorsement\n"},{"hash":"600a4c4b7803f934300017300984e5dcb2584a55","date":"2015-11-09T18:45:12.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"started writing a guide to the code for developers\n"},{"hash":"0813d01c4036d3a2c57980aa7459e6bb9b045299","date":"2015-11-13T15:34:31.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"refactored the tex for the techdoc so each chapter has its own file\n"},{"hash":"483896675a7ebbaab5b8eed45169e4e2d58ef40f","date":"2015-11-13T16:04:56.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added bibtex for whitepaper\n"},{"hash":"cf99bda3211e0ee26cdc11959ecc1ec07afa8813","date":"2015-11-13T16:05:14.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added cite of whitepaper in intro\n"},{"hash":"5fd4876f13ab064f5008b671d113bff712127863","date":"2015-11-15T17:23:53.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added index\n"},{"hash":"21ec7affc38e7e574c896bf4dd155844acc221bd","date":"2015-11-17T00:22:34.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"removed printmd from interface\n"},{"hash":"d00f90256b25fc17d618112acc3917f3fdb00599","date":"2015-11-17T00:23:10.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"wrote first draft of hash chapter; added table of contents\n"},{"hash":"a407e3812e05e3e04c53dff074793daf4fd1f139","date":"2015-11-17T00:23:54.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"ignore more latex generated intermediate files in git\n"},{"hash":"593aafb4aa5b84ab0991317032c1da73e3e852a9","date":"2015-11-17T20:54:20.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"updated refs for hashing\n"},{"hash":"e7037b6b01cce2020f30cdae92852fe1aea1a116","date":"2015-11-17T20:57:05.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"fixed bibtex bug\n"},{"hash":"3662c336d84a850f70689605d39d8ce8a37009fd","date":"2015-11-18T19:35:31.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"minor revisions\n"},{"hash":"1a846922792d31433360bfa979ed3e82a2b5d2ef","date":"2015-11-19T19:43:19.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"reworked intro to the techdoc and added references\n"},{"hash":"d9a1cc8e702a9c191c26a92761a0116956781324","date":"2015-11-19T19:44:08.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"started using serfunc macro to index serialization functions separately\n"},{"hash":"4d8c4176a2d68b3910dc4ac5ed11836a6a9bdbb0","date":"2015-11-19T19:44:32.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"serfunc\n"},{"hash":"fc936163671538ae8fed1b8aa00b738f483bae4c","date":"2015-11-19T21:34:48.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"first draft of cryptocurr chapter\n"},{"hash":"65b2b16e3f036b39079b72c42cd83e4ba01a7d8b","date":"2015-11-19T22:36:03.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Deleted some unneeded functions from the interfaces and in some cases from the modules.\nRenamed some functions in signat (to remove a suffix _a that was only there because\nthe original functions needed to be replaced with the _a version).\nMoved some of the comments from the code to the technical documentation.\n"},{"hash":"eddeec8ab16d127018594f4fbe4705f1ccfc351e","date":"2015-11-19T23:29:58.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"beginning of mathdata chapter\n"},{"hash":"cd0276a6ae7859b06c220ea287ea444026f60e3e","date":"2015-11-20T18:11:32.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"cleaned up mathdata and its interface, removing some small unused functions and not exporting that are only used internally\n"},{"hash":"43f1cec111d2c6974890f593cd3ba768b2ba0307","date":"2015-11-20T18:12:49.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added macro exc for exceptions\n"},{"hash":"6daa8b3f43d2cbdd172cbea849025c8bb0737c4f","date":"2015-11-20T18:18:56.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"skeleton of mathdata chapter\n"},{"hash":"a9a7976d111aa2c6ed6666b895d871eb07232d87","date":"2015-11-20T21:02:10.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"switched index and bib so bib is last\n"},{"hash":"f0352333045b891156a88d45e74b038fc6fa4a2a","date":"2015-11-20T21:02:35.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"skeleton of assets/tx chapter\n"},{"hash":"f0e71e344acd1b3eeccda345c880a9fcc250a7a8","date":"2015-11-20T21:40:57.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"skeletons for remaining chapters\n"},{"hash":"2845da83a76c80152436a71e0c68a31bee8f1680","date":"2015-11-21T16:20:02.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added script to run latex, bibtex, makeindex and dvipdf\n"},{"hash":"60a0e1ec811ca4b38669a8557d1fdf44047505ea","date":"2015-11-21T16:25:29.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added warning that net and top are unstable\n"},{"hash":"8332baa570a3319f25442eac2687b8a48c1e8697","date":"2015-11-21T16:25:58.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added notes about unit tests\n"},{"hash":"63005f9ea7cfc023a9ddca7deeee2ac1cf181a26","date":"2015-11-21T16:29:30.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added notes about unit tests\n"},{"hash":"94d7740b103f2ecdf92d7898d733569cc68fc159","date":"2015-11-21T17:16:36.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added pointers to Coq formalization\n"},{"hash":"430b666eb8ab2da528515f623e3aaa825fb9bb30","date":"2015-11-21T17:16:57.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"formatting\n"},{"hash":"be6b2aca4bca8c1b50d76373a67c51a387ab0bbc","date":"2015-11-22T19:37:57.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"significant content added to mathdata chapter\n"},{"hash":"e34ec8012d5f272b065d0b2fefa4e4cead4bc639","date":"2015-11-23T00:21:46.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"more on the mathdata chapter\n"},{"hash":"4c080528cf858095e154c52f5ea5da04d87a268a","date":"2015-11-23T00:23:06.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"deleted hashtheoryspec, hashsignaspec and unused hash roots\n"},{"hash":"af0f9ef579da25afcaf11ba03faf240c286cf506","date":"2015-11-23T16:19:39.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed identifier for signatures to depend on the theory as well\n"},{"hash":"e8c181a9c8e5fe43d5df583d77d24952e95acc57","date":"2015-11-23T16:20:49.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"started writing section about ttree and stree, but need to modify stree\n"},{"hash":"faffbe83a31af0277fa525fd3f0600159664bfb5","date":"2015-11-23T17:58:38.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed stree to only hold the signa; the theory is now committed to via the index location\n"},{"hash":"a925d86296c9800e37bc63680cebcf0274245088","date":"2015-11-23T21:13:54.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added section about trees holding theories and signatures\n"},{"hash":"9f36c32e11d5f205a5d18260b55de4dadc2c55d0","date":"2015-11-23T21:14:50.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"modified import_signatures and the functions that call it to avoid importing more than once\n"},{"hash":"c77fbd9e60db18ddee991cb51dc6e17715c7a742","date":"2015-11-25T03:18:48.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added descriptions of many 'dependency checking' functions in mathdata\n"},{"hash":"3710ac8d9711239610f137ae497f640733c07016","date":"2015-11-25T03:46:46.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"deleted some functions from mathdata and parts of full_needed_1 in ctre that used them (but did not need to)\n"},{"hash":"f0101fe2eff208b09c8d4860422ce6afbeec0ba6","date":"2015-11-25T21:50:21.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"fixed a major bug in tmtpshift which was also shifting term variables;\nthis would have almost certainly been a fatal error since it likely\ncould have been exploited to prove false.\n\nremoved unused shift and subst functions for proofs; added a function\nto reset the resource bounds and call it before checking signature specifications\nand documents.\n"},{"hash":"3817f0e4e123e4b1ee8fcff4cc6500d1e275ad2f","date":"2015-11-25T22:08:18.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"found two more potentially fatal bugs in tmtpshift: the type variables\nin the binders Lam and All were not being shifted.\n"},{"hash":"9b5d61007d31a9bbea2c51ffb2438b0d3f2fb3ba","date":"2015-11-25T22:57:52.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"minor rearrangedment to match documentation\n"},{"hash":"fda38f036f26eedda21ef47f7c4ae2047e7e7379","date":"2015-11-25T22:58:20.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added section on shifting, substitution and normalization\n"},{"hash":"b4262f4b9bff82952888a2a7a3286bbeade6aab6","date":"2015-11-27T01:26:43.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"minor revisions\n"},{"hash":"d6dfd9fe7f6f2535176c1298b871faeabac0b803","date":"2015-11-27T19:13:08.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added rules for checking\n"},{"hash":"531cb6d4dfd29955b8d7f9475b59b267232abda0","date":"2015-11-27T19:14:09.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"more bug fixes in mathdata\n"},{"hash":"f2f26a3f1896c09d751d815993e64ae4cc086daa","date":"2015-11-27T20:31:19.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed where reset_resource_limits is called\n"},{"hash":"f0fc8d01dde343b21fb905d48d5f56de41021c25","date":"2015-11-27T21:04:48.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed proof checking to expand all definitions; no more conv code\n"},{"hash":"952dbe97590c5e12f0553f7c7a7756d4e7932f84","date":"2015-11-28T00:25:23.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Fixed type on delta expansion code; checked for circular definitions\ncaused by situations like\nParameter d1\nDefinition d2 := d1.\nIn such a case, d2 has the same hash root as d1 and is no longer\nadded to the signature as a defn.\n"},{"hash":"6e00c042b591f388e4cac0f3968b02cd1a5cfdc2","date":"2015-11-28T02:49:19.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed pfs of poly props to insist the term and hyp ctxs are empty; changed metaprop to polyprop and made check_prop allow ctxs\n"},{"hash":"ad1e5b8ac02b3bf1d15268f52d680bbd71921c51","date":"2015-11-28T04:35:43.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"slight modifications to how polymorphic props and proofs are handled\n"},{"hash":"c52acdcdb465925f59682cde89b1486a813cd4ae","date":"2015-11-28T05:11:52.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"finished a draft of mathdata chapter\n"},{"hash":"68a3a5068dd684a4d6edfddd7fab11aa15c4119a","date":"2015-11-28T15:25:40.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"minor revisions\n"},{"hash":"0e366cbc138d971f1605c48e7967ca6410e3ee41","date":"2015-11-28T15:26:04.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added a check that the type in the allI pf step is a valid type\n"},{"hash":"e48c8d5335c4aff1a4c121eaf795d7373df56a2b","date":"2015-11-28T15:34:32.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added prop check in imp-intro case\n"},{"hash":"fcdbcef3d7a0ce891f4a73874e34eafa85e6ff01","date":"2015-11-29T04:48:17.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"wrote part of assets section\n"},{"hash":"393db252155a44b1930893acc0f6d02a8939800b","date":"2015-11-29T04:49:26.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added an assets_bday projection function, though it's currently unused\n"},{"hash":"3aef842e7a075e4621d86fbc567c695aec87ff9b","date":"2015-11-29T16:36:06.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"finished first draft of assets and tx chapter\n"},{"hash":"9c47ae783314795cf2f245dc10412cc13f057a21","date":"2015-11-29T16:49:04.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"minor additions to explain the intention of obligations\n"},{"hash":"9982058f8cb92b2d1fa35246076f87a3579f32b2","date":"2015-11-29T19:36:17.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added a small chapter about staking\n"},{"hash":"ffb8196f84d8c04fc47c6f2f697d09f4e9bbc384","date":"2015-11-29T19:36:42.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"wrote a small networking chapter; this code should be rewritten completely\n"},{"hash":"bb40ff615184c05cde1a10b7a989cda8be113f48","date":"2015-11-30T02:37:36.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"more info about how seed is used to initialize stake modifiers\n"},{"hash":"f3f81a402ec18261592babd1b075df51c80d0cff","date":"2015-11-30T02:39:20.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added exec name\n"},{"hash":"604f6e57d937d81731c51cabdb8592385c5eb2b4","date":"2015-11-30T02:39:46.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"draft of chapter about top level executables\n"},{"hash":"1150d21e4060a45739b09d1c571a3c05ca368114","date":"2015-12-01T21:47:18.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"typo fix\n"},{"hash":"8278c41606a716dbf3fc4fd71b609f602ec9405a","date":"2015-12-01T21:47:34.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added the techdoc itself to refs\n"},{"hash":"09bd7081446f187e5a1c965b5a2ca21486156c2d","date":"2015-12-06T17:48:04.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"modified coinage so that post maturity it the age is nonzero\n"},{"hash":"63f4471d4adf8fc9d750be7c5528288d689fba7a","date":"2015-12-06T17:48:20.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added subsection on coinage\n"},{"hash":"f5d6f100227b32967cac46fa33c2da9b12a714b6","date":"2015-12-06T20:48:39.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added more macros\n"},{"hash":"ec086a7e73d6ad07d3bc2ca4701dcaaa698b61af","date":"2015-12-06T20:49:00.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"wrote subsections on hlists, ctrees and frames\n"},{"hash":"50f3eec75b435f7e4f100282822d53b3132a7610","date":"2015-12-08T03:27:13.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"extended subsections for hlists, ctrees, and frames\n"},{"hash":"018d96d49dff3281ac0a9eb9f8e71e34be84e206","date":"2015-12-08T03:59:37.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed reward_locktime to depend on the block height and halve until it's a reasonably small number (128)\n"},{"hash":"fd380ccb026c536319abb8dd826e5374eee35ec0","date":"2015-12-08T05:11:37.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"comment change\n"},{"hash":"233287b3fa315750878dd4a93ff7cf984507aa9d","date":"2015-12-08T05:12:00.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"exported exception InsuficientInformation\n"},{"hash":"d9b6e165737454456082fd8b779e7113bc6af995","date":"2015-12-08T06:16:37.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"finished describing the frame related functions in ctre\n"},{"hash":"1f951b3a7eeb1acc40a6f9a5bbed873a857d8866","date":"2015-12-08T17:16:23.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"finished a draft of ctre chapter\n"},{"hash":"74c00d35c17393ab2e18753f1857de2e1801a0ba","date":"2015-12-09T23:31:06.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"coqfile macro\n"},{"hash":"f40585445dfa16ffbd494cc18b820f79b4a2dc1e","date":"2015-12-09T23:31:29.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"adding description of when a ctree supports a tx\n"},{"hash":"6397217c02e95b38d8286f0cc5cb6d1382353964","date":"2015-12-10T00:37:28.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"clarified that lock height is not relevant for support but for signature checking\n"},{"hash":"a0884140c828e5e3e13ad10461264b9c0511b72e","date":"2015-12-10T00:38:14.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added comment about output address support\n"},{"hash":"46eac3e947f4278ec4738a879d2412050567f3b5","date":"2015-12-10T07:00:29.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"reworked support check so that transferred ownership must have nonreward obligation\n"},{"hash":"e57800444564676470b9e4bb7cfe00f19760bf07","date":"2015-12-10T16:55:18.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Split assets section into subsections, adding a subsection about\nsupport for ownership preassets at term addresses.\n"},{"hash":"502105ea1094193054661e5a1b73559e77aee2a8","date":"2015-12-10T18:11:26.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"removed requirement for signatures to spend bounties and markers\n"},{"hash":"9277b59d05c6493989ccd22e048f042cd50a2a82","date":"2015-12-10T18:12:31.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added check that all markers in tx input correspond to publications in tx output\n"},{"hash":"382b0abf0e5377ca1f1552962d995aa36bb7f203","date":"2015-12-10T18:13:05.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed subsection on supports to subsection on creates\n"},{"hash":"b84a3f32946b5dcc22f9bc7b1676cbc8500732f1","date":"2015-12-10T18:13:31.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"finished first draft explanation of when a ctree supports a tx\n"},{"hash":"65d6beb919cdbf2dafd8efe185433e6327263708","date":"2015-12-10T23:38:16.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"fixed typo that indexed src/unittests as a file instead of a directory\n"},{"hash":"e6ff758bb53da223d86e37107c1a7146a3577078","date":"2015-12-10T23:41:31.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"mistyped dir macro as directory\n"},{"hash":"32bbee7759afcce9688c8b4cb1cb83d0b8ff5397","date":"2015-12-12T21:50:56.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"deleted genesistimestamp; first deltatime fixed at 600s\n"},{"hash":"eff8b1002f651de228a0171e282d361b8e1a7391","date":"2015-12-13T00:20:33.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"fixed check_poforfeit to check that the two stakers are the same,\nand fixed a typo\n"},{"hash":"4e8b77cb8075356696d24ada7f9d01316a599cbd","date":"2015-12-13T05:09:10.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"reorganized valid_block_a, changed it to ensure ownership can't come twice from two outputs in all txs\n"},{"hash":"fd2b25adc17ee6a505755fe13f8a479961d82aca","date":"2015-12-13T05:29:32.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"finished draft of block chapter\n"},{"hash":"37cdb17994c2c10b428be44349f4c7e3bc1960b0","date":"2015-12-13T14:35:54.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"reverted some changes to the checking of validity of blocks, regarding double ownership\n"},{"hash":"ce10cdde128e049debb673a8fb856fb73b1cf727","date":"2015-12-13T15:04:58.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"minor revisions\n"},{"hash":"6f297ef9e6fd4e7ccce530cebaaa431d97a99b17","date":"2016-01-12T19:17:16.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"added some code for qeditas networking to rely on qednet\n"},{"hash":"027a6a1854a6b2c5a0761575886fee585e5f69c0","date":"2016-01-12T19:23:27.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"typo\n"},{"hash":"e029e1c2a25d1b06d89d66e273224579e4c53eb5","date":"2016-01-12T19:27:46.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"exposing hexsubstring_int8\n"},{"hash":"5bdeac17d5c56c68dbb6ee1cf2a0eb822223a405","date":"2016-01-12T21:14:47.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"updated initial ledger root; modified qednet to use testnet if qeditas is using testnet\n"},{"hash":"e8096d688c1165e1c75727e12c3a2e768f70a753","date":"2016-01-13T06:16:14.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"added initfn arg to qednetmain to be called after qednetd is started but before the main loop\n"},{"hash":"abf2ac24ff612121d95e5c17cdb87249f991b52e","date":"2016-01-13T09:27:48.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"added int8_hexstring to help convert arbitrary bytes to hex\n"},{"hash":"1fe5a456a0081996f24cbfa8132fa4fbae9e24d1","date":"2016-01-13T09:28:31.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"commented out much of qeditasd and added a call to qednetmain in net to do the work\n"},{"hash":"3dfbba74ad2cdb7b04cf7c2ad1037194a5a57c7a","date":"2016-01-13T09:29:26.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"added more code to handle headers\n"},{"hash":"aa1708bb734ca8fe43551d0ebe273226ffdbaac8","date":"2016-01-13T10:27:01.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"changed the int8 functions to be hexstring_string and string_hexstring to do the full conversion\n"},{"hash":"75b530711189b525274d1e3b081fc5c0938f8c0e","date":"2016-01-13T10:27:40.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"moved qednetd to ctre; modified get_ctree_abbrev to query qednetd instead of looking for files\n"},{"hash":"34786123f9a8aaaff6db0555dee4c9accbe525f5","date":"2016-01-13T12:57:17.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"changed serialization of frames so that FBin nodes only serialize one child if both children are the same\n"},{"hash":"1921de75d617a3cf634b5e262db7d085decdc1ac","date":"2016-01-13T14:32:43.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"changed hashframe so it doesn't recompute when two children are the same\n"},{"hash":"b5b9362f7d3a57ac5ff8f43ad5032f32f5501776","date":"2016-01-13T17:02:58.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"removing calls to load_root_abbrevs_index\n"},{"hash":"7b893fd2f37a96dd16a260ec2a966df446b423f4","date":"2016-01-13T17:03:39.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"changing how root-frame pairs are associated with abbrevs to use db; changing how ctree abbrevs are saved to use db\n"},{"hash":"3e0ac83ca3f15d24160238799a31cdf0ac7baec9","date":"2016-01-13T17:20:52.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"changed default frame to be the one from the initial distribution that follows the full ledger with abbreviations at first two bytes for p2pkh and p2sh addresses\n"},{"hash":"aba9f32b7c77c7ce90f0420b41d35ef61c8b1217","date":"2016-01-13T17:22:12.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"new exception GettingRemoteData to indicate that data from peers is being requested and the call may succeed later\n"},{"hash":"bb742436478703cf348c1933c40fc61802833abb","date":"2016-01-13T17:42:53.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"fixed the ledger root and the default path to qednetd in the configure script\n"},{"hash":"3251670e54e84944d2c5fa21ed455f1fafc81d98","date":"2016-01-13T17:43:58.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"fixed faulty type of getdata request\n"},{"hash":"b9fa451751b48f0f951e6ca5019291793041c4c4","date":"2016-01-13T17:44:25.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"print when init is complete\n"},{"hash":"42980c1bcbe9cb0010ff661e2b625338b73c0eba","date":"2016-01-13T18:08:44.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"changed qctreerootframeabbrev to qrootfrmabbr to keep from going over 12 chars\n"},{"hash":"7f8362c7a0e8ab15e40006d123709f2d36297a5e","date":"2016-01-14T09:05:45.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"modified printassets to retry when it needs to request remote data\n"},{"hash":"5b27f39ff00806e9cc745d7aed32a4e8790c4cfd","date":"2016-01-14T09:18:55.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"using open_process_full for getdata in an attempt to make stderr output from qednetd invisible\n"},{"hash":"49856a6ebb675237e7948eca084970c9e87393f4","date":"2016-01-14T09:19:29.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"flush 'wait' message\n"},{"hash":"599e039992b32967636b5e8bdb86084bcdf1f628","date":"2016-01-14T09:20:12.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"help message for importwatchbtcaddr was incorrectly written as importbtcwatchaddr\n"},{"hash":"649f4240dd9322285fc336bd038700e8bdf0773e","date":"2016-01-14T12:17:38.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"added code to get and validate the block delta; started handling thytree and sigtree\n"},{"hash":"9728767c078a3dddd3d41c94898d8bab041ce12b","date":"2016-01-15T11:07:58.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"changed valid_block_a to set variables to record the new theory tree and signature tree; used in net to keep up with the trees; wrote find_best_validated_block\n"},{"hash":"3093a293dbcf18a4b1b2603c40a8f43b0b416d22","date":"2016-01-15T11:54:14.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"deleted old (no longer used) code from net and qeditasd; started modifying call to staking process in qeditasd\n"},{"hash":"67e2d970f2631d835b3297ab0f7e6d5fcced1c53","date":"2016-01-15T14:38:54.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"fixed a big with adding ctree abbrevs via qednet\n"},{"hash":"0f07ca734557333e0ede4764ee043fec714b3323","date":"2016-01-15T14:40:00.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"added code to publish blocks and stxs; extended blocktree to point to parents and remember recent stakers (to prevent double signing)\n"},{"hash":"51c4c4a253a9ce9d201b70679e5f146b72309476","date":"2016-01-15T14:40:27.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"added code to handle staking (ported from old code)\n"},{"hash":"de28af04572fc8a86d7f1dafe76b14d3a4d68fbf","date":"2016-01-15T17:36:17.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"added eq_node; updated genesis timestamp\n"},{"hash":"69dd3c1792b917393a986f2bc6224d3f823aaf9f","date":"2016-01-15T17:37:14.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"compare nodes with eq_node; added temporary debugging prints\n"},{"hash":"06c5931d35cbb428faea7a9413593aa015444244","date":"2016-01-15T18:23:49.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"when giving up on validating a node, set waitingonvalidationsince to None\n"},{"hash":"74df62e62f153276aaa570a25504fd1090b50638","date":"2016-01-15T18:23:57.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"staking log\n"},{"hash":"6f503b56a2752d13ec8187c3c01369fc8501ee16","date":"2016-01-15T18:27:59.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"bug fixes in stakelog\n"},{"hash":"58f8551b01084153ac77a72c3d8df8047e217b54","date":"2016-01-15T18:32:08.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"staker was not multiplying target by coinage, so it's not clear it ever worked before\n"},{"hash":"6df26ecc1fbab200bdb24cf58c215c9859f21b0e","date":"2016-01-15T18:48:34.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"changes to use .qeditas/testnet instead of .qeditas when using the testnet\n"},{"hash":"0f4b32875d8ee6935436aa4716b910a1735517c4","date":"2016-01-15T18:51:34.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"set testnet when calling the testnet staker\n"},{"hash":"318f95fa4847d59ac930c1d9e609fe5410fa7f48","date":"2016-01-15T18:56:11.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"staker was not reading command line arguments or config file\n"},{"hash":"8d48f8ff07cdea9ce889a9afa8c4a7b2a69ee230","date":"2016-01-15T19:07:05.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"set testnet from command line arg only; not in config file\n"},{"hash":"b2b5c13a9af4a7758c89d23895fcfc4e5770003a","date":"2016-01-15T19:08:50.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"changed staker to check if it is testnet before opening the stake log\n"},{"hash":"1047eaea670a8afb137e6ba76c3364afb3ba47db","date":"2016-01-15T19:11:03.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"stop staking after finding a hit\n"},{"hash":"96b33f06896c4efdc9ba1800301c6ef9e09bf9d9","date":"2016-01-16T18:18:12.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"removed frames and removed CAbbrev from ctree in favor of indexing ctrees and cons cases of hlists by hash roots\n"},{"hash":"b58c467c9374ae2ece6f49fd5ffbb96993255311","date":"2016-01-16T19:14:59.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"changed some top level code to get rid of frames and ctree abbrevs\n"},{"hash":"ad23a5d83d4ae5353fbcdc34ef33c437797062d8","date":"2016-01-17T15:16:33.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"changed ctree element to consist of 9 levels instead of 1\n"},{"hash":"7045921cc39141af30ae0a88221362ff20a8ad95","date":"2016-01-19T12:30:29.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"Added a new case for hlist/nehlist: HConsH/NehConsH.\nThis case stores only the asset id instead of the asset\nand should be used when the asset isn't needed (but some\nasset further on the list is needed). An hcons 'element'\nshould always be of the form HConsH(h,HHash(k))\nor NehConsH(h,HHash(k)).\n\nAlso changed the hashroot for hlists/nehlists to use the assetid\ninstead of the hash of the full asset. This has the consequence\nthat ctree hashroots for the initial distribution will change.\n"},{"hash":"afaf51769e67cbfca342cebb6bb9e20dc17bfc22","date":"2016-01-19T12:32:46.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"modified hlist_reduce_to_min_support to approximate unused assets using HConsH with the assetid\n"},{"hash":"1694af8b2c5be545afc897c892096d36d5dad449","date":"2016-01-19T12:34:50.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"modified ctree_reduce_to_min_support to abstract the first asset at a leaf by the assetid if it isn't used\n"},{"hash":"bd4ad7b30ce6a1b31ae9c158cf8cc84a8e96473a","date":"2016-01-21T07:57:10.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"changed the initial ledger root since hlist roots were changed\n"},{"hash":"784dff8e4d94cc4dcb463a9e09eaea93e8299c1c","date":"2016-01-24T13:26:48.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"added stop command\n"},{"hash":"71b4f322609f03c6ca802eda359599542d5f0a70","date":"2016-01-24T13:49:24.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"updated genesisledgerroot in block\n"},{"hash":"df378d77957198a19a4ffcd6e0b44d7ac0808683","date":"2016-01-24T14:24:18.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"made the value of initial distribution halve along with block rewards, starting after 5 years\n"},{"hash":"4574165163dca0280afcc4baaf06687d3b4c12a7","date":"2016-01-24T14:49:16.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"fixed a bug where the first initial distribution 'halving' was actually dividing by 8\n"},{"hash":"3578e30acc64384c1642c6d34774e06a1c3382ff","date":"2016-01-24T19:09:22.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"octree_S_inv now tries to expand hashes like abbrevs\n"},{"hash":"6564be66282d0d15635d80436ca149e64b14c3af","date":"2016-01-24T19:12:49.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"changed ctree_reduce_to_min_support to expand hash nodes if possible\n"},{"hash":"1ca014abb281c50ee79d656b6f919cec321e3042","date":"2016-01-30T14:21:50.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"changed code to find minimal supporting hlist to expand hashroots for hlist elements and assets when needed\n"},{"hash":"5ab267f17a86f4978bc83fe67edea3c5594bd37e","date":"2016-01-30T15:00:04.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"more changes to update how the min supporting hlists are computed\n"},{"hash":"f58a1ec44f186a0be7c63bdd36472841dffabdf8","date":"2016-01-30T16:58:59.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"fixed a serialization bug in nehlist\n"},{"hash":"e215799bdc00bab477aedf557a50a2b48fd9c96f","date":"2016-01-30T17:00:27.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"only whitespace\n"},{"hash":"63859e74530821e9ce5a0af547b0e6d9c35a8a35","date":"2016-01-30T17:28:30.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"changes to the construction of block headers (esp re target info)\n"},{"hash":"b27ff89ab88432802fb01190c8a37bd739d3bfe5","date":"2016-01-30T17:34:25.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"printing exception from staker\n"},{"hash":"5a098250cdfe701f17a27ee74b86554283a05f62","date":"2016-01-30T20:23:58.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"changing which target info is stored in the blocktreenode\n"},{"hash":"e08581405837dfabf467eafa507071999c0eadc7","date":"2016-01-30T20:44:56.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"allow the least significant bit of the future stake modifier of the genesis block to be changed by the genesis staker\n"},{"hash":"61a0ba2a296dc4bcdaa56ba454b432afd9bce043","date":"2016-01-31T09:02:12.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"added initblocktree to net so that, eg, the testnet can be distinguished from the mainnet\n"},{"hash":"9a5edc27c69298a29ab586f17fe3650779398e67","date":"2016-01-31T11:18:28.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"set sigpipe ignore so problems can be handled as exceptions\n"},{"hash":"02a9f62fe03b8d8e7f2324f8404e0f8b9fd3002c","date":"2016-01-31T11:38:44.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"added new HConsH case to remove_assets_hlist\n"},{"hash":"63c425c2a4f279b3873cacf95de4e8c2cb13b474","date":"2016-01-31T15:04:31.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"changed factor_ctree_cgraft to leave hash ctrees associated with themselves as implicit\n"},{"hash":"4193f90b53ae49cafbd5d690835bf1c612c01142","date":"2016-01-31T16:12:54.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"added load_expanded_[o]ctree so that local elements of ctree are visible while transforming\n"},{"hash":"9699cc38963d7f45c741cb497a41cb0621b06f7c","date":"2016-01-31T16:27:20.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"rewrite save_ctree_elements to work with the 'implicit 9 level frame'\n"},{"hash":"e63a435c9d5fd7ca4ca34feb8e63fe2d9745212d","date":"2016-01-31T16:41:40.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"modified save_ctree_elements to make sure it only saves elements; not partial approximations of elements\n"},{"hash":"10135e1d90b63be68da114252ea95b03b4f9abfd","date":"2016-01-31T16:43:22.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"moved test ctree_element_p back to before it is used\n"},{"hash":"9512aa5c324c558cb40d39253d974663c19b4c27","date":"2016-01-31T18:07:47.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"fixed a bug in CRight case of save_ctree_elements[_a]\n"},{"hash":"13e3e5a2557aeafde4d1b55efacd4d65868bb7a0","date":"2016-02-21T18:50:33.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"expose serialization of targetinfo\n"},{"hash":"ee004021b360a0b520e4a2f22617053b025eedb1","date":"2016-02-21T18:51:03.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"if staked asset has default obligation, allow staker to choose new obligation\n"},{"hash":"1b6035d51296f602c3caaea22f8cbfce0cca3fd1","date":"2016-02-21T18:52:31.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"expose save_ctree for saving a ctree to a file (for debugging at the moment)\n"},{"hash":"2f1462677955c22fbef55134e61bcd6549277777","date":"2016-02-21T18:53:16.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"save_ctree_elements fixed to call aux function with 0 instead of 9 so that the root element itself is saved\n"},{"hash":"5a668ecbd7daf34789d9a453b3c5a98e0117250d","date":"2016-02-21T18:54:01.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"Several changes resulting from test runs of qeditasd with testnet staking.\n\nThe largest changes are as follows:\n\nThere are now files storing both headers and validatedheaders (as hashes)\nso that headers which were shown to correspond to valid blocks in the past\nneed not re-validate the blocks on initialization.\n\nDuring the initialization phase, the code for reading headers\ntries to recognize if qednetd is not ready and keep retrying once\na second until it is ready.\n\nblocktreenodes were changed in two ways: 1. The node now stores\nboth the previous target info and the current target info. The\nprevious target info is needed to check if the new blocks are valid\nsuccessor blocks. 2. The validation ref is now of type validationstatus\nwhich may be Waiting(float) (indicating the time from which the\nblock header has waited for a corresponding block delta to be validated),\nInvalid or Valid.\n\nAfter a block is validated, bestnode may be updated to be the corresponding node.\nThe usual case will be that the header is already the bestnode. However,\nif the block took more than 60s to be obtained and validated, bestnode\nmay have fallen back to a previous validated node.\n\nSome debugging print statements have been removed.\n"},{"hash":"d124a9122575a90c6e4f527d6950b884b4d87f01","date":"2016-02-21T20:43:25.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"add relaydata calls for headers and deltahs\n"},{"hash":"c32f0915693838c494ca8aa35628889d135d0304","date":"2016-03-25T10:26:09.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"if the first output in a coinbase has an obligation, then it should still be marked as a reward if it was before\n"},{"hash":"a3debb3164a7fe7aedfa0ec9486e427582e57a93","date":"2016-03-25T10:31:02.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"changed the default from leaving stakes unlocked to locking them at first; ultimately there should be configuration options for this\n"},{"hash":"002bad6571430db0e5cc95f104e0ff302c62b254","date":"2016-03-25T19:30:00.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"new branch to modify code to use threading and a console interface\n"},{"hash":"be3ebb9dec0437124dcdaf56e077696bef291417","date":"2016-03-25T19:33:39.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"updated Makefile.in for the new setup (qeditas.ml added, qeditasd.ml, qeditascli.ml and qeditasstk.ml will be deleted)\n"},{"hash":"b602243f18854185ae369d05a04f74d257aeaee6","date":"2016-03-25T19:46:08.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"initialization for the console interface; allow for empty string to be given for string config args (eg, empty prompt)\n"},{"hash":"45cc06b3266e9e61ec7e7a196e3f1bbc80e2a143","date":"2016-03-26T19:47:22.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"revived some previous networking code, modifying it to work with threads\n"},{"hash":"eb7566e3e5158b5a094a594ead84b978718746c2","date":"2016-03-26T19:53:43.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"added -I +threads to ocamlc for net files\n"},{"hash":"bc8cc9decaef4658f71c762ae015bb9091c4320f","date":"2016-03-26T19:54:04.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"newline after number of conns in getpeerinfo\n"},{"hash":"34186d8e045b75a89fb1aefee9976d599d3838fa","date":"2016-03-27T08:12:54.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"added utils module, handles log stream; net sends messages to log instead of stdout now\n"},{"hash":"8c330a29f1469abf70fa85abd366d932602fcfa1","date":"2016-03-27T08:18:50.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"changed when openlog is called, so we know if it's testnet\n"},{"hash":"d77a4e0a4e1987dfa4643a53d32a106201049da9","date":"2016-03-27T09:21:34.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"allow boolean config specs to leave out =1\n"},{"hash":"6cf0812ff8ea3bc090cdff5bccc20f228f9afbad","date":"2016-03-27T09:54:26.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"first code for netseeker thread to look for connections to the network\n"},{"hash":"77a9f644d52cadb1c8d2849cbb6949bcc578b5c3","date":"2016-03-27T15:41:36.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"revived more code from net (handle_msg, etc) and put code for handshake phase there; compute node's nonce\n"},{"hash":"f2d1327cb159c99865ba19e74c4e58ff18b58de0","date":"2016-03-27T15:47:20.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"explicitly check for self-connections\n"},{"hash":"c37d991dc238fb75cfbcf305b48a4ab770bf97ad","date":"2016-03-27T16:31:57.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"handling removal of dead connections\n"},{"hash":"27e180374776a0276132b1742276ed2c38160844","date":"2016-03-27T16:35:16.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"flush log for debugging\n"},{"hash":"33c4a62a5eade31d41c9d5b58b91c972b7b7bddd","date":"2016-03-27T19:57:22.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"added version module and made changes to connstate and handshake\n"},{"hash":"93e76dcbed88b56129fde16f191094c0571016a1","date":"2016-03-27T20:21:49.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"saving more information about connections; printing more with getpeerinfo\n"},{"hash":"deaa67ee2299f01c5837f2dd8e3f8d2183e5d358","date":"2016-03-27T20:53:47.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"added support for network time (offset by median skew of peers)\n"},{"hash":"8b1eaec3caa95fdbf529bd6c6271e9fc1a753987","date":"2016-05-03T19:29:55.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"netconns was missing in network_time; added node_timestamp\n"},{"hash":"04ca015458eb7ba724f78403dc1ae9b58ea19882","date":"2016-05-03T19:42:13.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"added staking thread; parsing of commands, etc\n"},{"hash":"208b7a78c192d876fcb24c125702cc00a31d33a1","date":"2016-05-03T19:58:48.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"added printassets_at_ledger command\n"},{"hash":"3a1b47b3ad0f6917e27a0fbfe526931fd1fc82ca","date":"2016-05-03T20:00:03.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"removed all references to qednetd (clam fork), replacing the database uses with a new db module, yet to be implemented; code to request data from remote nodes is also missing\n"},{"hash":"89c8a98e5bce4c8a62daa91c5247c635c5fe4226","date":"2016-05-04T19:20:56.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"file based key-value storage\n"},{"hash":"a7fb1f6c34933a7e7a42c8dd99da5bb002cc2c66","date":"2016-05-22T19:40:49.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"Implemention of key/value storage in files as module in db;\nUsed to create modules to store assets, (signed) txs, hcons elements, ctree elements, block (headers, deltas, delta skeletons)\n"},{"hash":"c576f0d741c9f708f6d90008af570fe7bcf9cbab","date":"2016-05-22T19:45:45.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"changed Hashtbl.reset to Hashtbl.clear to be compatible with ocaml < 4.0.0\n"},{"hash":"6c9c97c67ce7b1214ff94183044ec92c8c3dcb51","date":"2016-05-23T18:32:51.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"removed 1 digit from the base block reward; number of cants will be 10 less than before so that the total number of cants is a valid signed int64\n"},{"hash":"f536a7b256b14abcee99f8304db4684c7be9d84a","date":"2016-05-25T08:45:33.000Z","author":{"name":"Trent Russell","email":"russell@willmathforcrypto.com"},"message":"updated the root of the initial ledger\n"},{"hash":"7c3b5c0e5fb7e689e60a3bf2d379e3e4f2e3bb06","date":"2016-05-29T20:42:27.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added and updated sources for the Qeditas White Paper\n"},{"hash":"496d9fe7ecd8750b5408d293771fd845680ce608","date":"2016-05-29T20:43:00.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added ignore file for whitepaper\n"},{"hash":"32bb5da0eb0933681b8eedc7e4c7cbada8b9a21e","date":"2016-05-29T20:43:38.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Updated intro to reflect Trent Russell's coding contributions\n"},{"hash":"d1d76656160eafe434ed956b1a6c4f57520b219c","date":"2016-05-31T01:19:33.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"removed all references to frames; put in comments where new content is needed or content needs to be fixed\n"},{"hash":"1e1b8382f6e6ce478eb81d37dcd5736d6d38f416","date":"2016-05-31T01:28:44.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"updated burn cost for publishing theories and signatures since 1 digit of precision has been removed\n"},{"hash":"08353a4b8ab910336f21b70a23efebaeb83c326b","date":"2016-06-01T21:33:10.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"fixed minor bugs in bib\n"},{"hash":"7e22e3d9d8f48ad6410ec9c9c497bf1c04037931","date":"2016-06-01T21:33:35.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added currently empty chapter for the database code\n"},{"hash":"7de32372f4e3c971383c2cb233336c174784960f","date":"2016-06-01T22:59:11.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"wrote first version of database chapter\n"},{"hash":"663a17d5b8a0b4615fc509c21a12d518749de22b","date":"2016-06-02T14:01:59.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"fixed number of cants in theoryspec_burncost and signaspec_burncost (to account for removal of 1 digit of precision)\n"},{"hash":"e565de00b0101fe6174bdf444bc64bbe06034f8b","date":"2016-06-02T14:32:01.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"updated description of preasset_value to explain halving of unclaimed initial distribution\n"},{"hash":"8312f5369fa42f857b0ea1b57d56a90bc07dc3df","date":"2016-06-02T19:12:10.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"removed some unused code from ctre, updated the documentation for ctre, especially: removing frames and adding elements\n"},{"hash":"184e24f85b4bb3b90887a3d534d0958337d486cf","date":"2016-06-02T21:24:07.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed configure to create datadir (usually ~/.qeditas) if it does not exist\n"},{"hash":"5e837d94c82f09c8c19edcc8a69d8129ca7dfabc","date":"2016-06-02T21:25:35.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"moved get_asset to assets, which required moving GettingRemoteData exception to assets as well\n"},{"hash":"f618af09a0b784d05a06e02d34f5946a5fa8bb47","date":"2016-06-02T22:48:18.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"split database for signed txs into two databases: one for txs and one for their signatures, both with txid as key\n"},{"hash":"9a342a97c94c7fcf3f2a8aed4702f77b0499db59","date":"2016-06-02T22:50:45.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added documentation about databases for assets, txs and tx signatures\n"},{"hash":"c0995e9f506c79a21f86dbfa354de1f6d18d41c6","date":"2016-06-03T00:44:10.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"minor typo fix in ctree chapter\n"},{"hash":"44da01aa97f835ae5a4ccbad035208f235235f9f","date":"2016-06-03T01:44:27.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added database info for blocks; updated ledger root for initial distribution\n"},{"hash":"c6ec173bfd435ba631eef1b1f39dc76a5cd20c38","date":"2016-06-03T03:34:40.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added a commands macro\n"},{"hash":"4756adf924953659f714ecbf36b55e722fd26da3","date":"2016-06-03T03:35:05.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"rewrote most of the top level chapter to correspond to Trent Russell's changes\n"},{"hash":"496724a3ace1938e6116674babd6c453b57ab820","date":"2016-06-05T01:44:07.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Changed print_ctree to give the hash root of the hlist, if the leaf has it as an NehHash\n"},{"hash":"1df3df429715eca86c702b3858671fafbd613141","date":"2016-06-05T01:45:57.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added commands printasset, printhconselt, printctreeelt for printing this data from the database\nalso a command printctreeinfo that traverses an entire ctree starting from the root (looking up the elements in the db when possible)\n"},{"hash":"61261c29bb35c68bd73c20acb42e6ca5520580a5","date":"2016-06-06T03:03:42.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"fixed bug in defrag: new index file was not sorted; added checks before seek_in to avoid seeking beyond the end of the channel\n"},{"hash":"0d002fd04189f5034a718a3aac6b09d8c75e7308","date":"2016-06-06T03:35:53.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"reworked printassets to work reasonably when only part of the ledger is locally stored\n"},{"hash":"63484cb763a1ecefe125119067c161083591940a","date":"2016-06-06T18:51:53.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Fixed typos found by Russell\n"},{"hash":"a63e719a3156bc4332500619babe87799e9c95f5","date":"2016-06-07T00:51:30.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"split net into net and blocktree, where net comes early with few dependencies and blocktree comes later; both are unfinished.\nDisallowed starting qeditas without being on the testnet for now.\n"},{"hash":"cc80a484c1b7d4b13073caac1b19060aa5301cc6","date":"2016-06-07T00:54:04.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"deleted old unused code from qeditas.ml\n"},{"hash":"782bcb7a5b5a73f53945d31033ba1dabc6ed8f8e","date":"2016-06-07T13:12:04.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Removed Russell's fallback nodes\n"},{"hash":"f5bf953bbd821cef26504ff7c456da850bb4572c","date":"2016-06-07T14:07:30.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed version to 0.0.1rc1\n"},{"hash":"0121febf97c893ed90d291fee9c00c9036c0f5ad","date":"2016-06-07T15:18:53.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"fixed makebytecode script to include blocktree module\n"},{"hash":"53251074c290b7edb4375f5fc836f80ea3ffed59","date":"2016-06-07T15:21:29.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Updated README to give current status and example usage\n"},{"hash":"b1a0f637c574832d554fe73a40c09f2784722b70","date":"2016-06-07T15:22:09.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"bumped version to 0.0.1rc2 (second release candidate)\n"},{"hash":"786af1dd2424b1b80dcff2e8cd327c6532f0b2a1","date":"2016-06-08T01:48:35.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added msgtype_handler hash table for registering net msg handlers;\nthe reason is that many only make sense after the corresponding types (e.g., tx, ctre, block) have been\ndefined;\nalso rearranged message handling as needed. Only handshake phase is currently written.\n"},{"hash":"969a59500e24d12f88fade837bb34e02feca4556","date":"2016-06-08T01:49:13.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"removed old frame code (that was already commented)\n"},{"hash":"09f8749f5fe0c54164f8caa3950dc943c39f8ca3","date":"2016-06-11T18:46:34.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed default maxconns to 20\n"},{"hash":"d0cc93a21f86f19396e17a5be05a4b9b41dff20a","date":"2016-06-11T18:48:09.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"new version of staking code (modified from earlier version); according to tests it does not yet generate valid blocks\n"},{"hash":"9994ffe1af90e83b622ec8dde6f7aad960c9c98c","date":"2016-06-11T20:38:00.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"made valid_block* checks depend on extra target info argument (different from the target info in the block header;\ndropped prevtinfo and deltm from blocktree nodes\n"},{"hash":"f8e86b250753c1f4b10f7c593ff518108dba8b50","date":"2016-06-12T19:50:31.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"updated genesistimestamp while testing\n"},{"hash":"a6d8514037549208f6ea3c3636b66537d7e1e8a9","date":"2016-06-12T19:51:54.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed some hlist, nehlist and ctree to look up hashes in the local database if possible; all should be changed and the code should be more generic\n"},{"hash":"588d9087de17c636d818492fe5793fe91ce5ae53","date":"2016-06-12T21:38:48.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Added missing argument that was preventing Veracks from being sent\n"},{"hash":"6f8cd3930cdb03554ef62c76e650b030cffdec88","date":"2016-06-13T00:25:48.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added function to give block height of a node\n"},{"hash":"481df142d7e7e8b65d402bda234f796e6fd3467d","date":"2016-06-13T00:27:27.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"reworked some old staking code to work after the changes of the past half year or so\n"},{"hash":"832cc672dbbfcb7cc6690458945c6577a123871b","date":"2016-06-18T15:35:49.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed computation of nonce to check if /dev/urandom is available and use the current time if it is not.\nThis change was made because Windows does not have /dev/random.\nUltimately we need a way to obtain cryptographically secure random numbers under Windows.\n"},{"hash":"a345c7d49dfa3219bc00619d2b1de26254acbd1a","date":"2016-06-18T15:58:57.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed printing of assets to give the currency units in fraenks\n"},{"hash":"3ae613175805ea46ca04ce0cf9a261b54e4488f9","date":"2016-06-18T15:59:27.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"version number 0.0.1\n"},{"hash":"2aaf0ccb5fd6871d915619c846a3745d150f68f7","date":"2016-06-19T18:24:22.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"merge of work done since 0.0.1 on another branch\n"},{"hash":"e422524ae543ff0778151112880b7269c7f7b86f","date":"2016-06-22T21:18:21.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"modified Qeditas testnet addresses to be different from mainnet addresses (tQ..,tq..,tT..,tP.. instead of Q..,q..,T..,P..)\n"},{"hash":"43250efed5081645cccba195913357de3117f8c5","date":"2016-06-23T23:32:31.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"modified printassets to also print summed balances; moved fraenks_of_cants from ctre to cryptocurr\n"},{"hash":"c690448ef62e043949bb898ec95a3006defd76b1","date":"2016-06-24T16:43:50.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"reworked various lookup functions in ctre to take boolean arguments indicating if hashes should be expanded by looking in the local database\nand whether they should be requested from remote peers if not in the local database\n"},{"hash":"9d7ee90c471191e4eb2ab27a0b151cb831510c88","date":"2016-06-24T19:37:20.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"wrote obligation_string and preasset_string to get descriptions; depends on cryptocurr (for address strings) so the dependencies have been rearranged\n"},{"hash":"785a65e4c412c648f60b2ffdf660245095c1e32f","date":"2016-06-24T19:43:06.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"modified the functions in ctre for checking if a tx is supported to optionally expand hashes and request remote data;\nthis should not be used when checking if blocks are valid, but may be used when constructing a block (to include a tx)\n"},{"hash":"9d1d958f2c2bdc12de5a698f17f123f3e01cf9e2","date":"2016-06-24T19:44:09.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed txpool handling to keep up with which assets are spent in unconfirmed txs in the pool, so that we do not try to stake with those assets;\nadded printtx command\n"},{"hash":"5d41922c446f135248a041ece06e256be8459e34","date":"2016-06-24T19:46:55.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"modified the staking process to avoid trying to stake with assets spent in an unconfirmed tx;\nalso the fees for the txs to be included in the block are collected and added to the reward (requiring rearranging some code);\nfinally the code to handle checking the genesis block was treated as special (and had bugs) -- checking the genesis block is handled\nin mostly the same way as other blocks now\n"},{"hash":"4e4c8ea980ee2dc2d089e80ad422388bcff980bf","date":"2016-06-24T20:45:38.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"bug fix: hlist_lookup_asset_gen was stopping if an asset was abbreviated by its assetid (and exp=false) instead of continuing to search the rest of the hlist\n"},{"hash":"fb25673ec8ae4e804cdce7b87ec3c54f368139e1","date":"2016-06-24T21:32:02.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"remove txs from the pool if they are either invalid, the signatures are invalid or if the fees are negative\n"},{"hash":"7721eb09d691c3c844dbea8854f3db73c508116e","date":"2016-06-24T21:45:40.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"create a .lock file when starting to prevent multiple Qeditas processes; .lock file deleted on exit\n"},{"hash":"067448b390b7f3dab1202dbb55c388038d5ed5ba","date":"2016-06-25T00:36:58.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added function to compute the number of cants given a string representing a number of fraenks\n"},{"hash":"8e25c9aced598c48a88dcaa80f5b93ccb3ad426f","date":"2016-06-25T00:38:10.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"modified checking of signatures for txs to be of a modified hash of the tx if testnet (so that the signatures will be invalid on the mainnet)\n"},{"hash":"6f33f4ce6800d91b101ce38907678992f4ae50d6","date":"2016-06-25T23:16:35.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"exposed check_spend_obligation and check_move_obligation to check if a required signature has already been given before signing again\n"},{"hash":"f88088eb1794a90cd435b7125276de8ad6e0fb4c","date":"2016-06-25T23:17:46.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"new commands createsplitlocktx, signtx and savetxtopool\n"},{"hash":"b85a86a21baed37ddadb1652e1e21af1cecb2628","date":"2016-06-26T19:36:13.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added code to allow 'fake' endorsements in testnet; this is intended to allow me\nto give away testnet coins easily without changing the distribution\n"},{"hash":"ecd0fa6130374e030cd9bfcda28f91dfd43db54c","date":"2016-06-26T20:36:46.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"removed old, no longer used, top level files *cli, *d, *stk\n"},{"hash":"72d7e85a265ee94485990335797932c750dc6012","date":"2016-06-27T03:59:33.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added new conditions on validity of blocks:\nheaders must stake one of the first 50 assets held at an address and the ctree in the header must be the minimal\nrequired to prove the staked asset is there.\nblock deltas cannot be too big. at first this means the serialization cannot be more than 500K bytes, with this bound doubling with each reward halving.\nthe code for the reward halving has been factored into an 'era' function. there will be 43 eras, with the 43rd lasting the rest of time (no reward, max block delta size of 512M)\n"},{"hash":"f7dd8582734df19ea1406026b5d31b299c61a95d","date":"2016-07-03T02:04:04.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"blocktree depends on net\n"},{"hash":"d5db57e6ce8c86f7b89c8a41cc345a06de825e50","date":"2016-07-03T02:06:06.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"updated names of message types\nadded broadcast_requestdata\nexposes send and rec in interface\n"},{"hash":"0525e8ffae5086ab48280fd2eadea61a47406fa3","date":"2016-07-03T02:07:15.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"moved era function and maxblockdeltasize to utils. used by net to determine max message size\n"},{"hash":"10f5f25a266715a29ebb296b54009e64d14a8b24","date":"2016-07-03T02:08:40.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"modifications to signature checking of txs so it can be done independent of block height if necessary\n(giving an optional block height at which point the signatures are valid)\nadded message handlers for Txs and TxSignatures\n"},{"hash":"b514ffa980223b51262abaa23272e4d88a455792","date":"2016-07-03T02:08:54.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added message handlers for assets\n"},{"hash":"e2eacf13712c9d787cd530bf1aa34d991fc45a9b","date":"2016-07-03T02:10:25.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added message handlers for hcons elts and ctree elts, including broadcasting requests for missing items\n"},{"hash":"b950b1c7f44d35c00085ae3a1872bbe3540fd4c1","date":"2016-07-03T02:11:10.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"replaced some hard-coded ints for message types with calls to int_of_msgtype from net\n"},{"hash":"eb73f0ad327926fa787c5e52e2b36247f97d6d2f","date":"2016-07-03T02:12:21.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"setting netblkh when bestnode is set (also in blocktree, previous commit)\nnetblkh is a global in net which is used to determine the era and hence the max message size (max block delta size)\n"},{"hash":"6e68c4187ea81e0a4a2824b6e75ef9bc37189673","date":"2016-07-03T03:53:56.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"code to broadcast and receive new blockheaders; saving new blockheaders to pick up where left off when restarting\n"},{"hash":"6288fdf26ccef65619796ef04d68736624e53cd4","date":"2016-07-03T22:45:47.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"blockheader_succ_a no longer depends on the previous delta time, so the argument has been removed\n"},{"hash":"a58b9a3e152f4d19cf7d96586b052ca4674dc626","date":"2016-07-03T22:46:53.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"add node for newly staked block to blkheadernode hash table\n"},{"hash":"7a914136a6c7cd37e148079029652d66ccd00e7a","date":"2016-07-03T22:47:18.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"exposed blkheadernode hash table\n"},{"hash":"b79e2b78b68c464ae3f703b0466b4a954e6bc83f","date":"2016-07-03T22:47:58.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"updating and debugging code for handling new headers (either from restart or from peers)\n"},{"hash":"fd90e7d38206b24e86d8219a65368be1779c4cfa","date":"2016-07-04T00:56:04.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"deleted remove_hashed_ctree (from old code, no longer user)\n"},{"hash":"72a3ebb563e73c7a7a000f00efb5d5e3b004e1f4","date":"2016-07-04T01:40:33.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"modified check_tx_out_signatures to search the list of sigs instead of forcing them to be repeated in order\n"},{"hash":"1e0f5adba49cb56f16da39c6651d728493db0fcd","date":"2016-07-04T03:02:37.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"moved genesistimestamp to config; modified configure and setconfig to allow the genesistime to be set;\nadded a way for Windows users to set a random seed which is hashed to provide pseudorandom numbers when needed\n"},{"hash":"242fcb9d42c5fda9de815a96278f9de923055618","date":"2016-07-05T17:57:08.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed randomness to use the ocaml Random along with a user given seed (as randomseed), for everyone not just Windows users.\nIf /dev/random is available, this is used to generate a seed if none is given.\nThere is a function strong_rand_256 (currently unused) which should be used when real randomness is needed --\nbut it relies on /dev/random being available.\n"},{"hash":"9c04ac16728deb54012117afb46316a05de70fec","date":"2016-07-05T17:58:39.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed setting the node's nonce to use Random as well\n"},{"hash":"71c41d857427d8373719bc61ca03c1b2d966c39e","date":"2016-07-05T23:11:34.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"fixed deserialization bug for handler for msgtype Asset -- it was trying to read the assetid hashval twice\n"},{"hash":"6b24c5558b6f0cc2922ad8669e9b9a9fbc33ab88","date":"2016-07-06T00:16:16.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed broadcast_new_header to send the hash only, requiring peers to request the header\n"},{"hash":"b4acb0c21ba103979442ce35384b3330c0c23375","date":"2016-07-06T01:42:55.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added sending of tx id (hashval) along with the tx\n"},{"hash":"8e7dc3f1edfbe409a5f89241a088aa884ba40d01","date":"2016-07-06T01:43:44.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"modifications to how headers and inv in general is shared\n"},{"hash":"22787923c07c317e10ecf069e8d49eb39f03d072","date":"2016-07-06T01:44:33.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed Valid and Invalid status to ValidBlock and InvalidBlock status to reflect that it's for whether or not a valid block has been seen for a valid header\n"},{"hash":"b7e5b9efc4d665b11dbfc32682317cb8eb4e344b","date":"2016-07-06T17:54:16.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"cleanup; adding blockchain command to view recent blockchain, with some orphan info\n"},{"hash":"cfe96c593b79b61767b9a5dd7e9812b02cc269ed","date":"2016-07-06T17:55:26.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added Inv msg handler; just requests unknown headers for now; some debugging\n"},{"hash":"3f2090dce6ab148886df12e7641719ef290ced4f","date":"2016-07-06T17:56:09.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"int_of_msgtype was wrong (no longer inverse of msgtype_of_int); fixed\n"},{"hash":"4528c256b216b8c2061b144f291af2ab866d4b85","date":"2016-07-06T17:56:27.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"cleanup\n"},{"hash":"e2d5c316662285450cdab3a2acd59786bd446e9a","date":"2016-07-09T21:03:49.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed hash_blockheaderdata to hash with a tag to avoid potential collisions with other hashed data\n"},{"hash":"95c303f83d8565600fc561211ff77de8461a7c0c","date":"2016-07-10T01:21:44.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"modified txsigs to be in order and use references to previous signatures to prevent needing duplicate signatures;\nprevious version searched the list of signatures to find if a valid one was on the list, which is unreasonably inefficient\n"},{"hash":"c2ceab7949387a0019f7f700f5423ee691f50995","date":"2016-07-10T13:26:38.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"minor change in signtx code\n"},{"hash":"6bbf83390347de62092957c737d6d51ffa4d2bf2","date":"2016-07-10T13:26:54.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"encourage patience while obtaining random seed\n"},{"hash":"079be885afd5126d6d40f60b2164d0f3099bb1f8","date":"2016-07-16T22:25:42.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"updated code for connecting to peers and keeping up with known nodes; also code to keep up with banned nodes;\nalso fixed a bug with initializing Random from /dev/random\n"},{"hash":"d7880c2419d3249d462929951e087a167fe958b0","date":"2016-07-24T20:17:40.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"wrote sendtx;\nupdated and moved various message handlers;\nadded mutex in some places to avoid race conditions between threads;\nadded a sendqueue slot (and mutex) to connstate so that other threads add messages to the queue and a\nnew connsender thread actually sends them (in order)\nadded an Archived db to prevent nodes from requesting info that was purposefully deleted/archived because it was old\n"},{"hash":"708be42c1f6f4c97201fd300dc46464d20db3632","date":"2016-07-30T18:30:39.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"replaced Thread.delay in connsender with a Condition sendqueuenonempty included in connstate\n"},{"hash":"a82e1865324195294d1a874434022b839f6efdbe","date":"2016-07-30T18:48:46.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"deleted deprecated code from blocktree; added code to relay block/header info and so on\nand deleted corresponding commented (deprecated) qednet code\n"},{"hash":"4dba6d5560e13804758a0f952067c9d524fa6116","date":"2016-07-30T23:06:05.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"deleted validheaders file in favor of only having a headers file that gets validated again on initialization\n"},{"hash":"4673876bf9df3d931e8ed3c71605b1081aaa7792","date":"2016-07-31T02:56:50.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"reinterpreted hashes hlists/nehlists (HConsH and NehConsH) to mean the hash of an asset, not its id;\nthis required adding a newdatabase AssetH for associating hashes of assets with their ids, and new message types for\nexchanging this association\n"},{"hash":"20e5bfe5ba0caeef628576839764d9d1f384cc8c","date":"2016-07-31T15:55:49.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added check that the hashroot of prevledger successor block headers is the newledgerroot of the previous block header\n"},{"hash":"f996821ee4c4995fc8c294b0f8eaa82ea5c15963","date":"2016-08-02T01:56:53.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"modified assets db to index by hash of tx instead of assetid; updated ledger root\nsince the hlist depends on assets hashes instead of just asset ids\n"},{"hash":"6460d27191ccd50ecb92758739a49163d5abd971","date":"2016-08-03T19:54:26.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"fixed sending of assets as messages, since that hash and assetid are now different\n"},{"hash":"bb52d0a06b282ab2257f0bb4310a9c45ffbc8091","date":"2016-08-03T19:54:52.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"fixed some bugs leftover from the switch to using asset hashes\n"},{"hash":"42d57e9b4cc93539e4cdc9cc03872ebb29894a80","date":"2016-08-07T19:41:53.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added command dumpstate to save information about the state in a file to help with debugging\n"},{"hash":"7b4b24a8ed7555af6d737b2adf43a805b5fa8f04","date":"2016-08-07T21:48:46.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added code to check the validation status of a block header before staking on it;\nresetting bestnode if it has been waiting for validation more than 15 seconds\n"},{"hash":"29c298eda6e8fc70d9000102aafd5d804e5938a6","date":"2016-08-07T21:49:30.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added blocktree with code to find best validated node\n"},{"hash":"011024837db2c2e6b420407393b01c1ad46f9fde","date":"2016-08-11T22:41:26.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"deleted blockdeltah in favor of only having the blockdelta representation;\nreworked the sharing of block headers and deltas among peers (still not fully working)\n"},{"hash":"32db97f73e44df5518ad6c3361f44664b5120e90","date":"2016-08-11T22:42:22.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"?\n"},{"hash":"77319655ca444ef48154ef59abccb7b82ec95e71","date":"2016-08-13T19:32:01.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"increased the locked maturation time to 512 blocks to avoid a stake grinding attack\npointed out by ldc73 on bitcointalk\n"},{"hash":"26745538bbe81bd203ae35ccdfeea2542e015c7c","date":"2016-09-04T16:58:50.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added a great deal of log messages for debugging;\nfixed some race conditions, esp in the database code;\nmisc debugging\n"},{"hash":"4622085e1902354380273d3ccf2aaac2587cc4bd","date":"2016-09-10T14:05:21.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added threads dependency to db and blocktree\n"},{"hash":"28744b7a12d7f6f55f639b9b102f2f3b85a9f71c","date":"2016-09-10T17:18:43.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"modified valid_block check to return an updated theory tree and signature tree upon success.\nPreviously this was handled via updated global refs, but this is incompatible with having multiple threads\neach of which may be checking validity of different blocks (leading to race conditions)\n"},{"hash":"6a094acdac4034367b18179fab7e9fd7c31fe589","date":"2016-09-10T19:20:58.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed the database module type to include dbinit and implementation to be Dbbasic2 instead of Dbbasic.\nIt now uses hash tables to keep the full contents of index and deleted files in memory.\nThe index files are no longer sorted. The contents of the index and deleted files are\nread into the hash table upon initialization, when the dbinit functions are called.\n"},{"hash":"38f84f9f8353a66bd892958e22f89682c84fbcfc","date":"2016-09-18T23:00:54.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added checkpoints where privkey for signing is given by new checkpointskey option;\nchanged the db for headers to include an iteration function which replaces the old headers file for reinitializing on startup;\nmoved code for generating randomness to utils and sha256\n"},{"hash":"7a6d961a71a1171a9250aaa4c05c6282cc2c8241","date":"2016-09-24T17:09:00.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"removed unused currledgerroot from config\n"},{"hash":"5a74cc3b12e22be5305eae91e72d6e2b1df854c4","date":"2016-09-24T17:30:44.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"deleted misleading out of date comment about initialize_random_seed\n"},{"hash":"0773e69ecc1a2ebe10ef885b870de8875bd5c41d","date":"2016-09-24T20:35:10.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"removed unused code from db\n"},{"hash":"0748368c0a15a1f90fdf9f5f823c30c2efe1c586","date":"2016-09-24T21:30:14.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"extended inv_of_msgtype to include Checkpoint msgs\n"},{"hash":"dfef3c869d1d374dbbc03e1ef23bb72383bb6610","date":"2016-09-25T00:06:08.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"deleted rec_msg from net interface; removed unused broadcast_new_header\n"},{"hash":"5e657bfa78f8f296f865690039b6d5d50893dd31","date":"2016-09-25T02:21:34.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"changed behavior when the blockdelta for the first block is received\n"},{"hash":"4e24fd5f79943c554222516398f82b98d7e21927","date":"2016-09-25T02:23:05.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"partial update to technical documentation to reflect changes over the past months\n"},{"hash":"c586710cadc5a13c8dc4acf3ad03975760eaa433","date":"2016-09-25T23:51:42.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"removing extra log comments\n"},{"hash":"d9ab91c45995410c6d7f1588199e236bd41d31dc","date":"2016-09-26T02:11:14.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"removed old 'recenttxs' code from commands\n"},{"hash":"432b2981da73447f17015a9e5182ab6d82394cd2","date":"2016-09-26T02:11:48.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"removed connectpeer and connectpeer_socks4 from the net interface\n"},{"hash":"de5567a98d47e00569e71e77cf6608b62c066767","date":"2016-09-26T02:12:06.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"removed old testnet fallback address\n"},{"hash":"eaf867a2b6c1210871e3a2f9298914ed2e0fac4a","date":"2016-09-26T02:14:43.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"finished updating the technical documentation to reflect the changes in the code over the past few months\n"},{"hash":"e2df20f0d1c0de77069b3b9fd55be6f208f87c33","date":"2016-10-03T11:36:12.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"Restored Trent Russell's Dbbasic database implementation (since it requires much less RAM than Dbbasic2);\nDbbasic2 is also still in the code, and either implementation can be chosen before compiling the code.\n"},{"hash":"b0dfd031f0f4d81424a9e115f3c6bcce35f928e9","date":"2016-10-03T12:58:54.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"added an ip and port for a testnet fallback node\n"},{"hash":"dbc8583912a7c0fe4b08129c1969fe21c48a4f89","date":"2016-10-03T12:59:27.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"removed the text saying the fallback values are 'currently empty'\n"},{"hash":"91fed347d6d9c9ae3c40522a065110bb5d9f8777","date":"2016-10-03T12:59:54.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"explained that printassets might need to be called multiple times to fetch enough of the ledger tree to give complete information\n"},{"hash":"f4871bd20833cd08a215f9d5fc9df2d362cba410","date":"2016-10-03T13:31:26.000Z","author":{"name":"Bill White","email":"billwhite@bitmessage.ch"},"message":"assets are indexed in the database by their hashes, not their ids, and the hash is what\nprintasset expects. Updated some code and documentation to make this clearer.\n"}]