[{"hash":"54f1fd7eef101db1dfb2bb66a59083c45a38aa4a","date":"2011-03-02T17:37:17.000Z","author":{"name":"(no author)","email":"(no author)@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Initial directory structure.\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@1 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"f67e15e50f392625b4097caf22e8be1b0fe96013","date":"2011-03-18T22:37:00.000Z","author":{"name":"jorlow@chromium.org","email":"jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Initial checkin.\n\n\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@2 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"347d4628c15be09e57a25c7a6c03c55639b6369c","date":"2011-03-18T22:47:28.000Z","author":{"name":"jorlow@chromium.org","email":"jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Directory paths were off a bit.\n\n\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@3 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"7a02caf2a40d466c8da9b20c3589ba67c456d556","date":"2011-03-18T23:03:49.000Z","author":{"name":"jorlow@chromium.org","email":"jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Fix typo in Makefile.\n\n\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@4 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"b434018d632be6d9b620373c5946467338b726cf","date":"2011-03-21T17:22:12.000Z","author":{"name":"hans@chromium.org","email":"hans@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Set mime-type to text/html on .html files.\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@5 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"b77de951b8aaa0be23edd6f19b9fafd1ac541e2e","date":"2011-03-21T17:30:49.000Z","author":{"name":"hans@chromium.org","email":"hans@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Set mime-type to text/css on doc/doc.css files.\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@6 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"795dd1d5505cbd3103de4774903bc0382d2a942f","date":"2011-03-21T18:13:39.000Z","author":{"name":"jorlow@chromium.org","email":"jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Oops, another file that didn't upload correctly.\n\n\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@7 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"24ba6148694a68d010fe0c515616390abc12c5c4","date":"2011-03-21T19:09:55.000Z","author":{"name":"jorlow@chromium.org","email":"jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Changes to get Snappy working\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@8 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"0e389254905fc246271ca991e203d95031c93559","date":"2011-03-21T19:40:57.000Z","author":{"name":"jorlow@chromium.org","email":"jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Sync in bug fixes\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@9 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"4bcb23118777b0666ad518c6b730a953d8f7bc89","date":"2011-03-21T21:06:49.000Z","author":{"name":"jorlow@chromium.org","email":"jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"more upstream changes\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@10 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"9df5aa892ecf4f418f6777bcc18651ecd5f0d679","date":"2011-03-21T23:10:11.000Z","author":{"name":"gabor@google.com","email":"gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Removing unneeded build files\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@11 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"13b72af77b2b7fed156c26107476f84d35e4481d","date":"2011-03-22T18:32:49.000Z","author":{"name":"jorlow@chromium.org","email":"jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"More changes from upstream.\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@12 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"6d243ebf79640525a94fab280efeb5a46c994af6","date":"2011-03-22T19:07:54.000Z","author":{"name":"jorlow@chromium.org","email":"jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Make GetTestDirectory threadsafe within Chromium and make it work on Windows.\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@13 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"8303bb1b33a4db1d688d32f9be10976b0b54f209","date":"2011-03-22T23:24:02.000Z","author":{"name":"jorlow@chromium.org","email":"jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Pull from upstream.\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@14 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"e11bdf1935bc5a46db790ef414110149009f8c6a","date":"2011-03-25T20:27:43.000Z","author":{"name":"jorlow@chromium.org","email":"jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Upstream changes\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@15 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"e2da744e1241fec301351ca34730877e6cff722a","date":"2011-03-28T20:43:44.000Z","author":{"name":"jorlow@chromium.org","email":"jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Upstream changes.\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@16 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"4d66fd5af3c9f7680be4b03599415c53f32065bc","date":"2011-03-29T22:41:11.000Z","author":{"name":"jorlow@chromium.org","email":"jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Upstream change.\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@17 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"4671a695fca3a8fb00cdf4609cd8238cf12ed13d","date":"2011-03-30T18:35:40.000Z","author":{"name":"jorlow@chromium.org","email":"jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Move include files into a leveldb subdir.\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@18 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"9e33808a26cbbb38008fcd10b74c4d05d78d0aa1","date":"2011-03-30T18:49:03.000Z","author":{"name":"jorlow@chromium.org","email":"jorlow@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Fix last commit\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@19 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"f779e7a5d89f853fc5224f9eb8103ca2b8f2f555","date":"2011-04-12T19:38:58.000Z","author":{"name":"dgrogan@chromium.org","email":"dgrogan@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"@20602303.  Default file permission is now 755.\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@20 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"b409afe968b6917574ec08e02c4bf6e6f722e3ca","date":"2011-04-18T23:15:58.000Z","author":{"name":"dgrogan@chromium.org","email":"dgrogan@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"chmod a-x\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@21 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"b743906eeabc925f3e824d91a9747012bf249e2f","date":"2011-04-19T23:01:25.000Z","author":{"name":"dgrogan@chromium.org","email":"dgrogan@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Revision created by MOE tool push_codebase.\nMOE_MIGRATION=\n\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@22 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"69c6d38342a1fab5f7f2921aa2e9c0e60ba90e35","date":"2011-04-19T23:11:15.000Z","author":{"name":"dgrogan@chromium.org","email":"dgrogan@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"reverting disastrous MOE commit, returning to r21\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@23 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"ba6dac0e809b249532a7465f71a00ccda307161d","date":"2011-04-20T22:48:11.000Z","author":{"name":"dgrogan@chromium.org","email":"dgrogan@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"@20776309\n* env_chromium.cc should not export symbols.\n* Fix MSVC warnings.\n* Removed large value support.\n* Fix broken reference to documentation file\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@24 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"ccb2cbef3aa60e19da135bba01ac4aba7697661d","date":"2011-04-20T22:50:04.000Z","author":{"name":"dgrogan@chromium.org","email":"dgrogan@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"fix build on at least linux\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@25 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"be9f061d2fd5e2d66ba17a70c135a153c584c8c1","date":"2011-04-21T01:54:51.000Z","author":{"name":"dgrogan@chromium.org","email":"dgrogan@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"pull in hans' mac build fix\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@26 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"3c111335a760d8d82414b91a54f740df09dd4f8f","date":"2011-05-03T03:10:59.000Z","author":{"name":"dgrogan@chromium.org","email":"dgrogan@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"make windows include /Iport\\win in dependent projects\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@27 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"da7990950787257cb312ca562ce5977749afc3e9","date":"2011-05-21T02:17:43.000Z","author":{"name":"dgrogan@chromium.org","email":"dgrogan@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"sync with upstream @ 21409451\n\nCheck the NEWS file for details of what changed.\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@28 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"740d8b3d009462eed28a94ea516d667e735b0dfc","date":"2011-05-28T00:53:58.000Z","author":{"name":"dgrogan@chromium.org","email":"dgrogan@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Update from upstream @21551990\n\n* Patch LevelDB to build for OSX and iOS\n* Fix race condition in memtable iterator deletion.\n* Other small fixes.\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@29 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"c4f551494838681f49cc8fb52baaf417d1fea2b1","date":"2011-06-02T00:00:37.000Z","author":{"name":"dgrogan@chromium.org","email":"dgrogan@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"sync with upstream @21627589\n\nMinor changes:\n* Reformat the bodies of the iterator interface routines in IteratorWrapper to\n  make them a bit easier to read\n* Switched the default in the leveldb makefile to be optimized mode, rather\n  than debug mode\n* Fix build problem in chromium port\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@30 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"80e5b0d944b7651046f8b0e795065eca02a01e59","date":"2011-06-07T14:40:26.000Z","author":{"name":"hans@chromium.org","email":"hans@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"sync with upstream @21706995\n\nFixed race condition reported by Dave Smit (dizzyd@dizzyd,com)\non the leveldb mailing list.  We were not signalling\nwaiters after a trivial move from level-0.  The result was\nthat in some cases (hard to reproduce), a write would get\nstuck forever waiting for the number of level-0 files to drop\nbelow its hard limit.\n\nThe new code is simpler: there is just one condition variable\ninstead of two, and the condition variable is signalled after\nevery piece of background work finishes.  Also, all compaction\nwork (including for manual compactions) is done in the\nbackground thread, and therefore we can remove the\n\"compacting_\" variable.\n\n\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@31 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"ccf0fcd5c2946f9228068d657a56d91af9671575","date":"2011-06-22T02:36:45.000Z","author":{"name":"gabor@google.com","email":"gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"A number of smaller fixes and performance improvements:\n\n- Implemented Get() directly instead of building on top of a full\n  merging iterator stack.  This speeds up the \"readrandom\" benchmark\n  by up to 15-30%.\n\n- Fixed an opensource compilation problem.\n  Added --db=<name> flag to control where the database is placed.\n\n- Automatically compact a file when we have done enough\n  overlapping seeks to that file.\n\n- Fixed a performance bug where we would read from at least one\n  file in a level even if none of the files overlapped the key\n  being read.\n\n- Makefile fix for Mac OSX installations that have XCode 4 without XCode 3.\n\n- Unified the two occurrences of binary search in a file-list\n  into one routine.\n\n- Found and fixed a bug where we would unnecessarily search the\n  last file when looking for a key larger than all data in the\n  level.\n\n- A fix to avoid the need for trivial move compactions and\n  therefore gets rid of two out of five syncs in \"fillseq\".\n\n- Removed the MANIFEST file write when switching to a new\n  memtable/log-file for a 10-20% improvement on fill speed on ext4.\n\n- Adding a SNAPPY setting in the Makefile for folks who have\n  Snappy installed. Snappy compresses values and speeds up writes.\n\n\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@32 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"e0cbd242cb3fe6b1b0ed5756fd0a2e3f5efdabd0","date":"2011-06-22T18:45:39.000Z","author":{"name":"gabor@google.com","email":"gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Fixing issue 11: version_set_test.cc was missing\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@33 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"f57e23351f416d15cb6dc2905f2abade5a632fc3","date":"2011-06-29T00:30:50.000Z","author":{"name":"gabor@google.com","email":"gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Platform detection during build, plus compatibility patches for machines without <cstdatomic>.\n\nThis revision adds two major changes:\n1. build_detect_platform which generates build_config.mk\n   with platform-dependent flags for the build process\n2. /port/atomic_pointer.h with anAtomicPointerimplementation\n   for platforms without <cstdatomic>\n\nSome of this code is loosely based on patches submitted to the \nLevelDB mailing list at https://groups.google.com/forum/#!forum/leveldb\nTip of the hat to Dave Smith and Edouard A, who both sent patches.\n\nThe presence of Snappy (http://code.google.com/p/snappy/) and\ncstdatomic are now both detected in the build_detect_platform\nscript (1.) which gets executing during make.\n\nFor (2.), instead of broadly importing atomicops_* from Chromium or\nthe Google performance tools, we chose to just implement AtomicPointer \nand the limited atomic load and store operations it needs. \nThis resulted in much less code and fewer files - everything is \ncontained in atomic_pointer.h.\n\n\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@34 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"85f0ab1975e5ddd7c387ee6cd4a95987dc6c27b3","date":"2011-06-29T22:53:17.000Z","author":{"name":"gabor@google.com","email":"gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Fixing Makefile issue reported in Issue 15 (misspelled flag)\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@35 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"ed154f6dc4f5ca82f20d2f3d4383cdbb07872594","date":"2011-06-30T23:17:03.000Z","author":{"name":"gabor@google.com","email":"gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Fixed a snappy compression wrapper bug (passing wrong variable).\n\nChange atomic_pointer.h to prefer a memory barrier based\nimplementation over a <cstdatomic> based implementation for\nthe following reasons:\n(1) On a x86-32-bit gcc-4.4 build, <ctdatomic> was corrupting\n    the AtomicPointer.\n(2) On a x86-64-bit gcc build, a <ctstdatomic> based acquire-load\n    takes ~15ns as opposed to the ~1ns for a memory-barrier\n    based implementation.\n\nFixes issue 9 (corruption_test fails)\nhttp://code.google.com/p/leveldb/issues/detail?id=9\n\nFixes issue 16 (CorruptionTest.MissingDescriptor fails)\nhttp://code.google.com/p/leveldb/issues/detail?id=16\n\n\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@36 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"6699c7ebe68fba9673ea7a78b54e0eb558102301","date":"2011-07-15T00:20:57.000Z","author":{"name":"gabor@google.com","email":"gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Small tweaks and bugfixes for Issue 18 and 19.\n\nSlight tweak to the no-overlap optimization: only push to\nlevel 2 to reduce the amount of wasted space when the same\nsmall key range is being repeatedly overwritten.\n\nFix for Issue 18: Avoid failure on Windows by avoiding\ndeletion of lock file until the end of DestroyDB().\n\nFix for Issue 19: Disregard sequence numbers when checking for \noverlap in sstable ranges. This fixes issue 19: when writing \nthe same key over and over again, we would generate a sequence \nof sstables that were never merged together since their sequence\nnumbers were disjoint.\n\nDon't ignore map/unmap error checks.\n\nMiscellaneous fixes for small problems Sanjay found while diagnosing\nissue/9 and issue/16 (corruption_testr failures).\n- log::Reader reports the record type when it finds an unexpected type.\n- log::Reader no longer reports an error when it encounters an expected\n  zero record regardless of the setting of the \"checksum\" flag.\n- Added a missing forward declaration.\n- Documented a side-effects of larger write buffer sizes\n  (longer recovery time).\n\n\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@37 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"6872ace90110799f87402cbc594c4cbf1bc474c7","date":"2011-07-19T23:36:47.000Z","author":{"name":"gabor@google.com","email":"gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Sun Studio support, and fix for test related memory fixes.\n\n- LevelDB patch for Sun Studio\n  Based on a patch submitted by Theo Schlossnagle - thanks!\n  This fixes Issue 17.\n\n- Fix a couple of test related memory leaks.\n\n\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@38 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"60bd8015f21fdb63d5409b1191f8ea9d8f1a1b87","date":"2011-07-21T02:40:18.000Z","author":{"name":"gabor@google.com","email":"gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Speed up Snappy uncompression, new Logger interface.\n\n- Removed one copy of an uncompressed block contents changing\n  the signature of Snappy_Uncompress() so it uncompresses into a\n  flat array instead of a std::string.\n        \n  Speeds up readrandom ~10%.\n\n- Instead of a combination of Env/WritableFile, we now have a\n  Logger interface that can be easily overridden applications\n  that want to supply their own logging.\n\n- Separated out the gcc and Sun Studio parts of atomic_pointer.h\n  so we can use 'asm', 'volatile' keywords for Sun Studio.\n\n\n\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@39 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"f122c6dfbb4afacd0ac39f95106da81f8a714e72","date":"2011-07-27T01:46:25.000Z","author":{"name":"gabor@google.com","email":"gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Adding FreeBSD support, removing Chromium files, adding benchmark.\n\n- LevelDB patch for FreeBSD. This resolves Issue 22.\n  Contributed by dforsythe (thanks!).\n\n- Removing Chromium-specific files.\n  They are now going to live in the Chromium repository.\n\n- Adding a benchmark page comparing LevelDB performance\n  to SQLite and Kyoto Cabinet's TreeDB, along with\n  code to generate the benchmarks.\n  Thanks to Kevin Tseng for compiling the benchmarks,\n  and Scott Hess and Mikio Hirabayashi for their\n  help and advice.\n\n\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@40 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"e301f17c2f2c07f588decc723cbad6d6a4237183","date":"2011-07-27T01:49:08.000Z","author":{"name":"gabor@google.com","email":"gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Adding doctype to benchmark page so Google Code displays it as HTML.\n\n\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@41 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"3cc27381f7ed346b6edf0dd15749b699881d2327","date":"2011-07-27T01:56:52.000Z","author":{"name":"gabor@google.com","email":"gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Setting SVN mime-type for benchmark page.\n\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@42 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"e8dee348b69111c7bbdfb176eb3484a0e9f5cc73","date":"2011-07-27T04:39:46.000Z","author":{"name":"gabor@google.com","email":"gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Minor edit in benchmark page.\n\n(Baseline comparison does not make sense for large values.)\n\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@43 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"b9ef9141ba31410fbe21c2c2eb0b8fefaec95be7","date":"2011-07-27T14:29:59.000Z","author":{"name":"gabor@google.com","email":"gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Minor typos in benchmark page.\n\n\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@44 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"1bfbe76b4e3677c6ba5cff0a94b7c90a47d58d25","date":"2011-07-29T21:35:05.000Z","author":{"name":"gabor@google.com","email":"gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Improved benchmark, fixed bugs and SQLite parameters.\n\n- Based on suggestions on the sqlite-users mailing list,\n  we removed the superfluous index on the primary key \n  for SQLite's benchmarks, and turned write-ahead logging \n  (\"WAL\") on. This led to performance improvements for SQLite.\n\n- Based on a suggestion by Florian Weimer on the leveldb\n  mailing list, we disabled hard drive write-caching via\n  hdparm when testing synchronous writes. This led to\n  performance losses for LevelDB and Kyoto TreeDB.\n\n- Fixed a mistake in 2.A.->Random where the bar sizes\n  were switched for Kyoto TreeDB and SQLite.\n\n\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@45 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"021ee9c32be65c298de20adb021ba6066e674200","date":"2011-08-05T20:40:49.000Z","author":{"name":"gabor@google.com","email":"gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"C binding for leveldb, better readseq benchmark for SQLite.\n\n- Added a C binding for LevelDB.\n  May be useful as a stable ABI that can be used by \n  programs that keep leveldb in a shared library, \n  or for JNI API.\n\n- Replaced SQLite's readseq benchmark to a more efficient version. \n  SQLite readseq speeds increased by about a factor of 2x \n  from the previous version. Also updated benchmark page to\n  reflect readseq speed up.\n\n\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@46 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"a05525d13beea3ae56d979fa5fffa9de3652db61","date":"2011-08-06T00:19:37.000Z","author":{"name":"dgrogan@chromium.org","email":"dgrogan@chromium.org@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"@23023120\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@47 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"ab323f7e1ec53749653967e7d6a2fa1c922334f2","date":"2011-08-16T01:21:01.000Z","author":{"name":"gabor@google.com","email":"gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Bugfixes for iterator and documentation.\n\n- Fix bug in Iterator::Prev where it would return the wrong key.\n  Fixes issues 29 and 30.\n\n- Added a tweak to testharness to allow running just some tests.\n\n- Fixing two minor documentation errors based on issues 28 and 25.\n\n- Cleanup; fix namespaces of export-to-C code.\n  Also fix one \"const char*\" vs \"char*\" mismatch.\n\n\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@48 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"e3584f9c28833ec0530b39540ffd406ee41dbc3a","date":"2011-08-22T21:08:51.000Z","author":{"name":"gabor@google.com","email":"gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Bugfix for issue 33; reduce lock contention in Get(), parallel benchmarks.\n\n- Fix for issue 33 (non-null-terminated result from\n  leveldb_property_value())\n\n- Support for running multiple instances of a benchmark in parallel.\n\n- Reduce lock contention on Get():\n  (1) Do not hold the lock while searching memtables.\n  (2) Shard block and table caches 16-ways.\n\n  Benchmark for evaluating this change:\n  $ db_bench --benchmarks=fillseq1,readrandom --threads=$n\n  (fillseq1 is a small hack to make sure fillseq runs once regardless\n  of number of threads specified on the command line).\n\n\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@49 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"72630236513e7384cb0a2e8fffcae232135a5adc","date":"2011-09-01T19:08:02.000Z","author":{"name":"gabor@google.com","email":"gabor@google.com@62dab493-f737-651d-591e-8d6aee1b9529"},"message":"Bugfixes: for Get(), don't hold mutex while writing log.\n\n- Fix bug in Get: when it triggers a compaction, it could sometimes\n  mark the compaction with the wrong level (if there was a gap\n  in the set of levels examined for the Get).\n\n- Do not hold mutex while writing to the log file or to the\n  MANIFEST file.\n\n  Added a new benchmark that runs a writer thread concurrently with\n  reader threads.\n\n  Percentiles\n  ------------------------------\n  micros/op: avg  median 99   99.9  99.99  99.999 max\n  ------------------------------------------------------\n  before:    42   38     110  225   32000  42000  48000\n  after:     24   20     55   65    130    1100   7000\n\n- Fixed race in optimized Get.  It should have been using the\n  pinned memtables, not the current memtables.\n\n\n\ngit-svn-id: https://leveldb.googlecode.com/svn/trunk@50 62dab493-f737-651d-591e-8d6aee1b9529\n"},{"hash":"213a68eb68ece93a8915ef18a8eba920d5a924a4","date":"2011-09-12T09:21:10.000Z","author":{"name":"Hans Wennborg","email":"hans@chromium.org"},"message":"Sync with upstream @23860137.\n\nFix GCC -Wshadow warnings in LevelDB's public header files,\nreported by Dustin.\n\nAdd in-memory Env implementation (helpers/memenv/*).\nThis enables users to create LevelDB databases in-memory.\n\nInitialize ShardedLRUCache::last_id_ to zero.\nThis fixes a Valgrind warning.\n\n(Also delete port/sha1_* which were removed upstream some time ago.)\n"},{"hash":"26db4d971a15d2a7d45bef73f69ef527d164b340","date":"2011-09-26T16:37:09.000Z","author":{"name":"Hans Wennborg","email":"hans@chromium.org"},"message":"Sync with upstream @24213649.\n\nAdding GNU/kFreeBSD support. As requested here:\nhttp://code.google.com/p/leveldb/issues/detail?id=38\n\nUse uint64_t instead of size_t in MemEnvTest. As pointed out at\nhttp://code.google.com/p/leveldb/issues/detail?id=41\n"},{"hash":"299ccedfeca1fb3497978c288e76008a5c08e899","date":"2011-10-05T23:30:28.000Z","author":{"name":"Gabor Cselle","email":"gabor@google.com"},"message":"A number of bugfixes:\n\n- Added DB::CompactRange() method.\n\n  Changed manual compaction code so it breaks up compactions of\n  big ranges into smaller compactions.\n\n  Changed the code that pushes the output of memtable compactions\n  to higher levels to obey the grandparent constraint: i.e., we\n  must never have a single file in level L that overlaps too\n  much data in level L+1 (to avoid very expensive L-1 compactions).\n\n  Added code to pretty-print internal keys.\n\n- Fixed bug where we would not detect overlap with files in\n  level-0 because we were incorrectly using binary search\n  on an array of files with overlapping ranges.\n\n  Added \"leveldb.sstables\" property that can be used to dump\n  all of the sstables and ranges that make up the db state.\n\n- Removing post_write_snapshot support.  Email to leveldb mailing\n  list brought up no users, just confusion from one person about\n  what it meant.\n\n- Fixing static_cast char to unsigned on BIG_ENDIAN platforms.\n\n  Fixes\tIssue 35 and Issue 36.\n\n- Comment clarification to address leveldb Issue 37.\n\n- Change license in posix_logger.h to match other files.\n\n- A build problem where uint32 was used instead of uint32_t.\n\nSync with upstream @24408625\n"},{"hash":"36a5f8ed7f9fb3373236d5eace4f5fea369856ee","date":"2011-10-31T17:22:06.000Z","author":{"name":"Hans Wennborg","email":"hans@chromium.org"},"message":"A number of fixes:\n\n- Replace raw slice comparison with a call to user comparator.\n  Added test for custom comparators.\n\n- Fix end of namespace comments.\n\n- Fixed bug in picking inputs for a level-0 compaction.\n\n  When finding overlapping files, the covered range may expand\n  as files are added to the input set.  We now correctly expand\n  the range when this happens instead of continuing to use the\n  old range.  For example, suppose L0 contains files with the\n  following ranges:\n\n      F1: a .. d\n      F2:    c .. g\n      F3:       f .. j\n\n  and the initial compaction target is F3.  We used to search\n  for range f..j which yielded {F2,F3}.  However we now expand\n  the range as soon as another file is added.  In this case,\n  when F2 is added, we expand the range to c..j and restart the\n  search.  That picks up file F1 as well.\n\n  This change fixes a bug related to deleted keys showing up\n  incorrectly after a compaction as described in Issue 44.\n\n(Sync with upstream @25072954)\n"},{"hash":"42fb47f6edab02d4abb814631c6615dd4661d7d2","date":"2011-11-14T17:06:16.000Z","author":{"name":"Hans Wennborg","email":"hans@chromium.org"},"message":"Pass system's CFLAGS, remove exit time destructor, sstable bug fix.\n\n- Pass system's values of CFLAGS,LDFLAGS.\n  Don't override OPT if it's already set.\n  Original patch by Alessio Treglia <alessio@debian.org>:\n  http://code.google.com/p/leveldb/issues/detail?id=27#c6\n\n- Remove 1 exit time destructor from leveldb.\n  See http://crbug.com/101600\n\n- Fix problem where sstable building code would pass an\n  internal key to the user comparator.\n\n(Sync with uptream at 25436817.)\n"},{"hash":"c8c5866a86c8d4a3e80d8708d14a06776fb683d1","date":"2011-11-30T10:59:40.000Z","author":{"name":"Hans Wennborg","email":"hans@chromium.org"},"message":"Makefile fixes for systems with $CXX other than g++.\n\n- Makefile: Use $(CXX) for compiling C++ files,\n  don't override the environment's value of $CXX\n\n- build_detect_platform: use $CXX instead of g++.\n\nBased on bug report from Theo Schlossnagle:\nhttp://code.google.com/p/leveldb/issues/detail?id=46\n\n(Sync with uptream at 25807040.)\n"},{"hash":"3c8be108bfb5fbd7d51f824199627e757279f79e","date":"2012-01-25T22:56:52.000Z","author":{"name":"Sanjay Ghemawat","email":"sanjay@google.com"},"message":"fixed issues 66 (leaking files on disk error)  and 68 (no sync of CURRENT file)\n"},{"hash":"239ac9d2dea0ac1708b7d903a3d80d3883e0781b","date":"2012-02-02T17:34:14.000Z","author":{"name":"Sanjay Ghemawat","email":"sanjay@google.com"},"message":"avoid very large compactions; fix build on Linux\n"},{"hash":"015d26f8be6e27d96c536eb9f1ef7275898e3603","date":"2012-03-05T18:35:46.000Z","author":{"name":"Sanjay Ghemawat","email":"sanjay@google.com"},"message":"add .gitignore; support for building on a few BSD variants\n"},{"hash":"d79762e27369365a7ffe1f2e3a5c64b0632079e1","date":"2012-03-09T00:23:21.000Z","author":{"name":"Sanjay Ghemawat","email":"sanjay@google.com"},"message":"added group commit; drastically speeds up mult-threaded synchronous write workloads\n"},{"hash":"583f1499c00ff40f332149021f583cf6ee78dd7e","date":"2012-03-09T15:51:04.000Z","author":{"name":"Sanjay Ghemawat","email":"sanjay@google.com"},"message":"fix LOCK file deletion to prevent crash on windows\n"},{"hash":"9013f13b1512f6ab8c04518e8f036e58be271eba","date":"2012-03-15T16:14:00.000Z","author":{"name":"Sanjay Ghemawat","email":"sanjay@google.com"},"message":"use mmap on 64-bit machines to speed-up reads; small build fixes\n"},{"hash":"a1ad4d1995dc8efeb0d3d7a40b8bb63c9b7c8259","date":"2012-03-21T17:28:03.000Z","author":{"name":"Sanjay Ghemawat","email":"sanjay@google.com"},"message":"Build fixes and cleanups:\n(1) Separate out C++ and CC flags (fixes c_test compilation)\n(2) Move snappy/perftools detection to script\n(3) Fix db_bench_sqlite3 and db_bench_tree_db build rules\n"},{"hash":"bc1ee4d25e09b04e074db330a41f54ef4af0e31b","date":"2012-03-30T20:15:49.000Z","author":{"name":"Sanjay Ghemawat","email":"sanjay@google.com"},"message":"build shared libraries; updated version to 1.3; add Status accessors\n"},{"hash":"85584d497e7b354853b72f450683d59fcf6b9c5c","date":"2012-04-17T15:36:46.000Z","author":{"name":"Sanjay Ghemawat","email":"sanjay@google.com"},"message":"Added bloom filter support.\n\nIn particular, we add a new FilterPolicy class.  An instance\nof this class can be supplied in Options when opening a\ndatabase.  If supplied, the instance is used to generate\nsummaries of keys (e.g., a bloom filter) which are placed in\nsstables.  These summaries are consulted by DB::Get() so we\ncan avoid reading sstable blocks that are guaranteed to not\ncontain the key we are looking for.\n\nThis change provides one implementation of FilterPolicy\nbased on bloom filters.\n\nOther changes:\n- Updated version number to 1.4.\n- Some build tweaks.\n- C binding for CompactRange.\n- A few more benchmarks: deleteseq, deleterandom, readmissing, seekrandom.\n- Minor .gitignore update.\n"},{"hash":"075a35a6d390167b77b687e067dd0ba593e7f624","date":"2012-05-30T16:45:46.000Z","author":{"name":"Sanjay Ghemawat","email":"sanjay@google.com"},"message":"Remove static initializer; fix endian-ness detection; fix build on\nvarious platforms; improve android port speed.\n\nAvoid static initializer by using a new portability interface for\nthread-safe lazy initialization.  Custom ports will need to be\nextended to implement InitOnce/OnceType/LEVELDB_ONCE_INIT.\n\nFix endian-ness detection (fixes Powerpc builds).\n\nBuild related fixes:\n- Support platforms that have unversioned shared libraries.\n- Fix IOS build rules.\n\nAndroid improvements\n- Speed up atomic pointers\n- Share more code with port_posix.\n\nDo not spin in a tight loop attempting compactions if the file system\nis inaccessible (e.g., if kerberos tickets have expired or if it is out\nof space).\n"},{"hash":"b914f91b1049699aa2d0e08660aa9246b87bdcb7","date":"2012-05-30T16:50:57.000Z","author":{"name":"Sanjay Ghemawat","email":"sanjay@google.com"},"message":"remove obsolete android port files\n"},{"hash":"dd0d562b4d4fbd07db6a44f9e221f8d368fee8e4","date":"2012-05-30T16:57:20.000Z","author":{"name":"Sanjay Ghemawat","email":"sanjay@google.com"},"message":"update version number to 1.5\n"},{"hash":"946e5b5a4ce7980917b22a408f090a4e86c3fa44","date":"2012-10-12T18:53:12.000Z","author":{"name":"David Grogan","email":"dgrogan@chromium.org"},"message":"Update to leveldb 1.6\n\nHighlights\n----------\nMmap at most 1000 files on Posix to improve performance for large databases.\nSupport for more architectures (thanks to Alexander K.)\n\nBuilding and porting\n--------------------\nHP/UX support (issue 126)\nAtomicPointer for ia64 (issue 123)\nSparc v9 support (issue 124)\nAtomic ops for powerpc\nUse -fno-builtin-memcmp only when using g++\nSimplify IOS build rules (issue 114)\nUse CXXFLAGS instead of CFLAGS when invoking C++ compiler (issue 118)\nFix snappy shared library problem (issue 94)\nFix shared library installation path regression\nEndian-ness detection tweak for FreeBSD\n\nBug fixes\n---------\nStop ignoring FLAGS_open_files in db_bench\nMake bloom test behavior agnostic to endian-ness\n\nPerformance\n-----------\nLimit number of mmapped files to 1000 to improve perf for large dbs\nDo not delay for 1 second on shutdown path (issue 125)\n\nMisc\n----\nMake InMemoryEnv return a no-op logger\nC binding now has a wrapper for free (issue 117)\nAdd thread-safety annotations\nAdded an in-process lock table (issue 120)\nMake RandomAccessFile and SequentialFile non-copyable\n"},{"hash":"40768657bc8ec3ded60712eeeab7c25b1b07deca","date":"2012-10-16T23:17:53.000Z","author":{"name":"Sanjay Ghemawat","email":"sanjay@google.com"},"message":"Small fixes.\n\nDetails:\n* Fix shared library building.\n* Reorganize linking commands so flags like --as-needed can be passed.\n* C binding exports version numbers.\n* Fix small typos in documention.\n"},{"hash":"ea2e9195fc241c8fe9f329679d7a424345c68c7b","date":"2012-12-27T18:38:48.000Z","author":{"name":"Sanjay Ghemawat","email":"sanjay@google.com"},"message":"added utility to dump leveldb files\n"},{"hash":"d84c825a70a843bb107de8b732cb79e584cefd17","date":"2013-01-07T21:17:43.000Z","author":{"name":"David Grogan","email":"dgrogan@chromium.org"},"message":"Fix corruption bug found and analyzed by dhruba@gmail.com\n\nhttps://groups.google.com/d/msg/leveldb/Kc9JxuIUu5A/9P0N9RL4ar8J\n"},{"hash":"514c943a8e9ce1b06c55ae5e47008f6b0854b36c","date":"2013-02-07T02:03:32.000Z","author":{"name":"David Grogan","email":"dgrogan@chromium.org"},"message":"Make DB::Open fail if sst files are missing.\n\nAlso, cleanup for Clang's -Wimplicit-fallthrough warning.\n"},{"hash":"28dad918f2ffb80fd70110ed5cd47744339649f2","date":"2013-05-15T00:03:07.000Z","author":{"name":"David Grogan","email":"dgrogan@chromium.org"},"message":"Release leveldb 1.10\n\nFixes issues\n147 - thanks feniksgordonfreeman\n153\n156\n166\n\nAdditionally,\n* Remove calls to exit(1).\n* Fix unused-variable warnings from clang.\n* Fix possible overflow error related to num_restart value >= (2^32/4).\n* Add leveldbutil to .gitignore.\n* Add better log messages when Write is stalled on a compaction.\n"},{"hash":"7b094f12e46a45b911f20f7bd2ca96f83e272d91","date":"2013-06-13T23:14:06.000Z","author":{"name":"David Grogan","email":"dgrogan@chromium.org"},"message":"Release leveldb 1.11\n\nFixes issues\n161\n174\n178\n\nAs well as the issue reported by edouarda14@gmail.com about\nMissingSSTFile unit test failing on windows.\n"},{"hash":"5bd76dc10d840df23255ba0e635083a2a94e0461","date":"2013-06-18T18:00:13.000Z","author":{"name":"David Grogan","email":"dgrogan@chromium.org"},"message":"Release leveldb 1.12\n\nNon-functional changes only:\n1) Add Kevin Regan to the AUTHORS file\n2) Add standard license header to issues/issue178_test.cc\n"},{"hash":"748539c183453bdeaff1eb0da8ccf5adacb796e7","date":"2013-08-21T18:12:47.000Z","author":{"name":"David Grogan","email":"dgrogan@chromium.org"},"message":"LevelDB 1.13\n\nFix issues 77, 87, 182, 190.\n\nAdditionally, fix the bug described in\nhttps://groups.google.com/d/msg/leveldb/yL6h1mAOc20/vLU64RylIdMJ\nwhere a large contiguous keyspace of deleted data was not getting\ncompacted.\n\nAlso fix a bug where options.max_open_files was not getting clamped\nproperly.\n"},{"hash":"0b9a89f40efdd143fa1426e7d5cd997f67ba6361","date":"2013-09-19T20:49:19.000Z","author":{"name":"David Grogan","email":"dgrogan@chromium.org"},"message":"Release LevelDB 1.14\n\nFix issues 200, 201\n\nAlso,\n* Fix link to bigtable paper in docs.\n* New sstables will have the file extension .ldb. .sst files will\ncontinue to be recognized.\n* When building for iOS, use xcrun to execute the compiler. This may\naffect issue 177.\n"},{"hash":"0cfb990d58ffba9b56df6e9829ddb9d220824066","date":"2013-12-10T18:36:31.000Z","author":{"name":"David Grogan","email":"dgrogan@chromium.org"},"message":"Release LevelDB 1.15\n\n- switched from mmap based writing to simpler stdio based writing. Has a\n  minor impact (0.5 microseconds) on microbenchmarks for asynchronous\n  writes. Synchronous writes speed up from 30ms to 10ms on linux/ext4.\n  Should be much more reliable on diverse platforms.\n- compaction errors now immediately put the database into a read-only\n  mode (until it is re-opened). As a downside, a disk going out of\n  space and then space being created will require a re-open to recover\n  from, whereas previously that would happen automatically. On the\n  plus side, many corruption possibilities go away.\n- force the DB to enter an error-state so that all future writes fail\n  when a synchronous log write succeeds but the sync fails.\n- repair now regenerates sstables that exhibit problems\n- fix issue 218 - Use native memory barriers on OSX\n- fix issue 212 - QNX build is broken\n- fix build on iOS with xcode 5\n- make tests compile and pass on windows\n"},{"hash":"269fc6ca9416129248db5ca57050cd5d39d177c8","date":"2014-02-10T19:36:06.000Z","author":{"name":"David Grogan","email":"dgrogan@chromium.org"},"message":"Release LevelDB 1.16\n\n- Make Log::Reader not report a corruption when the last record in a\n  log file is truncated.\n- Fix issue 224: variable created but not utilized.\n- Remove comment that referenced a removed feature.\n"},{"hash":"e353fbc7ea81f12a5694991b708f8f45343594b1","date":"2014-05-01T20:44:03.000Z","author":{"name":"Chris Mumford","email":"cmumford@chromium.org"},"message":"Release LevelDB 1.17\n\n- Cleanup: delete unused IntSetToString\n\n  It was added in http://cr/19491949 (and was referenced at the time).\n  The last reference was removed in http://cr/19507363.\n\n  This fixes warning/error with pre-release crosstoolv18:\n    'std::string leveldb::{anonymous}::IntSetToString(const std::set<long unsigned int>&)' defined but not used [-Werror=unused-function]\n\n- Added arm64 and and armv7s to IOS build as suggested on leveldb mailing list.\n\n- Changed local variable type from int to size_t\n\n  This eliminates compiler warning/error and resolves\n  https://code.google.com/p/leveldb/issues/detail?id=140\n"},{"hash":"803d69203a62faf50f1b77897310a3a1fcae712b","date":"2014-09-16T21:19:52.000Z","author":{"name":"Chris Mumford","email":"cmumford@chromium.org"},"message":"Release 1.18\n\nChanges are:\n\n* Update version number to 1.18\n* Replace the basic fprintf call with a call to fwrite in order to\n  work around the apparent compiler optimization/rewrite failure that we are\n  seeing with the new toolchain/iOS SDKs provided with Xcode6 and iOS8.\n* Fix ALL the header guards.\n* Createed a README.md with the LevelDB project description.\n* A new CONTRIBUTING file.\n* Don't implicitly convert uint64_t to size_t or int.  Either preserve it as\n  uint64_t, or explicitly cast. This fixes MSVC warnings about possible value\n  truncation when compiling this code in Chromium.\n* Added a DumpFile() library function that encapsulates the guts of the\n  \"leveldbutil dump\" command. This will allow clients to dump\n  data to their log files instead of stdout. It will also allow clients to\n  supply their own environment.\n* leveldb: Remove unused function 'ConsumeChar'.\n* leveldbutil: Remove unused member variables from WriteBatchItemPrinter.\n* OpenBSD, NetBSD and DragonflyBSD have _LITTLE_ENDIAN, so define\n  PLATFORM_IS_LITTLE_ENDIAN like on FreeBSD. This fixes:\n   * issue #143\n   * issue #198\n   * issue #249\n* Switch from <cstdatomic> to <atomic>. The former never made it into the\n  standard and doesn't exist in modern gcc versions at all.  The later contains\n  everything that leveldb was using from the former.\n  This problem was noticed when porting to Portable Native Client where no memory\n  barrier is defined.  The fact that <cstdatomic> is missing normally goes\n  unnoticed since memory barriers are defined for most architectures.\n* Make Hash() treat its input as unsigned.  Before this change LevelDB files\n  from platforms with different signedness of char were not compatible. This\n  change fixes: issue #243\n* Verify checksums of index/meta/filter blocks when paranoid_checks set.\n* Invoke all tools for iOS with xcrun. (This was causing problems with the new\n  XCode 5.1.1 image on pulse.)\n* include <sys/stat.h> only once, and fix the following linter warning:\n  \"Found C system header after C++ system header\"\n* When encountering a corrupted table file, return Status::Corruption instead of\n  Status::InvalidArgument.\n* Support cygwin as build platform, patch is from https://code.google.com/p/leveldb/issues/detail?id=188\n* Fix typo, merge patch from https://code.google.com/p/leveldb/issues/detail?id=159\n* Fix typos and comments, and address the following two issues:\n  * issue #166\n  * issue #241\n* Add missing db synchronize after \"fillseq\" in the benchmark.\n* Removed unused variable in SeekRandom: value (issue #201)\n"},{"hash":"c00c569f27bddf0b91b79c786eb69a0e9d1ab97b","date":"2014-12-11T15:42:50.000Z","author":{"name":"Chris Mumford","email":"cmumford@chromium.org"},"message":"Deleted old README file.\n\nREADME was superseded by README.md and should have been deleted in 803d692.\n"},{"hash":"cea9b10e5b8992c2cb8d6ae562bd8c4d2ed3ee69","date":"2014-12-11T15:52:09.000Z","author":{"name":"Chris Mumford","email":"cmumford@chromium.org"},"message":"Fixed incorrect comment wording for Iterator::Seek.\n"},{"hash":"c4c38f9c1f3bb405fe22a79c5611438f91208d09","date":"2014-12-11T15:58:00.000Z","author":{"name":"Chris Mumford","email":"cmumford@chromium.org"},"message":"Add arm64 support to leveldb.\n"},{"hash":"b234f65b3461f70de493f566bb2ff8bf15d770d1","date":"2014-12-11T15:59:38.000Z","author":{"name":"Chris Mumford","email":"cmumford@chromium.org"},"message":"Added a new fault injection test.\n\nThis test is intended to ensure leveldb properly detects and recovers from\nfaults - specifically unwritten file data lost as a result of a system reset.\n"},{"hash":"a75d435d1de55530ead02bbd51dd4424bef50330","date":"2014-12-11T16:02:45.000Z","author":{"name":"Chris Mumford","email":"cmumford@chromium.org"},"message":"Clean up layering of storage/leveldb/...\n\nWith these changes, this package should be properly cleaned up and not require\nany further changes.\n"},{"hash":"34ad72e3e964131475c714cb2f41492d053a6b2e","date":"2014-12-11T16:04:40.000Z","author":{"name":"Chris Mumford","email":"cmumford@chromium.org"},"message":"Move header guard below copyright banner.\n"},{"hash":"77948e7eec0613fb5cbecb7e320b9498607030b5","date":"2014-12-11T16:08:57.000Z","author":{"name":"Sanjay Ghemawat","email":"sanjay@google.com"},"message":"Add benchmark that measures cost of repeatedly opening the database.\n"},{"hash":"ceff6f12152785a54885a47db349a6d8dfd0ce2c","date":"2014-12-17T19:18:54.000Z","author":{"name":"David Turner","email":"digit@google.com"},"message":"Fix Android/MIPS build.\n\nport/atomic_pointer.h was missing an implementation for\nMemoryBarrier() for this platform.\n"},{"hash":"c85addcdf36849ea892cef37efde5d8791e3a7f4","date":"2015-01-11T01:36:40.000Z","author":{"name":"Paul Irish","email":"paul.irish@gmail.com"},"message":"readme: improved documentation link\n\nThis replaces htmlpreview with [rawgit](http://rawgit.com/).\r\nrawgit is faster and doesnt use JS to render the page, making it SEO friendly."},{"hash":"0e0f07417ca859da1fe3965984b581a1b75e9021","date":"2015-02-17T17:55:40.000Z","author":{"name":"Paul Irish","email":"paul.irish@gmail.com"},"message":"documentation. improved link"},{"hash":"8fcceb2a6ffbb3dc8c75763951a2536a3571b08e","date":"2015-04-20T04:39:14.000Z","author":{"name":"ideawu","email":"ideawu@me"},"message":"log compaction output file's level along with number\n"},{"hash":"76bba139c083f7d54daa170165cad3e23c9d3ec8","date":"2015-04-20T04:41:01.000Z","author":{"name":"ideawu","email":"ideawu@me"},"message":"fix indent\n"},{"hash":"ac1d69da31205a979b5a8510f33c31ae977530f0","date":"2015-08-11T21:56:39.000Z","author":{"name":"Sanjay Ghemawat","email":"sanjay@google.com"},"message":"LevelDB now attempts to reuse the preceding MANIFEST and log file when re-opened.\n\n(Based on a suggestion by cmumford.)\n\n\"open\" benchmark on my workstation speeds up significantly since we\ncan now avoid three fdatasync calls and a compaction per open:\n\n  Before: ~80000 microseconds\n  After:    ~130 microseconds\n\nDetails:\n\n(1) Added Options::reuse_logs (currently defaults to false) to control\nnew behavior.  The intention is to change the default to true after some\nbaking.\n\n(2) Added Env::NewAppendableFile() whose default implementation returns\na not-supported error.\n\n(3) VersionSet::Recovery attempts to reuse the MANIFEST from which\nit is recovering.\n\n(4) DBImpl recovery attempts to reuse the last log file and memtable.\n\n(5) db_test.cc now tests a new configuration that sets reuse_logs to true.\n\n(6) fault_injection_test also tests a reuse_logs==true config.\n\n(7) Added a new recovery_test.\n"},{"hash":"65190ac48b614b4bd2f3d5d173cf8fdbb2c0fc1a","date":"2015-08-11T21:59:48.000Z","author":{"name":"Chris Mumford","email":"cmumford@chromium.org"},"message":"Will not reuse manifest if reuse_logs options is false.\n\nPrior implementation would always try to reuse the manifest, even if reuse_logs\nwas false (the default). This was missed because the stock\nEnv::NewAppendableFile implementation returns false forcing the creation of a\nnew log.\n"},{"hash":"edf2939c0d520ff1a0882af7272fcc691412cfbc","date":"2015-11-23T18:24:16.000Z","author":{"name":"Venilton FalvoJr","email":"venilton.falvo@gmail.com"},"message":"Update README.md"},{"hash":"b9afa1f2e79e928e08f11e907e8688b6d89cfd2f","date":"2015-12-09T18:34:57.000Z","author":{"name":"Chris Mumford","email":"cmumford@chromium.org"},"message":"include <assert> -> <cassert>\n\nFixes reported public issue #280.\n"},{"hash":"ce45404bba80d6f85057b596cd716d6c4759dcad","date":"2015-12-09T18:34:57.000Z","author":{"name":"Mike Wiacek","email":"mjwiacek@google.com"},"message":"Suppress error reporting after seeking but before a valid First or Full record is encountered.\n\nFix a spelling mistake.\n"},{"hash":"5208e7952d691e256a4ffe29888154068e8745b8","date":"2015-12-09T18:34:57.000Z","author":{"name":"cmumford","email":"cmumford@google.com"},"message":"Added leveldb::Status::IsInvalidArgument() method.\n\nAll other Status::Code enum values have an Is**() method with the one\nexception of InvalidArgument.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=97166441\n"},{"hash":"50e77a8263b19033b99ba49cdc45995595f1acf9","date":"2015-12-09T18:34:58.000Z","author":{"name":"pkasting","email":"pkasting@google.com"},"message":"Fix size_t/int comparison/conversion issues in leveldb.\n\nThe create function took |num_keys| as an int, but callers and implementers wanted it to function as a size_t (e.g. passing std::vector::size() in, passing it to vector constructors as a size arg, indexing containers by it, etc.).  This resulted in implicit conversions between the two types as well as warnings (found with Chromium's external copy of these sources, built with MSVC) about signed vs. unsigned comparisons.\n\nThe leveldb sources were already widely using size_t elsewhere, e.g. for key and filter lengths, so using size_t here is not inconsistent with the existing code.  However, it does change the public C API.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=101074871\n"},{"hash":"359b6bcec28944972d0be503a78205b5cc574a9c","date":"2015-12-09T18:34:58.000Z","author":{"name":"tzik","email":"tzik@google.com"},"message":"Add leveldb::Cache::Prune\n\nPrune() drops on-memory read cache of the database, so that the client can\nrelief its memory shortage.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=101335710\n"},{"hash":"528c2bc6ad03875865be8712aacdf319f7002d44","date":"2015-12-09T18:34:58.000Z","author":{"name":"ssid","email":"ssid@google.com"},"message":"Add \"approximate-memory-usage\" property to leveldb::DB::GetProperty\n\nThe approximate RAM usage of the database is calculated from the memory\nallocated for write buffers and the block cache. This is to give an\nestimate of memory usage to leveldb clients.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=104222307\n"},{"hash":"889de31a5a8bc62d1c93cf7c0a2dcbfb0a2c979b","date":"2015-12-09T18:34:58.000Z","author":{"name":"ndmatthews","email":"ndmatthews@google.com"},"message":"Let LevelDB use xcrun to determine Xcode.app path instead of using a hardcoded path.\n\nThis allows build agents to select from multiple Xcode installations.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=104859097\n"},{"hash":"f8d205cf89819bfa0010e19ec091ad8b1d95f204","date":"2015-12-09T18:35:07.000Z","author":{"name":"cmumford","email":"cmumford@google.com"},"message":"Including atomic_pointer.h in port_posix\n\nA recent CL (104348226) created the port_posix library, but omitted: port/atomic_pointer.h.\n\nAnd when:\n\n    [] test third_party/leveldb:all\n\nwas run this error was reported:\n\n    //third_party/leveldb:port_posix does not depend on a\n    module exporting 'third_party/leveldb/port/atomic_pointer.h'\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=105243399\n"},{"hash":"3c9ff3c691bc4ccb6098ed80bd71e33a36892f5a","date":"2015-12-09T18:35:07.000Z","author":{"name":"cmumford","email":"cmumford@google.com"},"message":"Only compiling TrimSpace on linux.\n\nIncorporated change by zmodem at https://github.com/google/leveldb/pull/310\nto fix issue #310.\n\nThis change will only build TrimSace on linux to avoid unused function\nwarning/error.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=105323419\n"},{"hash":"706b7f8d43b0aecdc75c5ee49d3e4ef5f27b9faf","date":"2015-12-09T19:27:50.000Z","author":{"name":"ssid","email":"ssid@google.com"},"message":"Resolve race when getting approximate-memory-usage property\n\nThe write operations in the table happens without holding the mutex\nlock, but concurrent writes are avoided using \"writers_\" queue.\nThe Arena::MemoryUsage could access the blocks when write happens.\nSo, the memory usage is cached in atomic word and can be loaded\nfrom any thread safely.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=107573379\n"},{"hash":"e2446d08481f6e2be3579a89ea3c772995846f17","date":"2015-12-09T23:04:30.000Z","author":{"name":"Chris Mumford","email":"cmumford@cmumford.com"},"message":"Merge pull request #275 from paulirish/patch-1\n\nreadme: improved documentation link"},{"hash":"4753c9b617039d6d3a68f16de64ae9eca49650c0","date":"2016-01-04T21:29:41.000Z","author":{"name":"cmumford","email":"cmumford@google.com"},"message":"Added a contributors section to README.md\n\nIn preparation for accepting GitHub pull requests this new README\nsection outlines the general criteria that the leveldb project owners\nwill use when accepting external (and internal) project contributions.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=111349899\n"},{"hash":"5d36bedd1cd03022328620fcc3ab6b807e3d30df","date":"2016-01-12T18:47:33.000Z","author":{"name":"Chris Mumford","email":"cmumford@cmumford.com"},"message":"Merge pull request #272 from vapier/master\n\nFix Android/MIPS build."},{"hash":"8ec241a3b0afa645b610be5b2cc06d8f6f88a12b","date":"2016-01-12T18:52:33.000Z","author":{"name":"Chris Mumford","email":"cmumford@cmumford.com"},"message":"Merge pull request #317 from falvojr/patch-1\n\nUpdate README.md"},{"hash":"dac40d25f6ce69c8b6685ab09f240cb63cfd5ab3","date":"2016-01-12T19:30:32.000Z","author":{"name":"Chris Mumford","email":"cmumford@cmumford.com"},"message":"Merge pull request #284 from ideawu/master\n\nlog compaction output file's level along with number"},{"hash":"9fcae6164169cb99052b14fe687d258fe348b56b","date":"2016-01-15T01:41:48.000Z","author":{"name":"Chris Mumford","email":"cmumford@chromium.org"},"message":"Added a Travis CI build file.\n\nThis allows for continuous integration builds by travis-ci.org.\nMore information at https://docs.travis-ci.com/user/languages/cpp\n"},{"hash":"43fcf23af052db03496daed28afd98d9d1c23034","date":"2016-01-15T05:17:21.000Z","author":{"name":"Chris Mumford","email":"cmumford@cmumford.com"},"message":"Merge pull request #328 from cmumford/master\n\nAdded a Travis CI build file."},{"hash":"dd1c3c3572eb3e482e7b374d8e94ed483b98b354","date":"2016-01-15T17:29:01.000Z","author":{"name":"Lars-Magnus Skog","email":"ralphtheninja@riseup.net"},"message":"add travis build badge\n"},{"hash":"2d0320a458d0e6a20fff46d5f80b18bfdcce7018","date":"2016-01-15T19:17:41.000Z","author":{"name":"Chris Mumford","email":"cmumford@cmumford.com"},"message":"Merge pull request #329 from ralphtheninja/travis-badge\n\nAdd travis build badge to README"},{"hash":"adbe3eb073565c468005c48f18d16b8f1dd6ef58","date":"2016-01-30T00:10:00.000Z","author":{"name":"cmumford","email":"cmumford@google.com"},"message":"Putting build artifacts in subdirectory.\n\n1. Object files, libraries, and compiled executables are put\n   into subdirectories.\n2. The shared library is linked from individual object files.\n   This provides for greater parallelism on large desktops\n   while at the same time making for easier builds on small\n   (i.e. embedded) systems. Fixes issue #279.\n3. One program, db_bench, is compiled using the shared library.\n4. The source file for \"leveldbutil\" was renamed from\n   leveldb_main.cc to leveldbutil.cc. This provides for simpler\n   makefile rules.\n5. Because all targets placed the library (libleveldb.a) at the top\n   level, the last platform built (desktop/device) always overwrote\n   any prior artifact.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113407013\n"},{"hash":"6b18316d011e495b42ca84813936c994cd90e88d","date":"2016-02-19T21:59:19.000Z","author":{"name":"Bruce Dawson","email":"brucedawson@chromium.org"},"message":"Fix signed/unsigned mismatch on VC++ builds\n"},{"hash":"7306ef856a91e462a73ff1832c1fa8771008ba36","date":"2016-02-24T22:39:03.000Z","author":{"name":"Chris Mumford","email":"cmumford@cmumford.com"},"message":"Merge pull request #348 from randomascii/master\n\nFix signed/unsigned mismatch on VC++ builds"},{"hash":"32113439095d148fa93c7581a15f52ff26a389d3","date":"2016-03-31T22:53:30.000Z","author":{"name":"cmumford","email":"cmumford@google.com"},"message":"Deleted redundant null ptr check prior to delete.\n\nFixes issue #338.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=113439460\n"},{"hash":"e84b5bdb5af6a4df8c3dc3f6f644b4ca3b6722cc","date":"2016-03-31T22:53:34.000Z","author":{"name":"mjwiacek","email":"mjwiacek@google.com"},"message":"This CL fixes a bug encountered when reading records from leveldb files that have been split, as in a [] input task split.\n\nDetailed description:\n\nSuppose an input split is generated between two leveldb record blocks and the preceding block ends with null padding.\n\nA reader that previously read at least 1 record within the first block (before encountering the padding) upon trying to read the next record, will successfully and correctly read the next logical record from the subsequent block, but will return a last record offset pointing to the padding in the first block.\n\nWhen this happened in a [], it resulted in duplicate records being handled at what appeared to be different offsets that were separated by only a few bytes.\n\nThis behavior is only observed when at least 1 record was read from the first block before encountering the padding. If the initial offset for a reader was within the padding, the correct record offset would be reported, namely the offset within the second block.\n\nThe tests failed to catch this scenario/bug, because each read test only read a single record with an initial offset. This CL adds an explicit test case for this scenario, and modifies the test structure to read all remaining records in the test case after an initial offset is specified.  Thus an initial offset that jumps to record #3, with 5 total records in the test file, will result in reading 2 records, and validating the offset of each of them in order to pass successfully.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=115338487\n"},{"hash":"ea992b467b9f3c892ae87267ba908e97d532b1b2","date":"2016-04-12T22:38:09.000Z","author":{"name":"Nicholas Westlake","email":"n.westlake@bath.ac.uk"},"message":"Change std::uint64_t to uint64_t (#354)\n\n-This fixes compile errors with default setup on RHEL 6 systems."},{"hash":"a7bff697baa062c8f6b8fb760eacf658712b611a","date":"2016-04-15T17:58:27.000Z","author":{"name":"John Abd-El-Malek","email":"john.abdelmalek@gmail.com"},"message":"Fix LevelDB build when asserts are enabled in release builds. (#367)\n\n* Fix LevelDB build when asserts are enabled in release builds.\r\n\r\nBUG=https://bugs.chromium.org/p/chromium/issues/detail?id=603166\r\n\r\n* fix\r\n\r\n* Add comment\r\n"},{"hash":"5dcb09a6d48845c14f5d30d8a04c471d683ce379","date":"2016-05-19T10:39:36.000Z","author":{"name":"Erik Zhang","email":"erik@vcage.com"},"message":"port to windows\n"},{"hash":"39d07e8638c2c2cd5241b5db8509ccd7289b5fad","date":"2016-05-19T14:31:26.000Z","author":{"name":"Erik Zhang","email":"erik@vcage.com"},"message":"fix build_detect_platform for linux; change target name to libleveldb.lib;\n"},{"hash":"a211cd60a31d64ad85d00d24ba24ae0bdbbfd493","date":"2016-05-19T17:26:06.000Z","author":{"name":"Erik Zhang","email":"erik@vcage.com"},"message":"add c.cc for windows\n"},{"hash":"594f971f23dadcef29cb0b3ee30e40a3233c8b70","date":"2016-05-19T17:57:11.000Z","author":{"name":"Erik Zhang","email":"erik@vcage.com"},"message":"change to cdecl\n"},{"hash":"907d61fb2a965a78d0894cae7f299ba6fea7d91c","date":"2016-05-19T17:58:21.000Z","author":{"name":"Erik Zhang","email":"erik@vcage.com"},"message":"fix bug\n"},{"hash":"324a47c85d3dfcdaba4e7f2fb24f044ae044088f","date":"2016-05-20T11:33:42.000Z","author":{"name":"Erik Zhang","email":"erik@vcage.com"},"message":"dllexport\n"},{"hash":"051910f80c6e5a2336ba76ce1518be3695973ac9","date":"2016-05-23T10:13:09.000Z","author":{"name":"Erik Zhang","email":"erik@vcage.com"},"message":"fix crash in RenameFile()\n"},{"hash":"06a191b8dec693c74c4d3e8347a89dc8596b42fd","date":"2016-07-06T16:15:53.000Z","author":{"name":"m3b","email":"m3b@google.com"},"message":"fix problems in LevelDB's caching code\n\nBackground:\n\nLevelDB uses a cache (util/cache.h, util/cache.cc) of (key,value)\npairs for two purposes:\n- a cache of (table, file handle) pairs\n- a cache of blocks\n\nThe cache places the (key,value) pairs in a reference-counted\nwrapper.  When it returns a value, it returns a reference to this\nwrapper.  When the client has finished using the reference and\nits enclosed (key,value), it calls Release() to decrement the\nreference count.\n\nEach (key,value) pair has an associated resource usage.  The\ncache maintains the sum of the usages of the elements it holds,\nand removes values as needed to keep the sum below a capacity\nthreshold.  It maintains an LRU list so that it will remove the\nleast-recently used elements first.\n\nThe max_open_files option to LevelDB sets the size of the cache\nof (table, file handle) pairs.  The option is not used in any\nother way.\n\nThe observed behaviour:\n\nIf LevelDB at any time used more file handles concurrently than\nthe cache size set via max_open_files, it attempted to reduce the\nnumber by evicting entries from the table cache.  This could\nhappen most easily during compaction, and if max_open_files was\nlow.  Because the handles were in use, their reference count did\nnot drop to zero, and so the usage sum in the cache was not\nmodified by the evictions.  Subsequent Insert() calls returned\nvalid handles, but their entries were immediately evicted from\nthe cache, which though empty still acted as though full.  As a\nresult, there was effectively no caching, and the number of open\nfile handles rose []ly until it hit system-imposed limits and\nthe process died.\n\nIf one set max_open_files lower, the cache was more likely to\nexhibit this beahviour, and cause the process to run out of file\ndescriptors.  That is, max_open_files acted in almost exactly the\nopposite manner from what was intended.\n\nThe problems:\n\n1. The cache kept all elements on its LRU list eligible for capacity\n   eviction---even those with outstanding references from clients.  This was\n   ineffective in reducing resource consumption because there was an\n   outstanding reference, guaranteeing that the items remained.  A secondary\n   issue was that there is no guarantee that these in-use items will be the\n   last things reached in the LRU chain, which actually recorded\n   \"least-recently requested\" rather than \"least-recently used\".\n\n2. The sum of usages was decremented not when a (key,value) was evicted from\n   the cache, but when its reference count went to zero.  Thus, when things\n   were removed from the cache, either by garbage collection or via Erase(),\n   the usage sum was not necessarily decreased.  This allowed the cache to act\n   as though full when it was in fact not, reducing caching effectiveness, and\n   leading to more resources being consumed---the opposite of what the\n   evictions were intended to achieve.\n\n3. (minor) The cache's clients insert items into it by first looking up the\n   key, and inserting only if no value is found.  Although the cache has an\n   internal lock, the clients use no locking to ensure atomicity of the\n   Lookup/Insert pair.  (see table/table.cc:  block_cache->Insert() and\n   db/table_cache.cc:  cache_->Insert()).  Thus, if two threads Insert() at\n   about the same time, they can both Lookup(), find nothing, and both\n   Insert().  The second Insert() would evict the first value, leaving each\n   thread with a handle on its own version of the data, and with the second\n   version in the cache.  It would be better if both threads ended up with a\n   handle on the same (key,value) pair, which implies it must be the first item\n   inserted.  This suggests that Insert() should not replace an existing value.\n\n   This can be made safe with current usage inside LeveDB itself, but this is\n   not easy to change first because Cache is a public interface, so to change\n   the semantics of an existing call might break things, second because Cache\n   is an abstract virtual class, so adding a new abstract virtual method may\n   break other implementations, and third, the new method \"insert without\n   replacing\" cannot be implemented in terms of the existing methods, so cannot\n   be implemented with a non-abstract default.   But fortunately, the effects\n   of this issue are minor, so this issue is not fixed by this change.\n\nThe changes:\n\nThe assumption in the fixes is that it is always better to cache\nentries unless removal from the cache would lead to deallocation.\n\nCache entries now have an \"in_cache\" boolean indicating whether\nthe cache has a reference on the entry.  The only ways that this can\nbecome false without the entry being passed to its \"deleter\" are via\nErase(), via Insert() when an element with a duplicate key is inserted,\nor on destruction of the cache.\n\nThe cache now keeps two linked lists instead of one.  All items\nin the cache are in one list or the other, and never both.  Items\nstill referenced by clients but erased from the cache are in\nneither list.  The lists are:\n- in-use:  contains the items currently referenced by clients, in no particular\n  order.  (This list is used for invariant checking.  If we removed the check,\n  elements that would otherwise be on this list could be left as disconnected\n  singleton lists.)\n- LRU:  contains the items not currently referenced by clients, in LRU order\n\nA new internal Ref() method increments the reference count.  If\nincrementing from 1 to 2 for an item in the cache, it is moved\nfrom the LRU list to the in-use list.\n\nThe Unref() call now moves things from the in-use list to the LRU\nlist if the reference count falls to 1, and the item is in the\ncache.  It no longer adjusts the usage sum.  The usage sum now\nreflects only what is in the cache, rather than including\nstill-referenced items that have been evicted.\n\nThe LRU_Append() now takes a \"list\" parameter so that it can be\nused to append either to the LRU list or the in-use list.\n\nLookup() is modified to use the new Ref() call, rather than\nadjusting the reference count and LRU chain directly.\n\nInsert() eviction code is also modified to adjust the usage sum and the\nin_cache boolean of the evicted elements.  Some LevelDB tests assume that there\nwill be no caching whatsoever if the cache size is set to zero, so this is\nhandled as a special case.\n\nA new private method FinishErase() is factored out\nwith the common code from where items are removed from the cache.\n\nErase() is modified to adjust the usage sum and the in_cache\nboolean of the erased elements, and to use FinishErase().\n\nPrune() is modified to use FinishErase() also, and to make use of the fact that\nthe lru_ list now contains only items with reference count 1.\n\n- EvictionPolicy is modified to test that an entry with an\noutstanding handle is not evicted.  This test fails with the old cache.cc.\n\n- A new test case UseExceedsCacheSize verifies that even when the\ncache is overfull of entries with outstanding handles, none are\nevicted.  This test fails with the old cache.cc, and is the key\nissue that causes file descriptors to run out when the cache\nsize is set too small.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=123247237\n"},{"hash":"fa6dc010a20b6eb175d92d05651972651278e06f","date":"2016-07-06T16:16:11.000Z","author":{"name":"sanjay","email":"sanjay@google.com"},"message":"A zippy change broke test assumptions about the size of compressed output.\nFix the tests by allowing more slop in zippy's behavior.\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=123432472\n"},{"hash":"3080a45b626f8ddb474bc5e860796a48b51b3cf0","date":"2016-08-11T14:33:30.000Z","author":{"name":"cmumford","email":"cmumford@google.com"},"message":"Increase leveldb version to 1.19.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=129930720\n"},{"hash":"a2fb086d07b7dbd9c4a59fe57646bd465841edd5","date":"2016-09-28T17:52:24.000Z","author":{"name":"corrado","email":"corrado@google.com"},"message":"Add option for max file size. The currend hard-coded value of 2M is inefficient in colossus.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=134391640\n"},{"hash":"a55f445b9cdbbefcdc823c52666efec0cca50ae2","date":"2016-10-06T15:50:46.000Z","author":{"name":"Erik Zhang","email":"erik@vcage.com"},"message":"Merge branch 'master' of https://github.com/google/leveldb.git\n"}]