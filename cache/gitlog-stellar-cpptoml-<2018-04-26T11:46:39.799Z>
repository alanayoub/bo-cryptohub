[{"hash":"46eebfba5aaf2606642cb0ba5dff76d023ba7070","date":"2013-05-20T10:47:07.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Initial import of cpptoml.\n"},{"hash":"98aca6a96259b92dd4ab04c2556d1306db616074","date":"2013-05-20T10:52:20.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Add section on alternative libraries.\n"},{"hash":"2a2f1f5bfbb598ec30066b4e3b878c462d09e423","date":"2013-05-20T10:54:25.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Add sha hash for targeted TOML commit.\n"},{"hash":"19f0e895aa24816d3f9084e06ff63e17b934a6c8","date":"2013-05-21T05:03:00.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Add support for parsing arrays of hashes.\n\nSee https://github.com/mojombo/toml/pull/153.\n"},{"hash":"dd9cac06cb89fb4b571e6b894fd3b4ec5dcd8807","date":"2013-05-21T05:45:33.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Add helper get_as function.\n"},{"hash":"fc030db31338630737979c7012f5c39d9b2d8e5b","date":"2013-05-21T05:45:54.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Add function to get a toml_group_array from a toml_group.\n"},{"hash":"0e483677c0c0462844de9b73f1fea5f661790037","date":"2013-05-21T05:47:06.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Add helper get_as function.\n"},{"hash":"3337d1f057454d085256bbc4f46df117db04585d","date":"2013-05-21T05:59:23.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"const correctness fixes for get_group() and get_group_array()\n"},{"hash":"4b6e7a639b4d2730ea5808c90f98acf2fe8a2e12","date":"2013-05-21T08:57:06.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Inline specializations.\n\nEliminates duplicate definition errors when used as a header only library\nand included more than once across the project.\n"},{"hash":"f1d015ffba8a2923516f311f5dfd11bc2628293e","date":"2013-05-21T08:59:02.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Merge branch 'master' into array-of-hashes\n"},{"hash":"091023c97ba6c25ce523c4b8e997ca7da24b17b5","date":"2013-05-21T08:59:58.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Add convenience function for inserting simple values.\n"},{"hash":"fdbb67e2769ff3c21107ad84cc5b705c5dc6e28f","date":"2013-05-21T09:00:32.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Add convenience function for inserting simple values.\n"},{"hash":"6a127955c73a9dfb2ac21cfb2b68fbbe19161fa5","date":"2013-05-21T09:01:01.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Inline keygroup array printing function.\n\nClean up a few comments as well.\n"},{"hash":"c95195d54ebdfc623127a6b19d10a0a7e65c6926","date":"2013-09-10T19:17:01.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Fix trailing whitespace.\n"},{"hash":"a07b3dfd4b35868d1224f78083eed54c756e54d0","date":"2013-09-10T19:18:14.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Merge branch 'master' into array-of-hashes\n\nConflicts:\n\tinclude/cpptoml.h\n"},{"hash":"a16e902652cec1a78804ddcbdd5d13bee349e705","date":"2013-09-10T19:18:25.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Fix trailing whitespace (array-of-hashes).\n"},{"hash":"4ee6cd9d0f989674a74d24e5ffab42ee791967cb","date":"2013-09-10T19:22:03.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Add convenience function that parses a file.\n"},{"hash":"29b2070c2839b11125cbcfe030bcc83bb76144b2","date":"2013-09-10T19:22:24.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Merge branch 'master' into array-of-hashes\n"},{"hash":"59e8b8209ff1896bb78e95c2eac18f00e29c3871","date":"2013-09-10T19:23:32.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Remove stray merge line.\n"},{"hash":"48adccf121586926900317a30b69b2ae2e50a3fe","date":"2013-09-10T19:33:53.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Add doxygen for parse_file, and throw exception if file cannot be opened.\n"},{"hash":"5063d2bee8ab0c72f011201d1c28f9aa954d1617","date":"2013-09-10T19:34:26.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Merge branch 'master' into array-of-hashes\n"},{"hash":"8157f569aa627506bfaeca1c7d16bd02d1adb954","date":"2013-09-10T19:40:56.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Change parse_file to be an inline function.\n"},{"hash":"5404566a0108585dd357c2c02ac310368b2a58d4","date":"2013-09-10T19:41:17.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Merge branch 'master' into array-of-hashes\n"},{"hash":"98ff733f16ab7f44b9c87fbc0d11c065af02151e","date":"2014-02-05T21:39:46.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Add support for GCC 4.8.\n\nMostly includes hacks around missing standard library features in\nlibstdc++ currently; these can be phased out as compiler support improves.\n"},{"hash":"bc850ff4896dca50777ccb00d996dc200158b6ba","date":"2014-02-05T23:36:45.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Repair regex CMake check.\n"},{"hash":"297ac3e2ef7d2f55a8d1398c3a87cc322e247191","date":"2014-02-05T23:53:44.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Add missing <vector> include.\n"},{"hash":"343a18f857c33ebefaa70a7c3a59b71d9add4342","date":"2014-02-06T00:05:01.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Add feature tests as definitions when compiling examples.\n"},{"hash":"e5e544e00587af17cae23776175f590f64a49f6f","date":"2014-03-20T22:17:32.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Make get_group and get_group_array not throw if the key doesn't exist.\n"},{"hash":"9a7b15faeccb24e136d075f6e1c3a60f058b2689","date":"2014-04-22T18:31:13.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Add get_array convenience function.\n\nWe should probably consider making toml_array its own type rather than\nhaving toml_value<std::shared_ptr<toml_base>> floating around...\n"},{"hash":"885d5c22d21bd7a4dbc1d40bcc653d6e22cdb9e0","date":"2014-06-20T19:37:37.000Z","author":{"name":"Michael Contento","email":"michaelcontento@gmail.com"},"message":"add find() and find_as<T>()\n"},{"hash":"9d9f21387999d2412781ee305c3a8225538a0b4a","date":"2014-07-05T16:48:10.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Minor comment change.\n"},{"hash":"d38898932b86fac781d0729926696e345ec03551","date":"2014-07-05T16:51:27.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Simplify find() implementation.\n"},{"hash":"e813ca3338096904a7a6bf71041e223830a7f67d","date":"2014-07-05T16:51:56.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Minor comment fix.\n"},{"hash":"0aa04dae42fc514353683c73c327159970b89c84","date":"2014-07-05T18:26:21.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Add group array support to parse_stdin.\n\nThis gets us back up to two failing tests with the BurntSushi/toml-test\ntest suite, relating to unicode and escape characters.\n"},{"hash":"39829cd28f99ab9ed765f093b8d88d68c3c2b08d","date":"2014-07-05T18:28:33.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Merge find() and find_as() into get() and get_as().\n\nThis has a nice side-effect of having all of the get_*() methods work with\nfully-qualified keys as well.\n"},{"hash":"e160feb2f5a151057c655f185ee0648cf06f5a32","date":"2014-07-05T18:36:49.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Modernize style and add a .clang-format for a \"style guide\".\n"},{"hash":"a4b715fdd1cecc21324392ab8d635f82f464f2b3","date":"2014-07-05T18:39:49.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Add check for empty keygroup array (e.g., [[]]).\n"},{"hash":"f05dd29d2cddb1e9d03fd7ba88f4da7d7e1ccbab","date":"2014-07-05T18:43:44.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Update README.\n"},{"hash":"eac42703c9bccda792b539df10487d26c5f78ca0","date":"2014-07-05T18:51:26.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Update copyright year.\n"},{"hash":"83643399da595c3ef2c836ac242491a9887e1cf7","date":"2014-08-30T10:44:02.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Fix potential issue with safety of get() functions.\n\nSeveral of these were returning a raw pointer to something inside of the\ntree. Instead, they now all either return a shared_ptr to something inside\nthe tree (preserving lifetimes, e.g. for get_array(), get_group(),\nget_group_array()) or an option (which gives a copy to the caller).\n\nThis could break code if you weren't religiously using auto, but it's been\ndesigned to avoid this if possible. (For example, MeTA doesn't need any\nsource changes.)\n"},{"hash":"bbcd3cdcc12a7003e969d83c65c646c32c76c817","date":"2014-08-30T10:46:12.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Remove unneeded global get_as() function.\n"},{"hash":"f5cb38ecccfe5051fae26c36c69e8a03ebb5d791","date":"2014-08-30T10:46:31.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Disallow # in keys.\n\nWe're now back to only failing the two tests related to string escaping and\nunicode in the toml-test suite.\n"},{"hash":"74dc129360ad68119b96f680ef537835424ffd9a","date":"2014-08-30T10:47:23.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Update stdin parsing example.\n"},{"hash":"90a78d5f3fadfd527ee49e52662b8d491515591e","date":"2014-08-30T10:47:38.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Update CMakeLists.txt to be a bit more robust.\n\nThe idea here is to facilitate its inclusion into existing CMake-based\nprojects by a simple add_subdirectory(). Users should be able to benefit\nfrom the compiler checks built into this file without having to re-write\nthem for themselves thanks to the CMake interface library feature.\n\nThis requires CMake 3.0.0 or greater.\n"},{"hash":"b29d78870dd777e70dadd79ee33d607225c24541","date":"2014-08-30T10:49:52.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Fix typo in CMakeLists.txt\n"},{"hash":"e2081afe701ff5404fd272ce42c6fb19c3b38416","date":"2014-10-10T22:03:45.000Z","author":{"name":"Vadim Zeitlin","email":"vadim@zeitlins.org"},"message":"Use size_t type for index instead of uint64_t.\n\nThis avoids\n\n\twarning C4244: 'argument' : conversion from 'uint64_t' to 'unsigned int',\n\tpossible loss of data\n\nwhen using MSVC and generally seems more reasonable.\n"},{"hash":"984b677c071dd5852becf250fcd1106784f3596d","date":"2014-10-10T22:04:43.000Z","author":{"name":"Vadim Zeitlin","email":"vadim@zeitlins.org"},"message":"Explicitly remove non-existent parser assignment operator.\n\nThis silences MSVC\n\nwarning C4512: 'cpptoml::parser' : assignment operator could not be generated\n"},{"hash":"91ff18bb0a8ab77661548a3683c77fea982f8ff7","date":"2014-10-11T21:30:18.000Z","author":{"name":"Vadim Zeitlin","email":"vadim@zeitlins.org"},"message":"Fix out of bound indices in parse::is_date().\n\nDon't access possibly invalid indices in to_match string. This happily\naccessed out of bound memory when parsing something as simple as \"foo = 1\", so\ncheck the string length first, before looking at its contents.\n"},{"hash":"dc9481152b569bf6ce0f71ad177a3b48a7b2dd3e","date":"2014-10-11T21:31:54.000Z","author":{"name":"Vadim Zeitlin","email":"vadim@zeitlins.org"},"message":"Always print the dates with UTC time zone.\n\nstruct tm doesn't contain time zone information on all platforms (notably not\nwith Microsoft Visual C++ compiler), so using \"%Z\" format specifier with\nstrftime() when printing it out is wrong, as the members always contain broken\ndown UTC time representation, but \"%Z\" would append the local time zone name.\n"},{"hash":"19d33fdaccf6b8e722f2557cc47adb0d0508cc04","date":"2014-10-11T21:41:38.000Z","author":{"name":"Vadim Zeitlin","email":"vadim@zeitlins.org"},"message":"Make the check for date validity more robust.\n\nThis avoid false positives such as recognizing \"::::-::-::T--:--:--Z\" as a\ndate -- and then failing to parse it, of course.\n"},{"hash":"1836609bdf704abe6b0073999bab4b0c80cd0d89","date":"2014-10-11T22:13:08.000Z","author":{"name":"Vadim Zeitlin","email":"vadim@zeitlins.org"},"message":"Fix typos and improve error messages wording.\n\nFix some typos in comments and use better wording for the user-visible\nerrors.\n"},{"hash":"ebc73f6c51033532dbeda46ab3c4add6dc24ec2d","date":"2014-10-11T22:13:38.000Z","author":{"name":"Vadim Zeitlin","email":"vadim@zeitlins.org"},"message":"Add line number to parse error messages.\n\nJust saying \"Failed to parse\" was singularly unhelpful, at least mention at\nwhich line number the error has happened. Perhaps column number reporting\ncould be added in the future, but the exact position of the error is not\nalways well-defined, so don't do it for now.\n\nReplace all occurrences of \"throw toml_parse_exception{...}\" with the calls to\nthrow_parse_exception(...), this will make it easier to customize the error\nreporting later if necessary by updating just this function.\n"},{"hash":"a26d420a0abf3ed1ac09b39fb39d7471621dd069","date":"2014-10-11T22:16:14.000Z","author":{"name":"Vadim Zeitlin","email":"vadim@zeitlins.org"},"message":"Handle parsing errors in the example.\n\nAborting on invalid input is not especially user-friendly, even for a simple\nexample.\n"},{"hash":"78d5753693d8ffc02a5ccf7f682b5e8536c41790","date":"2014-10-11T22:16:45.000Z","author":{"name":"Vadim Zeitlin","email":"vadim@zeitlins.org"},"message":"Remove unportable and unnecessary time zone fix up code.\n\nThe code using setenv(\"TZ\") doesn't compile when using Microsoft Visual C++\ncompiler as it doesn't have this (POSIX) function. And if it compiled, it\nstill wouldn't work as changing TZ environment variable doesn't work as\nexpected by this code under Microsoft Windows. And it seems to be totally\nunnecessary anyhow, as we are working with the broken down time representation\nwhich is already in UTC and not time_t anyhow.\n\nSo just remove it, not doing this doesn't change struct tm contents at all.\n"},{"hash":"7c5d6d70fad585feef48c583c236b47fe382b54f","date":"2014-10-11T23:04:53.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Merge pull request #2 from vadz/msvc-fixes\n\nBuild fixes for MSVC 12 (a.k.a. MSVS 2013) compiler."},{"hash":"9e9258626f956318610be5a48bb5ac46a7d9e20e","date":"2014-10-11T23:07:46.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Merge pull request #3 from vadz/better-error-messages\n\nBetter error messages."},{"hash":"f4fcf542b2d63aefbb4a117edca45914e41dc0ee","date":"2014-10-12T22:15:10.000Z","author":{"name":"Vadim Zeitlin","email":"vadim@zeitlins.org"},"message":"Refactor to avoid throwing exceptions unnecessarily.\n\nDon't throw from resolve_qualified() if we are only calling it to find out\nwhether a key exists or not, there is nothing exceptional if it doesn't.\n\nThis does make the function signature rather ugly, but this is the price to\npay to avoid changing the existing code too much while avoiding unnecessary\nexceptions which are very annoying in practice when running under debugger as\nthey trigger breakpoints-on-exception.\n\nAvoiding exceptions in the normal code path should also be much better from\nperformance point of view.\n"},{"hash":"2d1793e4a9f9720815cec047c0ce469b64887be4","date":"2014-10-13T08:51:52.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Merge pull request #5 from vadz/avoid-exceptions\n\nRefactor to avoid throwing exceptions unnecessarily."},{"hash":"40b95891dfd9a0beb372600ca378abb504dcdc32","date":"2014-12-21T23:32:18.000Z","author":{"name":"Vadim Zeitlin","email":"vadim@zeitlins.org"},"message":"Avoid clang warnings in cpptoml sources.\n\nUse noreturn attribute for clang as well, otherwise every use of\nthrow_parse_exception() results in a -Wno-return warning.\n\nThe analyzer_noreturn attribute was inappropriate here as it indicates that\nthe function can, actually, return, but should just be considered as not\nreturning for static analysis purposes, which was not the case here. And it\ndoesn't help with compilation warnings at all, so all it did was to prevent\nthe noreturn attribute from being used.\n"},{"hash":"f6598707fe02018bf454bbe2ff8d6eeac868d842","date":"2014-12-22T01:54:17.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Merge pull request #6 from vadz/fix-clang-warnings\n\nAvoid clang warnings in cpptoml sources."},{"hash":"056da850bf7f7cb59f23f766fac50940183535f9","date":"2015-02-22T20:59:36.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Update clang-format style.\n"},{"hash":"574d2c9c09d5fab0335f36458366e11c9c03b916","date":"2015-02-22T21:00:13.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Add build directory to gitignore.\n"},{"hash":"40a413d3bf95775a086d1494240c37c7147e2d01","date":"2015-02-23T05:09:12.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Change naming conventions to more closely match toml spec.\n\nNotably: group -> table.\n\nThis also removes the redundant \"toml_\" prefix on all of the types defined\nin the cpptoml namespace, fixing issue #4.\n"},{"hash":"ea7a6d17dc373047f63d43fc2f697841896e1d0d","date":"2015-02-23T05:09:32.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Split out functions that resolve qualified keys.\n\nThe spec is pretty clear now that dots are allowed as keys, so we need a\nway to find keys that actually do contain dots.\n"},{"hash":"0bf453c2c13c7b8bfed186df0acd9b0d84553adc","date":"2015-02-23T05:09:32.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Replace some instances of \"keytable\" with just \"table\".\n"},{"hash":"0ebf98df85b7c1c04a7998bb48e64fc39ef3b214","date":"2015-02-23T05:09:32.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Correct our handling of whitespace in basic key/table names.\n"},{"hash":"05cbd4cfb7472a4e84275fc93b687d80fcc4edd6","date":"2015-02-23T05:09:32.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Allow quoted keys.\n"},{"hash":"cf28fa35b4fba6d61907e5c018bfb24fb97fffce","date":"2015-02-23T05:09:32.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Use correct \"bare\" terminology from toml spec.\n"},{"hash":"4bfb017911ecfabd8d43f97542d127f6272513b7","date":"2015-02-23T05:09:32.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Unify parsing of key names.\n\nThe same parsing routine is run for table names, table arrays, and keys\nthemselves, where before we were just manually doing it each time. This\ndidn't matter when there weren't quoted keys, but this is more elegant\nanyway.\n"},{"hash":"10bf9cf1620b580c62483270807c4d84ef94a252","date":"2015-02-23T05:09:32.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Add some comments to parse_table_array().\n"},{"hash":"4fc7eac0e538407ab5ab57fac7e52756f3353e3d","date":"2015-02-23T05:09:32.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Add multi-line basic string support.\n"},{"hash":"6c17ce8155cb0b6622c23e06b845498958ed13b0","date":"2015-02-23T05:09:32.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Support raw string literals.\n"},{"hash":"936f133d1ef4dbe9aeee8e138b13860d89033a9b","date":"2015-02-23T05:09:32.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Support leading + in integers and scientific notation in floats.\n"},{"hash":"3dd0f3b4f1600ea2fb2b066fc82d54a62d8ca475","date":"2015-02-23T05:09:32.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Add support for '_' as a digit separator in numbers.\n"},{"hash":"bad172dbd323922d829b46cdd9d6b1090344bdb7","date":"2015-02-23T05:09:32.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Add support for RFC 3339 datetimes.\n\nWe no longer represent time as a std::tm since it doesn't have support for\nstoring the offset or the fractional seconds. We have a dumb datetime\nstruct that serves as our surrogate.\n\nI really wish we had a std::chrono::datetime...\n"},{"hash":"dc2448d7ff304af5b66ade95e0d3878fc244ff2c","date":"2015-02-23T20:50:11.000Z","author":{"name":"Chase Geigle","email":"geigle1@illinois.edu"},"message":"Add support for inline tables.\n"},{"hash":"4ef87f225f72aefecc93ee27a1861d9284102655","date":"2015-02-23T21:57:59.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Unify parsing of arrays of non-base values.\n\nWe now reuse the same function for arrays of arrays and for arrays of\ninline tables.\n"},{"hash":"ed0e39d0ef469722d69429acd952380963f2b9d9","date":"2015-02-23T21:59:04.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Convert datetime values from int64_t to just int.\n\nThere's really no reason to force these to be 64-bit values.\n"},{"hash":"739379b536cee5364fad4f010cd3bc96a26afdf0","date":"2015-02-23T22:13:21.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Update README for v0.4.0 support.\n"},{"hash":"d325b1d9b3872b49e3bca259fbb67c0acf16dc45","date":"2015-02-23T22:16:21.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Add Travis CI support.\n"},{"hash":"ecf4230086b2e5d57ddcebd615db050c1a7f34fd","date":"2015-02-23T22:24:43.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Add build status to README.\n"},{"hash":"7332023144a79f1b9c44ba37830c53ee92708fd9","date":"2015-02-23T22:26:19.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Update README to emphasize v0.4.0 support.\n"},{"hash":"a8e0b0e4d26ac8ffdff2ab2edb4eb9006cdf48f4","date":"2015-02-23T22:50:05.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Fix get_(qualified_)as<T>() to use get() instead of value().\n"},{"hash":"5361e1c2eb2e00ac6566cfc973a1f9508f447b85","date":"2015-02-23T23:00:51.000Z","author":{"name":"Chase Geigle","email":"sky@skystrife.com"},"message":"Fix broken link in README.\n"}]