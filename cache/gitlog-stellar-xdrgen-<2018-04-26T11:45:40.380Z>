[{"hash":"92338c2058bf0f778767cc2b992ee5a1338c67f7","date":"2015-01-31T00:03:12.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Initial commit\n"},{"hash":"940f537e6ea226289dafd4dd58f8686cf46a3ce7","date":"2015-01-31T17:50:53.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Checkpoint commit\n"},{"hash":"c4318d8f7c2ecdef23d3b13020defcb994ffcfdf","date":"2015-01-31T18:44:21.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Breakup grammar file\n"},{"hash":"c655c122ba5aa7375a4c0591b698b5247df354c0","date":"2015-01-31T20:48:03.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add testing helpers to Guarfile\n"},{"hash":"ae7f07820bd8c402c98c8e82a6c95a5e3414ef30","date":"2015-01-31T21:01:50.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Woot!  we can parse the hayashi xdr files\n"},{"hash":"5d3cc83cf6914c978a2b6273da1be98bae725bfa","date":"2015-01-31T22:32:56.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Extract AST to Xdrgen::AST\n"},{"hash":"98cb97ae88a96396ea983c2158083e9743c56947","date":"2015-01-31T23:35:58.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Checkpoint commit, working on codegen\n"},{"hash":"a52917f526474c383ebb0994905a2737ee0363ce","date":"2015-01-31T23:38:49.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Extract declaration.treetop\n"},{"hash":"47cce8cd6c4efed587ff98a00340ed7c65a90a96","date":"2015-01-31T23:42:19.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Move back to specified recursion\n"},{"hash":"ea41bdba14758d7a89fbc877f806024b5b261305","date":"2015-02-01T01:44:17.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Checkpoint commit: can generate codes now\n"},{"hash":"ce9b356b0f9174810671367aba2111e3f1186888","date":"2015-02-01T02:34:29.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Nest definitions\n"},{"hash":"edbcb05f4ea456f941caa040e998376307982d5a","date":"2015-02-01T04:55:37.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Refactoring, work on Struct generation\n"},{"hash":"b028d31075807def70b140c74802fe0b69143ceb","date":"2015-02-01T05:11:25.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"We are rendering Structs!\n"},{"hash":"f05e20a5a4635eaffe6ca0ac57eb38a78a98a6a5","date":"2015-02-01T05:17:29.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Extract Concerns::HasChildren\n"},{"hash":"cbdc52266ddfee247b4f067d2f4ee3b9834bf799","date":"2015-02-01T16:47:14.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add floating type support and boolean support\n"},{"hash":"9ec7343b184e05f2ee6d7c2cbbe321848c412ec1","date":"2015-02-01T16:49:09.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Grammar cleanup\n"},{"hash":"330fb33fe9578fe10c2c6ede46f9047fdaeefcc1","date":"2015-02-01T17:21:16.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Stub some more code generation\n"},{"hash":"855a8a05785bde7453ce4073a335e3fa0f4f4fce","date":"2015-02-01T17:21:28.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add `definition_blocks` helper\n"},{"hash":"60601551c4cf1ef8ff2f4daad916df731fd2653f","date":"2015-02-01T17:27:45.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Adds generated top matter\n"},{"hash":"6d9ed279a565546e8c2e52a65a23a3fd2ccbd260","date":"2015-02-01T17:44:10.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Various improvements\n"},{"hash":"c5fc91a21e646ab7c17dc90abeee1165a0996666","date":"2015-02-01T20:11:14.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Checkpoint commit\n"},{"hash":"79df3fd1a7474d7066d44e3811ac8c2c9ce35ea1","date":"2015-02-02T18:19:59.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Start process of re-working generator infrastructure\n"},{"hash":"2f1c8f175fe63d5c0831622c97a4359fd80af2c0","date":"2015-02-02T19:04:57.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Make Generator instantized\n"},{"hash":"d010cbb5276b00d3b266c150c2e498758baebc0c","date":"2015-02-02T19:15:49.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add clean task\n"},{"hash":"3b4b365ca0306e36bda71d133f97555f4c8e34b2","date":"2015-02-02T19:16:09.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add Xdrgen::Compilation\n"},{"hash":"e06a20ba200ef4e286c58a09430b4d37307f27ff","date":"2015-02-02T19:43:28.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Adds Contained concern and `full_qualified_name` to Named\n"},{"hash":"772f45f52e1dfedf6751e94c369419d72072c418","date":"2015-02-02T21:46:00.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Properly classify bare 'unsigned' decl as an Int decl\n"},{"hash":"72e3174414ee92c99b4bd14b63edb841df72dc2d","date":"2015-02-02T21:50:53.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Work on building out enum generation\n"},{"hash":"b2b7882e7a40eaf1340494ffd2f172302c6df1ee","date":"2015-02-02T21:51:03.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add enum into test file\n"},{"hash":"c2c4b89535125a6ff645a42136d27567c4862e39","date":"2015-02-02T21:51:21.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add keyword protection for identifiers\n"},{"hash":"4a69b205290f81972bbf0ba26341052248a5861e","date":"2015-02-02T21:51:44.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Allow empty puts in OutputFile\n"},{"hash":"fa8d2a000b006eeb525fe82e015a99a651eea261","date":"2015-02-02T22:07:38.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Stub out index/definitions render methods\n"},{"hash":"0dbd57bd3697e9ad1a62d69e01f169e08ad95d93","date":"2015-02-02T22:34:37.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add enum values\n"},{"hash":"680e7c37224ee3a05bd487edf5fe6d065083255e","date":"2015-02-02T22:43:15.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Upgrade union rendering\n"},{"hash":"fc6554962051fdd4ae0e1e840f130ebd09c4ac8c","date":"2015-02-02T23:06:35.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add Whitespace custom node\n"},{"hash":"c830fdd50e52b5041eae7e583770df318314b4ea","date":"2015-02-02T23:11:00.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Render index correctly\n"},{"hash":"55a75636d2e2ce9886c22c5ca9a2dc73b3e473ec","date":"2015-02-02T23:38:02.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Use nested modules on rendered files\n\nThis will let us use lexical constant resolution, meaning\nwe wont have to fully qualify types when generating code.\n"},{"hash":"22abf3c3f1ae52cd0303725580acf9b8be4b7d58","date":"2015-02-03T00:11:15.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Update readme\n"},{"hash":"7e9e0e4b045c27731a8f20a30227137a753ec23e","date":"2015-02-03T02:26:50.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add enum type spec support\n"},{"hash":"bab47d9b6357a229dd93a4411c1976fdb72c4770","date":"2015-02-03T02:45:31.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"More nested definition work\n"},{"hash":"145c9b87f53df3ddbdf6def9e26835ac8dfbabc5","date":"2015-02-03T02:55:54.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add nested definition support for unions\n"},{"hash":"c98cfb6c2093cc362ad8dcf11881cef735488b59","date":"2015-02-03T03:17:53.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add default case support\n"},{"hash":"4ce77fd58f92298e189352eabd747741a87b35b6","date":"2015-02-03T03:20:34.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add `require 'xdr'` to top matter\n"},{"hash":"cad36d88a3701272c3899d4214d382f294f31824","date":"2015-02-03T03:53:23.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Fix void union arm breakage\n"},{"hash":"ad6e44510180b28e4e5d6408d40bc499ebade3c1","date":"2015-02-03T03:56:07.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Normalize enum member names\n"},{"hash":"947f980abc087bb12b1bac9de69075a082fbafef","date":"2015-02-03T14:51:07.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Improve code formatting with OutputFile#break and unbreak\n"},{"hash":"ef8defca2ab6f8299048be09b6ad9d428f84dd8d","date":"2015-02-03T17:22:59.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add assignment balancing to generated enums\n"},{"hash":"e088b0bfb854f70d7a3e6ddcb8673695810310e5","date":"2015-02-04T01:27:24.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Switch struct & union to subclasses\n"},{"hash":"031067d889872cda100825c722729650641ebe46","date":"2015-02-04T01:37:54.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Make autoloads relative\n"},{"hash":"82fafde14a2eb2bbd5305106412f2fd913e6cfed","date":"2015-02-04T01:53:44.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Fix broken autoload for nested definitions\n"},{"hash":"dae5abcc730fe2726345e2333b5778bccaed3bc1","date":"2015-02-04T02:01:42.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Switch between class and module, depending upon container type\n"},{"hash":"bc090d0e52a45e42fc7726ff3bf4c7e34e703950","date":"2015-02-04T03:39:37.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Fix void union arm generation\n"},{"hash":"1bb62247f70c14c056a9f6af1d9d92307d000dce","date":"2015-02-04T03:48:16.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Fix variable array declarations\n"},{"hash":"c45ba526cf6708056b5029abb1dce9037fb319c1","date":"2015-02-07T18:58:50.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Improve balancing, extract `render_nested_definitions`\n"},{"hash":"247f4676adda23d9033e46ef5085c08c8f4cbede","date":"2015-02-11T02:16:40.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Switch to new enum style\n"},{"hash":"ff121b7221b4a7d5c9bcacaf663c7a2b05d2e2f1","date":"2015-02-11T19:41:13.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Fixes for union generation\n"},{"hash":"8a206d612f5743fc7dd1de5ab450cd0e2dd30dd6","date":"2015-02-12T03:02:15.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add __dir__ helper to generated files\n\nFor ruby < 2.0 support\n"},{"hash":"67d10ca6c847a17479b3382228f5424570af2ccf","date":"2015-02-13T02:32:32.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Fix typo\n"},{"hash":"37259dffa2cc305e0e5f02a05cc852cc98fe5ab0","date":"2015-02-13T02:51:31.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Fix broke \"=0\" parsing on enums\n"},{"hash":"1eddc5c627220a3ed660508d7b16a1c840582c6f","date":"2015-02-19T21:35:53.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Fix 1.9 support\n"},{"hash":"280ce2c0d35812d7285c94c389651ec18e5e0563","date":"2015-03-02T19:31:54.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Use bundle to run specs\n"},{"hash":"d81ab98399c2f04014f5716b6a7a976471f131cd","date":"2015-03-02T19:32:36.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Render union discriminants using symbol form\n"},{"hash":"1e34d294af722513483d2dad67f676fc755ab84f","date":"2015-03-02T19:32:44.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add a pluralized struct name\n"},{"hash":"9bc9d1b3ee1ba8d9f8795bc28a5c98855d3c134f","date":"2015-03-02T21:12:41.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Properly maintain pluralization when rubify-ing type names\n"},{"hash":"67a186f21d6c287279ecbf6d966f985cf8bda226","date":"2015-03-02T22:22:27.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Rename Generator to Generators::Ruby\n"},{"hash":"5e355fad3f574cbcc2e5feb8878474f8fe04b2cd","date":"2015-03-03T19:46:19.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Introduce XDR::Namespace into generated code\n"},{"hash":"fe01f7248cfc8cbef1b1c0401402b052c415932f","date":"2015-03-03T20:06:15.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Fix parsing for consecutive case statements on a union\n"},{"hash":"034aca340bf5126b985d809e5f888df63722c70f","date":"2015-03-10T18:41:25.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add failure_line helpers\n"},{"hash":"9540269541ef3d55e9a498661cbc622f175b2808","date":"2015-03-21T19:08:20.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Fix balancing\n"},{"hash":"9d8cebe2a9a867306b0107c0a46e76f56bf614b5","date":"2015-03-25T02:56:06.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Padding fix\n"},{"hash":"3fdee501c6a80459345189683e33d6a24418e7f3","date":"2015-03-25T02:57:23.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add language flag\n"},{"hash":"017f7341fc05d7576aab531243e316bae78a4166","date":"2015-03-26T15:21:36.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add beginnings of namespace support\n"},{"hash":"a99ddfc1c03290e3086cc17bd462f0f0664f6c6b","date":"2015-03-27T01:44:29.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Simplify typespecs\n"},{"hash":"a955b9c5db8ec60b0433750bb59f880002e06551","date":"2015-03-28T00:51:07.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Work on golang support\n"},{"hash":"345804d62e4685d4d87c422ae12c782a33dea128","date":"2015-03-28T01:14:10.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Fix parsing of optional primitive types\n"},{"hash":"10e75cec193712f28ea1abb1f042508ad33e53fd","date":"2015-03-28T02:26:10.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add optional member support to golang\n"},{"hash":"51fa5abc45d5b284484ccbbc90a5bda84f0e9fad","date":"2015-03-28T15:51:20.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Extract common decoders into a single xdr_common.go:\n\nThis allows us to generate multiple .x files into the same\npackage and not define multiple versions of DecodeTYPE funcs.\n"},{"hash":"f765353a68f581bc95abaca8a5f733587e8c1424","date":"2015-03-28T15:51:40.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add \"optional struct member\" fixture\n"},{"hash":"aff035bcd6b27e348b3a35511494fbe486ec588b","date":"2015-03-28T17:41:53.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add fixed sized array support to go\n"},{"hash":"4087d8d605f927d5075d14c16b2a0d3399a3d066","date":"2015-03-28T18:21:06.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add primitive vararray support to go\n"},{"hash":"afd601a04c044169d1fe89dcfaa8fd084a86a34b","date":"2015-03-28T19:14:22.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add FixedOpaque and Opaque support to golang\n"},{"hash":"7203ea1875ff236446a8c083961cf88e921fedef","date":"2015-03-28T19:28:06.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add string support to golang\n"},{"hash":"617d6199f746385f8389f2575a1c7aba77884ef1","date":"2015-03-28T19:33:51.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"slightly improve error strings\n"},{"hash":"f76a9abdd06af9daba6595554dcf988d45a676dd","date":"2015-03-28T19:51:20.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add optional typedef support\n"},{"hash":"ec1b9f9ca0ea1ca03893c5125e8796f06f882212","date":"2015-03-28T19:56:21.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"golang: Extract optional_decoder, add optional enum support\n"},{"hash":"8bcd6f68ff5ed6b09ee86dd9feb1800f4431be20","date":"2015-03-28T20:12:38.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Use optional_decoder for primitives\n"},{"hash":"0d942b5c6c349f583891725d493bd22d0551bd57","date":"2015-03-28T20:19:00.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"golang: extract array decoders\n"},{"hash":"4f4e2be8d6d6c4a3a79c48653775140867c8ce9b","date":"2015-03-28T20:21:48.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add array decoders for enum and typedef\n"},{"hash":"5372bff11acede68936d001bfbaab5eeb1fe9686","date":"2015-03-28T21:15:50.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add optional and array decoders for structs\n"},{"hash":"0ed53e194d74f26047d83a685d75c3ea06b68c90","date":"2015-03-28T21:21:33.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Work on unions support for go\n"},{"hash":"cee232f15abefd7d17d8ebe20aa0951d82214232","date":"2015-03-28T22:50:47.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Various improvements\n"},{"hash":"4ff9974952698f5f1557a8df37558aa8a73d1f30","date":"2015-03-28T22:52:12.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Write common file to correct dir\n"},{"hash":"4071c29df6e4f97ff7edfd621d5bd01e5a0deca8","date":"2015-03-28T22:53:22.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Move primitives to go file\n"},{"hash":"4522543b4c3216f0a02e1bda83d73cb045543946","date":"2015-03-29T00:49:31.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Rough in some stuff on union\n"},{"hash":"08f48d7d578bd4a2f702d5c6f295ed4335c4ba26","date":"2015-03-29T01:34:15.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Refactoring, use proper decodes\n"},{"hash":"e69d3e00e6656e98968261c010733a01fda2c595","date":"2015-03-29T17:22:26.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add source comment rendering in golang, work on decoding\n"},{"hash":"7ad29013a35858eead1c816ee98e9aca63b05f06","date":"2015-03-29T19:03:30.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add union constructors\n"},{"hash":"6561f091cc84ad8a502efdf10bc0668af1fcb073","date":"2015-03-29T19:44:40.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add MaxXdrElements const\n"},{"hash":"3f7a0bf79e84a7835cd9a56f51800bf1882e4205","date":"2015-03-29T19:45:17.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"golang: add indeterminate size support\n"},{"hash":"0d08ec1fb58380d78a9fdd3c561c22e392333331","date":"2015-03-29T20:05:17.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"golang: Add default case constructors\n"},{"hash":"afdec33be74dce77b1c3a82e4f2dad4667bf4fb2","date":"2015-03-29T21:03:35.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"golang: nested definition support\n"},{"hash":"f45168f4497df7e2bb20a23ca12b5fb93a5d1005","date":"2015-03-29T21:12:21.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"golang: fix array type_string\n"},{"hash":"413a5d3702984dd4c1205596032f259dbb649a1d","date":"2015-03-29T21:33:35.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add better error for unknown discriminant type\n"},{"hash":"e889829e98ce5af5b642a494cf5d5fb505814a31","date":"2015-03-29T22:13:32.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Convert to multi-file compilation\n"},{"hash":"bb5ffa104311e77b66269b537b731f0acb8ec947","date":"2015-03-29T22:24:44.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add type resolution helper to simple typespecs\n"},{"hash":"ae99af8cda78622ac7748c0963c529c33a5a2738","date":"2015-03-29T22:29:34.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Fix string decoding\n"},{"hash":"d6e5ace94f1aa1bccc54532d9e65a52c8f1c5f25","date":"2015-03-29T22:37:42.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add the other decoders to union\n"},{"hash":"bea1cc66a347c26d93abe9b3c3a43b25866b3070","date":"2015-03-30T01:00:26.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"golang: Add encoding support for primitives\n"},{"hash":"c5f2cfe35fc728052d6a262ac46b248af22fd72d","date":"2015-03-30T01:23:09.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"golang: enum and typedef encoding\n"},{"hash":"ea328f84d48035f980bb3d51eb1f38778fc77de2","date":"2015-03-30T01:33:32.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"golang: Add struct encoder, fix string encoder\n"},{"hash":"079069dfebe084aeccaaae02b3301d3f0bdb1d64","date":"2015-03-30T01:59:00.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"golang: Add union encoding\n"},{"hash":"ed625dd05aa08fec9efd97d9c98d2f21932122f9","date":"2015-03-30T02:21:44.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"golang: finish union decoding\n"},{"hash":"a014d4f3a6530d8f682c0efac85db6e7da2d468b","date":"2015-03-30T03:24:49.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Work work on go support\n"},{"hash":"f0fe47f345ee9d11daa2bad832b97ba588b517a3","date":"2015-03-30T03:43:32.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Use case names for local storage\n"},{"hash":"fb33c3379801521d8eea27802097f30af541cbb4","date":"2015-03-30T16:05:32.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"More work on union support\n"},{"hash":"fa6d5d55cdc1f88218d46097f7677b651c6d8b66","date":"2015-03-30T16:23:15.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Update readme and gemspec\n"},{"hash":"33a7601b526c56933a853db24a054e5aabf46925","date":"2015-03-30T16:47:06.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Fix minor bugs in ruby generation\n"},{"hash":"4a39cca17da558875ed24650d8d7a32b54e86c9f","date":"2015-03-31T21:30:56.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Fix block comment parsing\n"},{"hash":"015c2edafa2ee5e63d5273e73a6b43416fc4361a","date":"2015-03-31T22:08:57.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add source comments to generated ruby\n"},{"hash":"98c647fab189e21e3b7004630c2a0a6c5c209afa","date":"2015-04-01T01:39:41.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Preserve Hexidecimal constants\n"},{"hash":"2ffa38a7b396b46b535e09a4ad55857f8a830277","date":"2015-04-01T03:08:25.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Fix source comment whitespace\n"},{"hash":"b0bc8f7aaae1e09125cbc356e2c1b2958f49bfdc","date":"2015-04-01T03:44:21.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Fix enums that use hexidecimal\n"},{"hash":"ea4374eff53f86c928c3113ef75d2bc0c633b03f","date":"2015-04-01T03:44:39.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Properly choose value binding for union arms when encoding\n"},{"hash":"3e9a415439b8f62703419b62326f69a7e3cb30d5","date":"2015-04-01T16:47:03.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"More work on golang (still doesn't work)\n"},{"hash":"6248610dfe3d0af0f31c64902d37cf94d029d431","date":"2015-04-01T18:41:59.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"First steps for javascript support\n"},{"hash":"37b59ac7f3064f3103f057fe67fe60e703a27f2b","date":"2015-04-01T18:41:59.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"javascript: add struct support\n"},{"hash":"94bfde1546516ba3e1c41aadc6314cea656bbf68","date":"2015-04-01T18:41:59.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"javascript: support a ton of the primitive types\n"},{"hash":"de8b390854c29ed79eb676ff944ff4546728fec3","date":"2015-04-01T18:42:00.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"javascript: Add nested definitions\n"},{"hash":"e4b8a222ef887f124dc664d1c9cc2af3486c4d94","date":"2015-04-01T18:42:00.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"javascript: More work on union support\n"},{"hash":"fb10766d051a105fcf2e845114a20cc0dbf6557c","date":"2015-04-01T18:42:00.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"javascript: fix struct rendering\n"},{"hash":"1321ac37e2fc98ccb85be5e69406a457035e4d09","date":"2015-04-01T18:42:00.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add jshint comment to allow for large define blocks\n"},{"hash":"b386602747f88e661601c7a4ef344a3b5ce457f1","date":"2015-04-01T18:42:00.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"javascript: Working unions\n"},{"hash":"bf995f7e5f82f476c6a96e52885ca4fe809cfc95","date":"2015-04-01T18:42:00.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Switch license to apache 2\n"},{"hash":"92864f54ea0971d9661a785fe53cbbe25fd88df0","date":"2015-04-01T18:54:54.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add the fact that we are starting to support javascript in xdrgen\n"},{"hash":"3bb3ff87d2de5b489c9e7ab251641ef68fb9a23b","date":"2015-04-01T19:15:33.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add esnext jshint directive, push above import\n"},{"hash":"c24a88f7838911a5134e06115e8675200414c13b","date":"2015-04-02T19:31:07.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Update javascript generate to target latest js-xdr library\n"},{"hash":"b39e02130ea087eea9638a030a0ee1173fe4f36b","date":"2015-04-04T21:48:06.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"javascript: Fix varOpaque rendering\n"},{"hash":"59f040445006f31b00cecf5c2d85d15bb1883dfa","date":"2015-04-07T16:16:50.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Update javascript status\n"},{"hash":"b1f2a3e4797cf79007514eef282f799c54370d67","date":"2015-04-08T17:13:08.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add badges\n"},{"hash":"87ea4f9e1d749fd1720a455b54d67ee05a84ad16","date":"2015-04-08T18:49:59.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add travis.yml\n"},{"hash":"7085d43c464aca8bf52900d81a1f4bdbd9339853","date":"2015-04-08T19:11:34.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add ruby restiction to gemspec\n"},{"hash":"647fc6bb7431b83023c7d276c78242897d58b256","date":"2015-04-08T20:02:26.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add Output#write helper\n"},{"hash":"768c9561a688d3a85117ecbc906922d8a4d5e36c","date":"2015-04-08T20:31:29.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Run test suite in 2.2.0 on travis\n"},{"hash":"a0875e7c21d1cc7b3d5714a58d4cbe4a4b0c3772","date":"2015-04-10T07:50:51.000Z","author":{"name":"Andrew Rogers","email":"abennobashi@gmail.com"},"message":"java\n"},{"hash":"0795ee055dc5645041626aa91cad14781028877d","date":"2015-04-29T20:02:25.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Fix void default arm in javascript\n"},{"hash":"3763bcda0564fd050a723eeac2ddda1c58882d2c","date":"2015-05-22T18:13:10.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Greatly simplify go code, use fork of go-xdr to drive encode/decode\n"},{"hash":"ab2ddd46de4be93632e55a79c4dce63145f88b62","date":"2015-05-22T18:15:09.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add notes for go support\n"},{"hash":"42c27ab79351860e748e51ff59e5a46e2d024563","date":"2015-05-22T18:29:32.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add union constructors\n"},{"hash":"f193e51a2f610ce6518ed4c1c80a6db09735dd67","date":"2015-05-22T18:33:10.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Merge pull request #8 from stellar/go-3\n\nNew Go support"},{"hash":"335fcd7068caf20a5cbd3ee02384d1ee1755a2b2","date":"2015-06-01T22:04:19.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add `Enum.String()` method for golang\n"},{"hash":"96d0c070eb487397ea42cc4d993d9bae27ce00e9","date":"2015-06-29T15:25:12.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Ignore .DS_Store\n"},{"hash":"cc927c968cac48da3b7956c36ac2bc20cdd30ee0","date":"2015-07-06T17:01:43.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add generator spec, as a sanity test for generating code in our various supported languages\n"},{"hash":"c0bd79c4d822682cb9830f12cfea7ca1e558c6bb","date":"2015-07-06T17:34:10.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Separate parser and generator specs\n"},{"hash":"c63fb35c3f537dbe7aa928ea2b1160fca840fe30","date":"2015-07-06T17:48:20.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Remove quadruple def from test file (we don't support quads)\n"},{"hash":"52ddda0e56b0703ee79c0dcff5861541d6d258d6","date":"2015-07-06T18:06:56.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"More fixes for generator breakages:\n\n- Adds TypeResolutionError for more appropriate error messages\n- Add “focus” helpers to generator_spec for better test iteration speed\n- Fix typedef inversion on optional.x that was breaking go and java\n"},{"hash":"b085a2b8ea15f51685e7fb12cfc33d85ea56d43f","date":"2015-07-06T18:12:31.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Get back to green generator specs\n"},{"hash":"105887a7809771dd654893e080c74e27ea633aa1","date":"2015-07-06T18:38:44.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add AST::UnionArmCase\n"},{"hash":"0de8e88bafc8de15d0694245c91fb4e0c7d2da0c","date":"2015-07-06T20:28:48.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Fix int-based union rendering in ruby, add support for const sizes in arrays\n"},{"hash":"545bc3dd718266b791354a5cba7116ecae8e00f9","date":"2015-07-08T21:34:07.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add support for non-enum unions and const references to js\n"},{"hash":"0a0a5f623f30d7ad3a1938264a57be57b10c7be5","date":"2015-07-09T16:27:02.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Minor improvements to ruby:\n\n- Dump “block” based code generation.\n- Remove timestamp from top matter\n- Fix name_string such that it doesn’t mess with pluralisation\n"},{"hash":"0790c1b53ffdd73dceb71f7cae3840d433826be8","date":"2015-07-21T01:48:58.000Z","author":{"name":"Graydon Hoare","email":"graydon@stellar.org"},"message":"Do not use activerecord classify since it de-pluralizes Meta to Metum.\n"},{"hash":"ff13e9aaee60d6f4f0f154e03dbc8b7f51b37d53","date":"2015-07-21T17:29:00.000Z","author":{"name":"Andrew Rogers","email":"abennobashi@gmail.com"},"message":"Update java\n"},{"hash":"99c6b2a6ece5f748c7ff38a9b595b8759aefbfd9","date":"2015-07-21T18:43:52.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Merge pull request #11 from graydon/do-not-use-classify\n\nDo not use activerecord classify since it de-pluralizes Meta to Metum."},{"hash":"4dab2c7e5cda5aa2cd0ab3733a854b2edb28522e","date":"2015-07-22T20:18:56.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Properly document the need for ruby 2.1\n"},{"hash":"58df6f6013853bb23a9a8a995e7edc928812027f","date":"2015-07-22T20:20:00.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Merge pull request #12 from nullstyle/document-2.1\n\nProperly document the need for ruby 2.1"},{"hash":"b3bab951ce2d9eb28a11e4c8680a44066eb7b0a5","date":"2015-07-30T19:26:23.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Fix resolved_cases, which was broken due to the change in `cases` return value\n"},{"hash":"2db211da5196fe4b278a2507238b2a72f0acf1bc","date":"2015-07-30T19:26:52.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Prevent crash when a union's discriminant is a primitive type and `discriminant_type` is called\n"},{"hash":"c4890cf24eae1a60e2805367b05d6dc5dee284db","date":"2015-07-30T19:27:16.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Remove unused PRIMITIVES array\n"},{"hash":"f102c510a8fb9293be9e0ae807bcbe4aa808af6c","date":"2015-07-30T22:28:33.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Extract `Union#resolved_case`\n"},{"hash":"e56ecd0d4bec9b4e722c09ff1bd7f6f5a9fd2674","date":"2015-08-03T19:08:06.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Significant update to go code generator:\n\n- Rework union constructors\n- Add support for non-enum based union discriminants\n- Refactor naming methods\n"},{"hash":"fea8c29d1a0668799cff0f671904ebeea247b425","date":"2015-08-04T23:07:18.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Fix union and enum typedefs for generated go:\n\n- Add forwarding methods so typedefs still satisfy the union and enum\ninterfaces\n- Add `resolved_type` helper to typedefs\n"},{"hash":"3c76c3e24b943686bf646cfca8f6ea581bd68afc","date":"2015-08-05T21:01:18.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add union constructors and accessors to union typedefs in golang\n"},{"hash":"3fbd9d3c7c0ee4f0784398d015dd10064f29ed34","date":"2015-08-25T04:12:33.000Z","author":{"name":"Cheng Kuan","email":"codeck@users.noreply.github.com"},"message":"fix compile error of ThresholdIndices.java"},{"hash":"99f0b33f8a89b9767ba9e9be59306c29ee98b277","date":"2015-09-03T17:31:33.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Update naming for java generator\n"},{"hash":"10cc886dac0cc2290c336e4966ada4d6a104d502","date":"2015-09-03T17:32:49.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Remove timestamp from generated files\n"},{"hash":"6c8d27a3b2314be1fc352f53fcb22e418ba296b5","date":"2015-09-15T21:00:20.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Merge pull request #13 from codeck/patch-1\n\nfix compile error of ThresholdIndices.java"},{"hash":"440a00bd1ad8edd90498a49284782c61625dc9a6","date":"2015-10-06T18:40:29.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Fix type for enum constants in go\n"},{"hash":"3f1b5f5c17a468caaf2deb09ae16d4b6c4ec4a7e","date":"2015-11-10T01:21:39.000Z","author":{"name":"Bartek Nowotarski","email":"bartek@nowotarski.info"},"message":"Write String length"},{"hash":"f00da28b52336521c4e3e6e768e4ad55994574e5","date":"2015-11-10T01:25:30.000Z","author":{"name":"Jed McCaleb","email":"swamp12@yahoo.com"},"message":"Merge pull request #14 from stellar/java-write-string\n\nWrite String length"},{"hash":"0d93d1deff8045b5c1961bfbc4a655cbeb631cea","date":"2015-11-10T01:38:41.000Z","author":{"name":"Bartek Nowotarski","email":"bartek@nowotarski.info"},"message":"Boolean value IO java fix\n\nShould be 4 bytes."},{"hash":"480ac5cee1ce9551d594d158cc648aba4afc02da","date":"2015-11-10T16:15:36.000Z","author":{"name":"Bartek Nowotarski","email":"bartek@nowotarski.info"},"message":"Merge pull request #15 from stellar/boolean-java-fix\n\nBoolean value IO java fix"},{"hash":"363c9e6c9ba1254b22b7094df3e67ba369e3e393","date":"2015-11-11T18:48:00.000Z","author":{"name":"Bartek Nowotarski","email":"bartek@nowotarski.info"},"message":"Capitalize methods\n"},{"hash":"486a09cad897739ed91e78c567aaddeda9c29b71","date":"2015-11-12T22:46:19.000Z","author":{"name":"Bartek Nowotarski","email":"bartek@nowotarski.info"},"message":"Fix padding\n"},{"hash":"6a3ecb09f13c99b0bbdb5f8fa76627382c6a59bd","date":"2015-11-12T22:50:30.000Z","author":{"name":"Bartek Nowotarski","email":"bartek@nowotarski.info"},"message":"Merge pull request #16 from stellar/java-capitalize-first\n\nCapitalize methods"},{"hash":"9ade957d73ee61756a59bec7650102c95975fb72","date":"2015-11-12T23:42:18.000Z","author":{"name":"Bartek Nowotarski","email":"bartek@nowotarski.info"},"message":"Merge pull request #17 from stellar/fix-padding\n\nFix padding in Java"},{"hash":"3c340328c60d6ac4d66bf37cdb3ccf1188832bad","date":"2015-11-13T11:14:14.000Z","author":{"name":"Raymen Scholten","email":"raymens@users.noreply.github.com"},"message":"doc Fixed readme code sample"},{"hash":"0b3397e492782e2b976443ddc8b62690595ab612","date":"2015-11-16T16:32:18.000Z","author":{"name":"Jed McCaleb","email":"swamp12@yahoo.com"},"message":"Merge pull request #19 from raymens/patch-1\n\ndoc Fixed readme code sample"},{"hash":"ebbaaf66498f2dc0198482065ad03923bfb45afc","date":"2016-02-25T12:34:51.000Z","author":{"name":"Bartek Nowotarski","email":"bartek@nowotarski.info"},"message":"Fix decode in render_union in java\n"},{"hash":"3462e01dba0de69716834437cae8e6163d72caa2","date":"2017-01-18T20:42:43.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Fixes #23: adds support for enum value identifiers\n"},{"hash":"a6f1a9a10d7c3a0c61048f46cf1b413f23eaa792","date":"2017-01-18T20:53:03.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"update tested rubies\n"},{"hash":"1ed457311b6dc81c739f3d0b526ea21d8c1edfa2","date":"2017-01-18T21:00:09.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Update activesupport to 5, fixing 2.4.0 breakage\n"},{"hash":"4c9b4a55bb392c5f4f1d9719d1eddf5e62f96a10","date":"2017-01-18T21:04:20.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Merge pull request #24 from stellar/enum-idents\n\nFixes #23: adds support for enum value identifiers"},{"hash":"de249e05240dd08c3d1eafe2106db261de33693c","date":"2017-01-25T19:53:58.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Add sizing restrictions to generated go code\n"},{"hash":"4f886e8cad44ac09bc8a1d5a1c5ed49104380225","date":"2017-01-25T19:56:37.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Remove pry helper\n"},{"hash":"6592ff5a1d82cd5600bf0d0e255af6e44ed660ba","date":"2017-01-25T19:57:46.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Merge pull request #22 from stellar/length-checks\n\nAdd sizing restrictions to generated go code"},{"hash":"cf69f685f5a4b6870df59db6341eb0fee955c0b5","date":"2017-02-07T17:04:13.000Z","author":{"name":"Bartek Nowotarski","email":"bartek@nowotarski.info"},"message":"Merge pull request #25 from stellar/java-decode-fix\n\nFix decode in render_union in java"},{"hash":"f83fd309c983450638f85c687f2e3f5f610e5480","date":"2017-04-05T15:32:54.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"golang: Render size methods for opaque types\n"},{"hash":"f37767c20ec4aa76afdb2abcede7f67b4cca6deb","date":"2017-04-05T15:53:38.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Merge pull request #26 from stellar/byte-sized\n\ngolang: Render size methods for opaque types"},{"hash":"7e908067beced07e079f727df84204b6f3d5f5fc","date":"2017-04-05T17:47:27.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Fix more size issues\n\n- Added support for union arms\n- Added support for opaque fields\n"},{"hash":"cc3d4365d59439e1c4e3aa6609da52dda65486a4","date":"2017-04-05T17:49:23.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Merge pull request #27 from stellar/byte-sized-2\n\nFix more size issues"},{"hash":"b77810594c4d19025f4b3a9e75d820faeb9f16f8","date":"2017-08-21T16:46:50.000Z","author":{"name":"Bartek Nowotarski","email":"bartek@nowotarski.info"},"message":"Fix XDR Data Stream in Java\n\nThis commit contains several bugfixes and improvements:\n- `XdrDataOutputStream` class is now padding opaque data.\n- `XdrDataInputStream` class is now throwing an IOException when padding\n  bytes are not zeros.\n- Made methods that shouldn't be used outside of `XdrDataOutputStream`\n  and `XdrDataInputStream` classes private.\n- Removed unused imports and variables.\n"},{"hash":"240cf560ce16ce874c64b211c63629d0336f9867","date":"2017-08-21T17:31:36.000Z","author":{"name":"Bartek Nowotarski","email":"bartek@nowotarski.info"},"message":"Merge pull request #28 from stellar/java-fixes\n\nFix XDR Data Stream in Java"},{"hash":"5029210dc93e248425b4ff9fb38844f155dbc9e7","date":"2017-09-22T12:59:49.000Z","author":{"name":"Bartek Nowotarski","email":"bartek@nowotarski.info"},"message":"Fix pad() method in XdrInputStream\n\nXdrInputStream.pad() method was calling internal InputStream read()\nmethod without updating the internal mCount counter. This was fixed by\nusing XdrInputStream.read() wrapper that handles counter updates.\n"},{"hash":"a9b8e9f74ee039cc6a0e3af32d4151d86a33fda1","date":"2017-10-03T12:17:35.000Z","author":{"name":"Bartek Nowotarski","email":"bartek@nowotarski.info"},"message":"Merge pull request #29 from stellar/fix-xdr-input-padding-counter\n\nFix pad() method in XdrInputStream"},{"hash":"a1e8cfaf4f2ce599d3f36816d0fc5811eecafa2a","date":"2017-10-09T15:53:57.000Z","author":{"name":"Bartek Nowotarski","email":"bartek@nowotarski.info"},"message":"UTF-8 support for strings\n"},{"hash":"1c80a3bf3f2a67ca081a7646ab066c39fa715a38","date":"2017-10-16T15:40:53.000Z","author":{"name":"Bartek Nowotarski","email":"bartek@nowotarski.info"},"message":"Merge pull request #30 from stellar/java-utf8\n\nUTF-8 support for strings"},{"hash":"e29a93e248f2ae97ec783949676b4293a67b768e","date":"2018-01-08T12:56:41.000Z","author":{"name":"Bartek Nowotarski","email":"bartek@nowotarski.info"},"message":"Update README.md"},{"hash":"2f496bd08eb9037eddc573c0ec0b6accaff44fe0","date":"2018-02-12T14:39:06.000Z","author":{"name":"Bartek Nowotarski","email":"bartek@nowotarski.info"},"message":"Use Charset instead of StandardCharsets\n\njava.nio.charset.StandardCharsets is not suported on Android < 19.\n"},{"hash":"c683684abb3cb2c8b8c3dc12dc7c6cc9bf1e3b60","date":"2018-02-13T21:56:31.000Z","author":{"name":"Scott Fleckenstein","email":"nullstyle@gmail.com"},"message":"Merge pull request #31 from stellar/java-charset-android\n\nUse Charset instead of StandardCharsets"}]